"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

type Article {
  author: String
  category: ENUM_ARTICLE_CATEGORY
  content: String
  coverPhoto: UploadFileEntityResponse
  createdAt: DateTime
  embedURL: String
  extraInfo: String
  homePageLocation: ENUM_ARTICLE_HOMEPAGELOCATION
  originallyPublished: DateTime
  publishedAt: DateTime
  seoMetaDescription: String
  slug: String!
  tagline: String
  thumbnail: UploadFileEntityResponse
  title: String
  updatedAt: DateTime
}

type ArticleEntity {
  attributes: Article
  id: ID
}

type ArticleEntityResponse {
  data: ArticleEntity
}

type ArticleEntityResponseCollection {
  data: [ArticleEntity!]!
  meta: ResponseCollectionMeta!
}

input ArticleFiltersInput {
  and: [ArticleFiltersInput]
  author: StringFilterInput
  category: StringFilterInput
  content: StringFilterInput
  createdAt: DateTimeFilterInput
  embedURL: StringFilterInput
  extraInfo: StringFilterInput
  homePageLocation: StringFilterInput
  id: IDFilterInput
  not: ArticleFiltersInput
  or: [ArticleFiltersInput]
  originallyPublished: DateTimeFilterInput
  publishedAt: DateTimeFilterInput
  seoMetaDescription: StringFilterInput
  slug: StringFilterInput
  tagline: StringFilterInput
  title: StringFilterInput
  updatedAt: DateTimeFilterInput
}

type ArtistEditorialPage {
  ExhibitionsSection: ComponentArtistEditorialPageExhibitions
  FeaturedWorkSection: ComponentArtistEditorialPageFeaturedWork
  PressSection: ComponentArtistEditorialPagePress
  ReleasesSection: ComponentArtistEditorialPageProjectsCreated
  SpectrumArticlesSection: ComponentArtistEditorialPageSpectrumArticles
  artistName: String!
  avatar: UploadFileEntityResponse
  bio: String
  createdAt: DateTime
  headerImage: UploadFileEntityResponse
  instagram: String
  publishedAt: DateTime
  seoMetaDescription: String
  slug: String!
  twitter: String
  updatedAt: DateTime
  userProfileAddress: String
  website: String
}

type ArtistEditorialPageEntity {
  attributes: ArtistEditorialPage
  id: ID
}

type ArtistEditorialPageEntityResponse {
  data: ArtistEditorialPageEntity
}

type ArtistEditorialPageEntityResponseCollection {
  data: [ArtistEditorialPageEntity!]!
  meta: ResponseCollectionMeta!
}

input ArtistEditorialPageFiltersInput {
  ExhibitionsSection: ComponentArtistEditorialPageExhibitionsFiltersInput
  FeaturedWorkSection: ComponentArtistEditorialPageFeaturedWorkFiltersInput
  PressSection: ComponentArtistEditorialPagePressFiltersInput
  ReleasesSection: ComponentArtistEditorialPageProjectsCreatedFiltersInput
  SpectrumArticlesSection: ComponentArtistEditorialPageSpectrumArticlesFiltersInput
  and: [ArtistEditorialPageFiltersInput]
  artistName: StringFilterInput
  bio: StringFilterInput
  createdAt: DateTimeFilterInput
  id: IDFilterInput
  instagram: StringFilterInput
  not: ArtistEditorialPageFiltersInput
  or: [ArtistEditorialPageFiltersInput]
  publishedAt: DateTimeFilterInput
  seoMetaDescription: StringFilterInput
  slug: StringFilterInput
  twitter: StringFilterInput
  updatedAt: DateTimeFilterInput
  userProfileAddress: StringFilterInput
  website: StringFilterInput
}

input ArtistEditorialPageFiltersInput_remote_rel_projects_metadataartistPage {
  ExhibitionsSection: ComponentArtistEditorialPageExhibitionsFiltersInput
  FeaturedWorkSection: ComponentArtistEditorialPageFeaturedWorkFiltersInput
  PressSection: ComponentArtistEditorialPagePressFiltersInput
  ReleasesSection: ComponentArtistEditorialPageProjectsCreatedFiltersInput_remote_rel_projects_metadataartistPage
  SpectrumArticlesSection: ComponentArtistEditorialPageSpectrumArticlesFiltersInput
  and: [ArtistEditorialPageFiltersInput]
  artistName: StringFilterInput
  bio: StringFilterInput
  createdAt: DateTimeFilterInput
  id: IDFilterInput
  instagram: StringFilterInput
  not: ArtistEditorialPageFiltersInput
  or: [ArtistEditorialPageFiltersInput]
  publishedAt: DateTimeFilterInput
  seoMetaDescription: StringFilterInput
  slug: StringFilterInput
  twitter: StringFilterInput
  updatedAt: DateTimeFilterInput
  userProfileAddress: StringFilterInput
  website: StringFilterInput
}

"""All DiGi Artartists."""
type artists {
  created_at: timestamptz
  is_ab_staff: Boolean
  is_curator: Boolean

  """An object relationship"""
  most_recent_hosted_project: projects_metadata
  most_recent_hosted_project_id: String

  """An object relationship"""
  most_recent_project: projects_metadata
  most_recent_project_id: String

  """An array relationship"""
  projects(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """An aggregate relationship"""
  projects_aggregate(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!
  public_address: String
  tos_accepted_at: timestamptz

  """An object relationship"""
  user: users
  viewed_warning_banner: Boolean
}

"""
aggregated selection of "artists"
"""
type artists_aggregate {
  aggregate: artists_aggregate_fields
  nodes: [artists!]!
}

"""
aggregate fields of "artists"
"""
type artists_aggregate_fields {
  count(columns: [artists_select_column!], distinct: Boolean): Int!
  max: artists_max_fields
  min: artists_min_fields
}

"""
Boolean expression to filter rows from the table "artists". All fields are combined with a logical 'AND'.
"""
input artists_bool_exp {
  _and: [artists_bool_exp!]
  _not: artists_bool_exp
  _or: [artists_bool_exp!]
  created_at: timestamptz_comparison_exp
  is_ab_staff: Boolean_comparison_exp
  is_curator: Boolean_comparison_exp
  most_recent_hosted_project: projects_metadata_bool_exp
  most_recent_hosted_project_id: String_comparison_exp
  most_recent_project: projects_metadata_bool_exp
  most_recent_project_id: String_comparison_exp
  projects: projects_metadata_bool_exp
  projects_aggregate: projects_metadata_aggregate_bool_exp
  public_address: String_comparison_exp
  tos_accepted_at: timestamptz_comparison_exp
  user: users_bool_exp
  viewed_warning_banner: Boolean_comparison_exp
}

"""aggregate max on columns"""
type artists_max_fields {
  created_at: timestamptz
  most_recent_hosted_project_id: String
  most_recent_project_id: String
  public_address: String
  tos_accepted_at: timestamptz
}

"""aggregate min on columns"""
type artists_min_fields {
  created_at: timestamptz
  most_recent_hosted_project_id: String
  most_recent_project_id: String
  public_address: String
  tos_accepted_at: timestamptz
}

"""Ordering options when selecting data from "artists"."""
input artists_order_by {
  created_at: order_by
  is_ab_staff: order_by
  is_curator: order_by
  most_recent_hosted_project: projects_metadata_order_by
  most_recent_hosted_project_id: order_by
  most_recent_project: projects_metadata_order_by
  most_recent_project_id: order_by
  projects_aggregate: projects_metadata_aggregate_order_by
  public_address: order_by
  tos_accepted_at: order_by
  user: users_order_by
  viewed_warning_banner: order_by
}

"""
select columns of table "artists"
"""
enum artists_select_column {
  """column name"""
  created_at

  """column name"""
  is_ab_staff

  """column name"""
  is_curator

  """column name"""
  most_recent_hosted_project_id

  """column name"""
  most_recent_project_id

  """column name"""
  public_address

  """column name"""
  tos_accepted_at

  """column name"""
  viewed_warning_banner
}

"""
Streaming cursor of the table "artists"
"""
input artists_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: artists_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input artists_stream_cursor_value_input {
  created_at: timestamptz
  is_ab_staff: Boolean
  is_curator: Boolean
  most_recent_hosted_project_id: String
  most_recent_project_id: String
  public_address: String
  tos_accepted_at: timestamptz
  viewed_warning_banner: Boolean
}

input AuthenticateInput {
  contracts: [String!]
  message: String!
  mixpanelId: String
  publicAddress: String!
  signature: String!
}

type AuthenticateOutput {
  expiration: Int!
  jwt: String!
}

type AuthMessageOutput {
  authMessage: String!
}

"""
columns and relationships of "bids_metadata"
"""
type bids_metadata {
  bid_value: String!
  bidder_address: String!

  """An object relationship"""
  core_contract: contracts_metadata!
  core_contract_address: String!
  id: String!

  """An object relationship"""
  minter: minters_metadata!
  minter_address: String!

  """An object relationship"""
  project: projects_metadata!
  project_id: String!
  time_of_bid: timestamptz!

  """An object relationship"""
  token: tokens_metadata
  token_id: String

  """An object relationship"""
  user: users!
  winning_bid: Boolean
}

"""
aggregated selection of "bids_metadata"
"""
type bids_metadata_aggregate {
  aggregate: bids_metadata_aggregate_fields
  nodes: [bids_metadata!]!
}

input bids_metadata_aggregate_bool_exp {
  bool_and: bids_metadata_aggregate_bool_exp_bool_and
  bool_or: bids_metadata_aggregate_bool_exp_bool_or
  count: bids_metadata_aggregate_bool_exp_count
}

input bids_metadata_aggregate_bool_exp_bool_and {
  arguments: bids_metadata_select_column_bids_metadata_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: bids_metadata_bool_exp
  predicate: Boolean_comparison_exp!
}

input bids_metadata_aggregate_bool_exp_bool_or {
  arguments: bids_metadata_select_column_bids_metadata_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: bids_metadata_bool_exp
  predicate: Boolean_comparison_exp!
}

input bids_metadata_aggregate_bool_exp_count {
  arguments: [bids_metadata_select_column!]
  distinct: Boolean
  filter: bids_metadata_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "bids_metadata"
"""
type bids_metadata_aggregate_fields {
  count(columns: [bids_metadata_select_column!], distinct: Boolean): Int!
  max: bids_metadata_max_fields
  min: bids_metadata_min_fields
}

"""
order by aggregate values of table "bids_metadata"
"""
input bids_metadata_aggregate_order_by {
  count: order_by
  max: bids_metadata_max_order_by
  min: bids_metadata_min_order_by
}

"""
Boolean expression to filter rows from the table "bids_metadata". All fields are combined with a logical 'AND'.
"""
input bids_metadata_bool_exp {
  _and: [bids_metadata_bool_exp!]
  _not: bids_metadata_bool_exp
  _or: [bids_metadata_bool_exp!]
  bid_value: String_comparison_exp
  bidder_address: String_comparison_exp
  core_contract: contracts_metadata_bool_exp
  core_contract_address: String_comparison_exp
  id: String_comparison_exp
  minter: minters_metadata_bool_exp
  minter_address: String_comparison_exp
  project: projects_metadata_bool_exp
  project_id: String_comparison_exp
  time_of_bid: timestamptz_comparison_exp
  token: tokens_metadata_bool_exp
  token_id: String_comparison_exp
  user: users_bool_exp
  winning_bid: Boolean_comparison_exp
}

"""aggregate max on columns"""
type bids_metadata_max_fields {
  bid_value: String
  bidder_address: String
  core_contract_address: String
  id: String
  minter_address: String
  project_id: String
  time_of_bid: timestamptz
  token_id: String
}

"""
order by max() on columns of table "bids_metadata"
"""
input bids_metadata_max_order_by {
  bid_value: order_by
  bidder_address: order_by
  core_contract_address: order_by
  id: order_by
  minter_address: order_by
  project_id: order_by
  time_of_bid: order_by
  token_id: order_by
}

"""aggregate min on columns"""
type bids_metadata_min_fields {
  bid_value: String
  bidder_address: String
  core_contract_address: String
  id: String
  minter_address: String
  project_id: String
  time_of_bid: timestamptz
  token_id: String
}

"""
order by min() on columns of table "bids_metadata"
"""
input bids_metadata_min_order_by {
  bid_value: order_by
  bidder_address: order_by
  core_contract_address: order_by
  id: order_by
  minter_address: order_by
  project_id: order_by
  time_of_bid: order_by
  token_id: order_by
}

"""Ordering options when selecting data from "bids_metadata"."""
input bids_metadata_order_by {
  bid_value: order_by
  bidder_address: order_by
  core_contract: contracts_metadata_order_by
  core_contract_address: order_by
  id: order_by
  minter: minters_metadata_order_by
  minter_address: order_by
  project: projects_metadata_order_by
  project_id: order_by
  time_of_bid: order_by
  token: tokens_metadata_order_by
  token_id: order_by
  user: users_order_by
  winning_bid: order_by
}

"""
select columns of table "bids_metadata"
"""
enum bids_metadata_select_column {
  """column name"""
  bid_value

  """column name"""
  bidder_address

  """column name"""
  core_contract_address

  """column name"""
  id

  """column name"""
  minter_address

  """column name"""
  project_id

  """column name"""
  time_of_bid

  """column name"""
  token_id

  """column name"""
  winning_bid
}

"""
select "bids_metadata_aggregate_bool_exp_bool_and_arguments_columns" columns of table "bids_metadata"
"""
enum bids_metadata_select_column_bids_metadata_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  winning_bid
}

"""
select "bids_metadata_aggregate_bool_exp_bool_or_arguments_columns" columns of table "bids_metadata"
"""
enum bids_metadata_select_column_bids_metadata_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  winning_bid
}

"""
Streaming cursor of the table "bids_metadata"
"""
input bids_metadata_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: bids_metadata_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input bids_metadata_stream_cursor_value_input {
  bid_value: String
  bidder_address: String
  core_contract_address: String
  id: String
  minter_address: String
  project_id: String
  time_of_bid: timestamptz
  token_id: String
  winning_bid: Boolean
}

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
columns and relationships of "categories"
"""
type categories {
  name: String!

  """An object relationship"""
  project_vertical_category: project_vertical_categories
}

"""
Boolean expression to filter rows from the table "categories". All fields are combined with a logical 'AND'.
"""
input categories_bool_exp {
  _and: [categories_bool_exp!]
  _not: categories_bool_exp
  _or: [categories_bool_exp!]
  name: String_comparison_exp
  project_vertical_category: project_vertical_categories_bool_exp
}

enum categories_enum {
  collaborations
  collections
  engine
  explorations
  unassigned
}

"""
Boolean expression to compare columns of type "categories_enum". All fields are combined with logical 'AND'.
"""
input categories_enum_comparison_exp {
  _eq: categories_enum
  _in: [categories_enum!]
  _is_null: Boolean
  _neq: categories_enum
  _nin: [categories_enum!]
}

"""Ordering options when selecting data from "categories"."""
input categories_order_by {
  name: order_by
  project_vertical_category: project_vertical_categories_order_by
}

"""
select columns of table "categories"
"""
enum categories_select_column {
  """column name"""
  name
}

"""
Streaming cursor of the table "categories"
"""
input categories_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: categories_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input categories_stream_cursor_value_input {
  name: String
}

type ComponentArtistEditorialPageExhibitions {
  exhibitionItem(filters: ComponentGalleryGridItemGalleryGridItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentGalleryGridItemGalleryGridItem]
  id: ID!
}

input ComponentArtistEditorialPageExhibitionsFiltersInput {
  and: [ComponentArtistEditorialPageExhibitionsFiltersInput]
  exhibitionItem: ComponentGalleryGridItemGalleryGridItemFiltersInput
  not: ComponentArtistEditorialPageExhibitionsFiltersInput
  or: [ComponentArtistEditorialPageExhibitionsFiltersInput]
}

type ComponentArtistEditorialPageFeaturedWork {
  FeaturedWorkItem(filters: ComponentImageWithCaptionImageWithCaptionFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentImageWithCaptionImageWithCaption]
  id: ID!
}

input ComponentArtistEditorialPageFeaturedWorkFiltersInput {
  FeaturedWorkItem: ComponentImageWithCaptionImageWithCaptionFiltersInput
  and: [ComponentArtistEditorialPageFeaturedWorkFiltersInput]
  not: ComponentArtistEditorialPageFeaturedWorkFiltersInput
  or: [ComponentArtistEditorialPageFeaturedWorkFiltersInput]
}

type ComponentArtistEditorialPagePress {
  PressItem(filters: ComponentPressItemPressItemFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentPressItemPressItem]
  id: ID!
}

input ComponentArtistEditorialPagePressFiltersInput {
  PressItem: ComponentPressItemPressItemFiltersInput
  and: [ComponentArtistEditorialPagePressFiltersInput]
  not: ComponentArtistEditorialPagePressFiltersInput
  or: [ComponentArtistEditorialPagePressFiltersInput]
}

type ComponentArtistEditorialPageProjectsCreated {
  id: ID!
  projectMetadata(filters: ComponentProjectMetadataProjectMetadataFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentProjectMetadataProjectMetadata]
}

input ComponentArtistEditorialPageProjectsCreatedFiltersInput {
  and: [ComponentArtistEditorialPageProjectsCreatedFiltersInput]
  not: ComponentArtistEditorialPageProjectsCreatedFiltersInput
  or: [ComponentArtistEditorialPageProjectsCreatedFiltersInput]
  projectMetadata: ComponentProjectMetadataProjectMetadataFiltersInput
}

input ComponentArtistEditorialPageProjectsCreatedFiltersInput_remote_rel_projects_metadataartistPage {
  and: [ComponentArtistEditorialPageProjectsCreatedFiltersInput]
  not: ComponentArtistEditorialPageProjectsCreatedFiltersInput
  or: [ComponentArtistEditorialPageProjectsCreatedFiltersInput]
  projectMetadata: ComponentProjectMetadataProjectMetadataFiltersInput_remote_rel_projects_metadataartistPage
}

type ComponentArtistEditorialPageSpectrumArticles {
  SpectrumArticle(filters: ComponentSpectrumArticleSpectrumArticleFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentSpectrumArticleSpectrumArticle]
  id: ID!
}

input ComponentArtistEditorialPageSpectrumArticlesFiltersInput {
  SpectrumArticle: ComponentSpectrumArticleSpectrumArticleFiltersInput
  and: [ComponentArtistEditorialPageSpectrumArticlesFiltersInput]
  not: ComponentArtistEditorialPageSpectrumArticlesFiltersInput
  or: [ComponentArtistEditorialPageSpectrumArticlesFiltersInput]
}

type ComponentGalleryGridItemGalleryGridItem {
  id: ID!
  image: UploadFileEntityResponse
  subtitle: String
  title: String
  url: String
}

input ComponentGalleryGridItemGalleryGridItemFiltersInput {
  and: [ComponentGalleryGridItemGalleryGridItemFiltersInput]
  not: ComponentGalleryGridItemGalleryGridItemFiltersInput
  or: [ComponentGalleryGridItemGalleryGridItemFiltersInput]
  subtitle: StringFilterInput
  title: StringFilterInput
  url: StringFilterInput
}

type ComponentImageWithCaptionImageWithCaption {
  caption: String
  id: ID!
  image: UploadFileEntityResponse
  url: String
}

input ComponentImageWithCaptionImageWithCaptionFiltersInput {
  and: [ComponentImageWithCaptionImageWithCaptionFiltersInput]
  caption: StringFilterInput
  not: ComponentImageWithCaptionImageWithCaptionFiltersInput
  or: [ComponentImageWithCaptionImageWithCaptionFiltersInput]
  url: StringFilterInput
}

type ComponentPressItemPressItem {
  date: Date
  id: ID!
  publication: String
  title: String
  url: String
}

input ComponentPressItemPressItemFiltersInput {
  and: [ComponentPressItemPressItemFiltersInput]
  date: DateFilterInput
  not: ComponentPressItemPressItemFiltersInput
  or: [ComponentPressItemPressItemFiltersInput]
  publication: StringFilterInput
  title: StringFilterInput
  url: StringFilterInput
}

type ComponentProjectMetadataProjectMetadata {
  Project: projects_metadata
  id: ID!
  projectId: String
}

input ComponentProjectMetadataProjectMetadataFiltersInput {
  and: [ComponentProjectMetadataProjectMetadataFiltersInput]
  not: ComponentProjectMetadataProjectMetadataFiltersInput
  or: [ComponentProjectMetadataProjectMetadataFiltersInput]
  projectId: StringFilterInput
}

input ComponentProjectMetadataProjectMetadataFiltersInput_remote_rel_projects_metadataartistPage {
  and: [ComponentProjectMetadataProjectMetadataFiltersInput]
  not: ComponentProjectMetadataProjectMetadataFiltersInput
  or: [ComponentProjectMetadataProjectMetadataFiltersInput]
  projectId: StringFilterInput_remote_rel_projects_metadataartistPage
}

type ComponentReleaseInfoReleaseInfo {
  AuctionEndTime: DateTime
  AuctionStartTime: DateTime!
  CustomAuctionName: String
  CustomDescription: String
  EndPrice: String
  MinterMaxInvocations: Int
  MinterType: MinterInfoEntityResponse!
  StartPrice: String
  id: ID!
}

input ComponentReleaseInfoReleaseInfoFiltersInput {
  AuctionEndTime: DateTimeFilterInput
  AuctionStartTime: DateTimeFilterInput
  CustomAuctionName: StringFilterInput
  CustomDescription: StringFilterInput
  EndPrice: StringFilterInput
  MinterMaxInvocations: IntFilterInput
  MinterType: MinterInfoFiltersInput
  StartPrice: StringFilterInput
  and: [ComponentReleaseInfoReleaseInfoFiltersInput]
  not: ComponentReleaseInfoReleaseInfoFiltersInput
  or: [ComponentReleaseInfoReleaseInfoFiltersInput]
}

type ComponentSpectrumArticleSpectrumArticle {
  id: ID!
  previewImage: UploadFileEntityResponse
  title: String
  url: String
}

input ComponentSpectrumArticleSpectrumArticleFiltersInput {
  and: [ComponentSpectrumArticleSpectrumArticleFiltersInput]
  not: ComponentSpectrumArticleSpectrumArticleFiltersInput
  or: [ComponentSpectrumArticleSpectrumArticleFiltersInput]
  title: StringFilterInput
  url: StringFilterInput
}

"""
Users who have write-access to a given DiGi Artor Engine smart contract.
"""
type contract_allowlistings {
  """An object relationship"""
  contract: contracts_metadata
  contract_address: String!

  """An object relationship"""
  user: users
  user_address: String!
}

"""
order by aggregate values of table "contract_allowlistings"
"""
input contract_allowlistings_aggregate_order_by {
  count: order_by
  max: contract_allowlistings_max_order_by
  min: contract_allowlistings_min_order_by
}

"""
Boolean expression to filter rows from the table "contract_allowlistings". All fields are combined with a logical 'AND'.
"""
input contract_allowlistings_bool_exp {
  _and: [contract_allowlistings_bool_exp!]
  _not: contract_allowlistings_bool_exp
  _or: [contract_allowlistings_bool_exp!]
  contract: contracts_metadata_bool_exp
  contract_address: String_comparison_exp
  user: users_bool_exp
  user_address: String_comparison_exp
}

"""
order by max() on columns of table "contract_allowlistings"
"""
input contract_allowlistings_max_order_by {
  contract_address: order_by
  user_address: order_by
}

"""
order by min() on columns of table "contract_allowlistings"
"""
input contract_allowlistings_min_order_by {
  contract_address: order_by
  user_address: order_by
}

"""Ordering options when selecting data from "contract_allowlistings"."""
input contract_allowlistings_order_by {
  contract: contracts_metadata_order_by
  contract_address: order_by
  user: users_order_by
  user_address: order_by
}

"""
select columns of table "contract_allowlistings"
"""
enum contract_allowlistings_select_column {
  """column name"""
  contract_address

  """column name"""
  user_address
}

"""
Streaming cursor of the table "contract_allowlistings"
"""
input contract_allowlistings_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: contract_allowlistings_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input contract_allowlistings_stream_cursor_value_input {
  contract_address: String
  user_address: String
}

"""
columns and relationships of "contract_type_names"
"""
type contract_type_names {
  name: String!
}

"""
Boolean expression to filter rows from the table "contract_type_names". All fields are combined with a logical 'AND'.
"""
input contract_type_names_bool_exp {
  _and: [contract_type_names_bool_exp!]
  _not: contract_type_names_bool_exp
  _or: [contract_type_names_bool_exp!]
  name: String_comparison_exp
}

enum contract_type_names_enum {
  GenArt721CoreV0
  GenArt721CoreV1
  GenArt721CoreV2_ENGINE_FLEX
  GenArt721CoreV2_PBAB
  GenArt721CoreV3
  GenArt721CoreV3_Engine
  GenArt721CoreV3_Engine_Flex
}

"""
Boolean expression to compare columns of type "contract_type_names_enum". All fields are combined with logical 'AND'.
"""
input contract_type_names_enum_comparison_exp {
  _eq: contract_type_names_enum
  _in: [contract_type_names_enum!]
  _is_null: Boolean
  _neq: contract_type_names_enum
  _nin: [contract_type_names_enum!]
}

"""Ordering options when selecting data from "contract_type_names"."""
input contract_type_names_order_by {
  name: order_by
}

"""
select columns of table "contract_type_names"
"""
enum contract_type_names_select_column {
  """column name"""
  name
}

"""
Streaming cursor of the table "contract_type_names"
"""
input contract_type_names_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: contract_type_names_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input contract_type_names_stream_cursor_value_input {
  name: String
}

"""
columns and relationships of "contract_types"
"""
type contract_types {
  abi(
    """JSON select path"""
    path: String
  ): jsonb
  project_configuration_schema(
    """JSON select path"""
    path: String
  ): jsonb
  type: contract_type_names_enum!
}

"""
Boolean expression to filter rows from the table "contract_types". All fields are combined with a logical 'AND'.
"""
input contract_types_bool_exp {
  _and: [contract_types_bool_exp!]
  _not: contract_types_bool_exp
  _or: [contract_types_bool_exp!]
  abi: jsonb_comparison_exp
  project_configuration_schema: jsonb_comparison_exp
  type: contract_type_names_enum_comparison_exp
}

"""Ordering options when selecting data from "contract_types"."""
input contract_types_order_by {
  abi: order_by
  project_configuration_schema: order_by
  type: order_by
}

"""
select columns of table "contract_types"
"""
enum contract_types_select_column {
  """column name"""
  abi

  """column name"""
  project_configuration_schema

  """column name"""
  type
}

"""
Streaming cursor of the table "contract_types"
"""
input contract_types_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: contract_types_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input contract_types_stream_cursor_value_input {
  abi: jsonb
  project_configuration_schema: jsonb
  type: contract_type_names_enum
}

"""
This table details the contract deployments & metadata for DiGi Artand all Engine partners. Updates are made when a core contract is deployed.
"""
type contracts_metadata {
  address: String!
  admin: String

  """An array relationship"""
  allowlisted_users(
    """distinct select on columns"""
    distinct_on: [contract_allowlistings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contract_allowlistings_order_by!]

    """filter the rows returned"""
    where: contract_allowlistings_bool_exp
  ): [contract_allowlistings!]!
  bucket_name: String
  contract_type: contract_type_names_enum!
  curation_registry_address: String

  """An object relationship"""
  default_vertical: project_verticals
  dependency_registry_address: String
  generator_url: String
  minter_address: String

  """An object relationship"""
  minter_filter: minter_filters_metadata
  minter_filter_address: String
  name: String

  """
  A computed field, executes function "new_projects_forbidden"
  """
  new_projects_forbidden: Boolean
  new_projects_forbidden_offchain: Boolean!
  new_projects_forbidden_onchain: Boolean!
  partner_id: Int
  preferred_arweave_gateway: String
  preferred_ipfs_gateway: String

  """An array relationship"""
  projects(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """An aggregate relationship"""
  projects_aggregate(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!
  render_provider_address: String
  render_provider_percentage: Int
  render_provider_secondary_sales_address: String
  render_provider_secondary_sales_bps: Int
  token_base_url: String

  """An object relationship"""
  type: contract_types
  updated_at: timestamp

  """
  A computed field, executes function "user_is_allowlisted"
  """
  user_is_allowlisted: Boolean
}

"""
aggregated selection of "contracts_metadata"
"""
type contracts_metadata_aggregate {
  aggregate: contracts_metadata_aggregate_fields
  nodes: [contracts_metadata!]!
}

input contracts_metadata_aggregate_bool_exp {
  bool_and: contracts_metadata_aggregate_bool_exp_bool_and
  bool_or: contracts_metadata_aggregate_bool_exp_bool_or
  count: contracts_metadata_aggregate_bool_exp_count
}

input contracts_metadata_aggregate_bool_exp_bool_and {
  arguments: contracts_metadata_select_column_contracts_metadata_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: contracts_metadata_bool_exp
  predicate: Boolean_comparison_exp!
}

input contracts_metadata_aggregate_bool_exp_bool_or {
  arguments: contracts_metadata_select_column_contracts_metadata_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: contracts_metadata_bool_exp
  predicate: Boolean_comparison_exp!
}

input contracts_metadata_aggregate_bool_exp_count {
  arguments: [contracts_metadata_select_column!]
  distinct: Boolean
  filter: contracts_metadata_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "contracts_metadata"
"""
type contracts_metadata_aggregate_fields {
  avg: contracts_metadata_avg_fields
  count(columns: [contracts_metadata_select_column!], distinct: Boolean): Int!
  max: contracts_metadata_max_fields
  min: contracts_metadata_min_fields
  stddev: contracts_metadata_stddev_fields
  stddev_pop: contracts_metadata_stddev_pop_fields
  stddev_samp: contracts_metadata_stddev_samp_fields
  sum: contracts_metadata_sum_fields
  var_pop: contracts_metadata_var_pop_fields
  var_samp: contracts_metadata_var_samp_fields
  variance: contracts_metadata_variance_fields
}

"""
order by aggregate values of table "contracts_metadata"
"""
input contracts_metadata_aggregate_order_by {
  avg: contracts_metadata_avg_order_by
  count: order_by
  max: contracts_metadata_max_order_by
  min: contracts_metadata_min_order_by
  stddev: contracts_metadata_stddev_order_by
  stddev_pop: contracts_metadata_stddev_pop_order_by
  stddev_samp: contracts_metadata_stddev_samp_order_by
  sum: contracts_metadata_sum_order_by
  var_pop: contracts_metadata_var_pop_order_by
  var_samp: contracts_metadata_var_samp_order_by
  variance: contracts_metadata_variance_order_by
}

"""aggregate avg on columns"""
type contracts_metadata_avg_fields {
  partner_id: Float
  render_provider_percentage: Float
  render_provider_secondary_sales_bps: Float
}

"""
order by avg() on columns of table "contracts_metadata"
"""
input contracts_metadata_avg_order_by {
  partner_id: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_bps: order_by
}

"""
Boolean expression to filter rows from the table "contracts_metadata". All fields are combined with a logical 'AND'.
"""
input contracts_metadata_bool_exp {
  _and: [contracts_metadata_bool_exp!]
  _not: contracts_metadata_bool_exp
  _or: [contracts_metadata_bool_exp!]
  address: String_comparison_exp
  admin: String_comparison_exp
  allowlisted_users: contract_allowlistings_bool_exp
  bucket_name: String_comparison_exp
  contract_type: contract_type_names_enum_comparison_exp
  curation_registry_address: String_comparison_exp
  default_vertical: project_verticals_bool_exp
  dependency_registry_address: String_comparison_exp
  generator_url: String_comparison_exp
  minter_address: String_comparison_exp
  minter_filter: minter_filters_metadata_bool_exp
  minter_filter_address: String_comparison_exp
  name: String_comparison_exp
  new_projects_forbidden: Boolean_comparison_exp
  new_projects_forbidden_offchain: Boolean_comparison_exp
  new_projects_forbidden_onchain: Boolean_comparison_exp
  partner_id: Int_comparison_exp
  preferred_arweave_gateway: String_comparison_exp
  preferred_ipfs_gateway: String_comparison_exp
  projects: projects_metadata_bool_exp
  projects_aggregate: projects_metadata_aggregate_bool_exp
  render_provider_address: String_comparison_exp
  render_provider_percentage: Int_comparison_exp
  render_provider_secondary_sales_address: String_comparison_exp
  render_provider_secondary_sales_bps: Int_comparison_exp
  token_base_url: String_comparison_exp
  type: contract_types_bool_exp
  updated_at: timestamp_comparison_exp
  user_is_allowlisted: Boolean_comparison_exp
}

"""aggregate max on columns"""
type contracts_metadata_max_fields {
  address: String
  admin: String
  bucket_name: String
  curation_registry_address: String
  dependency_registry_address: String
  generator_url: String
  minter_address: String
  minter_filter_address: String
  name: String
  partner_id: Int
  preferred_arweave_gateway: String
  preferred_ipfs_gateway: String
  render_provider_address: String
  render_provider_percentage: Int
  render_provider_secondary_sales_address: String
  render_provider_secondary_sales_bps: Int
  token_base_url: String
  updated_at: timestamp
}

"""
order by max() on columns of table "contracts_metadata"
"""
input contracts_metadata_max_order_by {
  address: order_by
  admin: order_by
  bucket_name: order_by
  curation_registry_address: order_by
  dependency_registry_address: order_by
  generator_url: order_by
  minter_address: order_by
  minter_filter_address: order_by
  name: order_by
  partner_id: order_by
  preferred_arweave_gateway: order_by
  preferred_ipfs_gateway: order_by
  render_provider_address: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_address: order_by
  render_provider_secondary_sales_bps: order_by
  token_base_url: order_by
  updated_at: order_by
}

"""aggregate min on columns"""
type contracts_metadata_min_fields {
  address: String
  admin: String
  bucket_name: String
  curation_registry_address: String
  dependency_registry_address: String
  generator_url: String
  minter_address: String
  minter_filter_address: String
  name: String
  partner_id: Int
  preferred_arweave_gateway: String
  preferred_ipfs_gateway: String
  render_provider_address: String
  render_provider_percentage: Int
  render_provider_secondary_sales_address: String
  render_provider_secondary_sales_bps: Int
  token_base_url: String
  updated_at: timestamp
}

"""
order by min() on columns of table "contracts_metadata"
"""
input contracts_metadata_min_order_by {
  address: order_by
  admin: order_by
  bucket_name: order_by
  curation_registry_address: order_by
  dependency_registry_address: order_by
  generator_url: order_by
  minter_address: order_by
  minter_filter_address: order_by
  name: order_by
  partner_id: order_by
  preferred_arweave_gateway: order_by
  preferred_ipfs_gateway: order_by
  render_provider_address: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_address: order_by
  render_provider_secondary_sales_bps: order_by
  token_base_url: order_by
  updated_at: order_by
}

"""Ordering options when selecting data from "contracts_metadata"."""
input contracts_metadata_order_by {
  address: order_by
  admin: order_by
  allowlisted_users_aggregate: contract_allowlistings_aggregate_order_by
  bucket_name: order_by
  contract_type: order_by
  curation_registry_address: order_by
  default_vertical: project_verticals_order_by
  dependency_registry_address: order_by
  generator_url: order_by
  minter_address: order_by
  minter_filter: minter_filters_metadata_order_by
  minter_filter_address: order_by
  name: order_by
  new_projects_forbidden: order_by
  new_projects_forbidden_offchain: order_by
  new_projects_forbidden_onchain: order_by
  partner_id: order_by
  preferred_arweave_gateway: order_by
  preferred_ipfs_gateway: order_by
  projects_aggregate: projects_metadata_aggregate_order_by
  render_provider_address: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_address: order_by
  render_provider_secondary_sales_bps: order_by
  token_base_url: order_by
  type: contract_types_order_by
  updated_at: order_by
  user_is_allowlisted: order_by
}

"""
select columns of table "contracts_metadata"
"""
enum contracts_metadata_select_column {
  """column name"""
  address

  """column name"""
  admin

  """column name"""
  bucket_name

  """column name"""
  contract_type

  """column name"""
  curation_registry_address

  """column name"""
  dependency_registry_address

  """column name"""
  generator_url

  """column name"""
  minter_address

  """column name"""
  minter_filter_address

  """column name"""
  name

  """column name"""
  new_projects_forbidden_offchain

  """column name"""
  new_projects_forbidden_onchain

  """column name"""
  partner_id

  """column name"""
  preferred_arweave_gateway

  """column name"""
  preferred_ipfs_gateway

  """column name"""
  render_provider_address

  """column name"""
  render_provider_percentage

  """column name"""
  render_provider_secondary_sales_address

  """column name"""
  render_provider_secondary_sales_bps

  """column name"""
  token_base_url

  """column name"""
  updated_at
}

"""
select "contracts_metadata_aggregate_bool_exp_bool_and_arguments_columns" columns of table "contracts_metadata"
"""
enum contracts_metadata_select_column_contracts_metadata_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  new_projects_forbidden_offchain

  """column name"""
  new_projects_forbidden_onchain
}

"""
select "contracts_metadata_aggregate_bool_exp_bool_or_arguments_columns" columns of table "contracts_metadata"
"""
enum contracts_metadata_select_column_contracts_metadata_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  new_projects_forbidden_offchain

  """column name"""
  new_projects_forbidden_onchain
}

"""aggregate stddev on columns"""
type contracts_metadata_stddev_fields {
  partner_id: Float
  render_provider_percentage: Float
  render_provider_secondary_sales_bps: Float
}

"""
order by stddev() on columns of table "contracts_metadata"
"""
input contracts_metadata_stddev_order_by {
  partner_id: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_bps: order_by
}

"""aggregate stddev_pop on columns"""
type contracts_metadata_stddev_pop_fields {
  partner_id: Float
  render_provider_percentage: Float
  render_provider_secondary_sales_bps: Float
}

"""
order by stddev_pop() on columns of table "contracts_metadata"
"""
input contracts_metadata_stddev_pop_order_by {
  partner_id: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_bps: order_by
}

"""aggregate stddev_samp on columns"""
type contracts_metadata_stddev_samp_fields {
  partner_id: Float
  render_provider_percentage: Float
  render_provider_secondary_sales_bps: Float
}

"""
order by stddev_samp() on columns of table "contracts_metadata"
"""
input contracts_metadata_stddev_samp_order_by {
  partner_id: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_bps: order_by
}

"""
Streaming cursor of the table "contracts_metadata"
"""
input contracts_metadata_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: contracts_metadata_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input contracts_metadata_stream_cursor_value_input {
  address: String
  admin: String
  bucket_name: String
  contract_type: contract_type_names_enum
  curation_registry_address: String
  dependency_registry_address: String
  generator_url: String
  minter_address: String
  minter_filter_address: String
  name: String
  new_projects_forbidden_offchain: Boolean
  new_projects_forbidden_onchain: Boolean
  partner_id: Int
  preferred_arweave_gateway: String
  preferred_ipfs_gateway: String
  render_provider_address: String
  render_provider_percentage: Int
  render_provider_secondary_sales_address: String
  render_provider_secondary_sales_bps: Int
  token_base_url: String
  updated_at: timestamp
}

"""aggregate sum on columns"""
type contracts_metadata_sum_fields {
  partner_id: Int
  render_provider_percentage: Int
  render_provider_secondary_sales_bps: Int
}

"""
order by sum() on columns of table "contracts_metadata"
"""
input contracts_metadata_sum_order_by {
  partner_id: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_bps: order_by
}

"""aggregate var_pop on columns"""
type contracts_metadata_var_pop_fields {
  partner_id: Float
  render_provider_percentage: Float
  render_provider_secondary_sales_bps: Float
}

"""
order by var_pop() on columns of table "contracts_metadata"
"""
input contracts_metadata_var_pop_order_by {
  partner_id: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_bps: order_by
}

"""aggregate var_samp on columns"""
type contracts_metadata_var_samp_fields {
  partner_id: Float
  render_provider_percentage: Float
  render_provider_secondary_sales_bps: Float
}

"""
order by var_samp() on columns of table "contracts_metadata"
"""
input contracts_metadata_var_samp_order_by {
  partner_id: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_bps: order_by
}

"""aggregate variance on columns"""
type contracts_metadata_variance_fields {
  partner_id: Float
  render_provider_percentage: Float
  render_provider_secondary_sales_bps: Float
}

"""
order by variance() on columns of table "contracts_metadata"
"""
input contracts_metadata_variance_order_by {
  partner_id: order_by
  render_provider_percentage: order_by
  render_provider_secondary_sales_bps: order_by
}

enum curation_statuses_enum {
  collaboration
  curated
  factory
  playground
}

"""
Boolean expression to compare columns of type "curation_statuses_enum". All fields are combined with logical 'AND'.
"""
input curation_statuses_enum_comparison_exp {
  _eq: curation_statuses_enum
  _in: [curation_statuses_enum!]
  _is_null: Boolean
  _neq: curation_statuses_enum
  _nin: [curation_statuses_enum!]
}

"""ordering argument of a cursor"""
enum cursor_ordering {
  """ascending ordering of the cursor"""
  ASC

  """descending ordering of the cursor"""
  DESC
}

scalar Date

input DateFilterInput {
  and: [Date]
  between: [Date]
  contains: Date
  containsi: Date
  endsWith: Date
  eq: Date
  eqi: Date
  gt: Date
  gte: Date
  in: [Date]
  lt: Date
  lte: Date
  ne: Date
  not: DateFilterInput
  notContains: Date
  notContainsi: Date
  notIn: [Date]
  notNull: Boolean
  null: Boolean
  or: [Date]
  startsWith: Date
}

scalar DateTime

input DateTimeFilterInput {
  and: [DateTime]
  between: [DateTime]
  contains: DateTime
  containsi: DateTime
  endsWith: DateTime
  eq: DateTime
  eqi: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  ne: DateTime
  not: DateTimeFilterInput
  notContains: DateTime
  notContainsi: DateTime
  notIn: [DateTime]
  notNull: Boolean
  null: Boolean
  or: [DateTime]
  startsWith: DateTime
}

"""
columns and relationships of "dependencies_metadata"
"""
type dependencies_metadata {
  """An array relationship"""
  additional_cdns(
    """distinct select on columns"""
    distinct_on: [dependency_additional_cdns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_cdns_order_by!]

    """filter the rows returned"""
    where: dependency_additional_cdns_bool_exp
  ): [dependency_additional_cdns!]!

  """An aggregate relationship"""
  additional_cdns_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_additional_cdns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_cdns_order_by!]

    """filter the rows returned"""
    where: dependency_additional_cdns_bool_exp
  ): dependency_additional_cdns_aggregate!

  """An array relationship"""
  additional_repositories(
    """distinct select on columns"""
    distinct_on: [dependency_additional_repositories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_repositories_order_by!]

    """filter the rows returned"""
    where: dependency_additional_repositories_bool_exp
  ): [dependency_additional_repositories!]!

  """An aggregate relationship"""
  additional_repositories_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_additional_repositories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_repositories_order_by!]

    """filter the rows returned"""
    where: dependency_additional_repositories_bool_exp
  ): dependency_additional_repositories_aggregate!

  """An object relationship"""
  dependency_registry: dependency_registries!
  dependency_registry_address: String!
  license_type: String!
  name_and_version: String!
  preferred_cdn: String
  preferred_repository: String
  script: String

  """An array relationship"""
  scripts(
    """distinct select on columns"""
    distinct_on: [dependency_scripts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_scripts_order_by!]

    """filter the rows returned"""
    where: dependency_scripts_bool_exp
  ): [dependency_scripts!]!

  """An aggregate relationship"""
  scripts_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_scripts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_scripts_order_by!]

    """filter the rows returned"""
    where: dependency_scripts_bool_exp
  ): dependency_scripts_aggregate!
  updated_at: timestamptz!
  updated_onchain_at: timestamptz!
  website: String
}

"""
aggregated selection of "dependencies_metadata"
"""
type dependencies_metadata_aggregate {
  aggregate: dependencies_metadata_aggregate_fields
  nodes: [dependencies_metadata!]!
}

input dependencies_metadata_aggregate_bool_exp {
  count: dependencies_metadata_aggregate_bool_exp_count
}

input dependencies_metadata_aggregate_bool_exp_count {
  arguments: [dependencies_metadata_select_column!]
  distinct: Boolean
  filter: dependencies_metadata_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "dependencies_metadata"
"""
type dependencies_metadata_aggregate_fields {
  count(columns: [dependencies_metadata_select_column!], distinct: Boolean): Int!
  max: dependencies_metadata_max_fields
  min: dependencies_metadata_min_fields
}

"""
order by aggregate values of table "dependencies_metadata"
"""
input dependencies_metadata_aggregate_order_by {
  count: order_by
  max: dependencies_metadata_max_order_by
  min: dependencies_metadata_min_order_by
}

"""
Boolean expression to filter rows from the table "dependencies_metadata". All fields are combined with a logical 'AND'.
"""
input dependencies_metadata_bool_exp {
  _and: [dependencies_metadata_bool_exp!]
  _not: dependencies_metadata_bool_exp
  _or: [dependencies_metadata_bool_exp!]
  additional_cdns: dependency_additional_cdns_bool_exp
  additional_cdns_aggregate: dependency_additional_cdns_aggregate_bool_exp
  additional_repositories: dependency_additional_repositories_bool_exp
  additional_repositories_aggregate: dependency_additional_repositories_aggregate_bool_exp
  dependency_registry: dependency_registries_bool_exp
  dependency_registry_address: String_comparison_exp
  license_type: String_comparison_exp
  name_and_version: String_comparison_exp
  preferred_cdn: String_comparison_exp
  preferred_repository: String_comparison_exp
  script: String_comparison_exp
  scripts: dependency_scripts_bool_exp
  scripts_aggregate: dependency_scripts_aggregate_bool_exp
  updated_at: timestamptz_comparison_exp
  updated_onchain_at: timestamptz_comparison_exp
  website: String_comparison_exp
}

"""aggregate max on columns"""
type dependencies_metadata_max_fields {
  dependency_registry_address: String
  license_type: String
  name_and_version: String
  preferred_cdn: String
  preferred_repository: String
  script: String
  updated_at: timestamptz
  updated_onchain_at: timestamptz
  website: String
}

"""
order by max() on columns of table "dependencies_metadata"
"""
input dependencies_metadata_max_order_by {
  dependency_registry_address: order_by
  license_type: order_by
  name_and_version: order_by
  preferred_cdn: order_by
  preferred_repository: order_by
  script: order_by
  updated_at: order_by
  updated_onchain_at: order_by
  website: order_by
}

"""aggregate min on columns"""
type dependencies_metadata_min_fields {
  dependency_registry_address: String
  license_type: String
  name_and_version: String
  preferred_cdn: String
  preferred_repository: String
  script: String
  updated_at: timestamptz
  updated_onchain_at: timestamptz
  website: String
}

"""
order by min() on columns of table "dependencies_metadata"
"""
input dependencies_metadata_min_order_by {
  dependency_registry_address: order_by
  license_type: order_by
  name_and_version: order_by
  preferred_cdn: order_by
  preferred_repository: order_by
  script: order_by
  updated_at: order_by
  updated_onchain_at: order_by
  website: order_by
}

"""Ordering options when selecting data from "dependencies_metadata"."""
input dependencies_metadata_order_by {
  additional_cdns_aggregate: dependency_additional_cdns_aggregate_order_by
  additional_repositories_aggregate: dependency_additional_repositories_aggregate_order_by
  dependency_registry: dependency_registries_order_by
  dependency_registry_address: order_by
  license_type: order_by
  name_and_version: order_by
  preferred_cdn: order_by
  preferred_repository: order_by
  script: order_by
  scripts_aggregate: dependency_scripts_aggregate_order_by
  updated_at: order_by
  updated_onchain_at: order_by
  website: order_by
}

"""
select columns of table "dependencies_metadata"
"""
enum dependencies_metadata_select_column {
  """column name"""
  dependency_registry_address

  """column name"""
  license_type

  """column name"""
  name_and_version

  """column name"""
  preferred_cdn

  """column name"""
  preferred_repository

  """column name"""
  script

  """column name"""
  updated_at

  """column name"""
  updated_onchain_at

  """column name"""
  website
}

"""
Streaming cursor of the table "dependencies_metadata"
"""
input dependencies_metadata_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dependencies_metadata_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dependencies_metadata_stream_cursor_value_input {
  dependency_registry_address: String
  license_type: String
  name_and_version: String
  preferred_cdn: String
  preferred_repository: String
  script: String
  updated_at: timestamptz
  updated_onchain_at: timestamptz
  website: String
}

"""
columns and relationships of "dependency_additional_cdns"
"""
type dependency_additional_cdns {
  cdn: String!
  dependency_name_and_version: String!
  index: Int!
}

"""
aggregated selection of "dependency_additional_cdns"
"""
type dependency_additional_cdns_aggregate {
  aggregate: dependency_additional_cdns_aggregate_fields
  nodes: [dependency_additional_cdns!]!
}

input dependency_additional_cdns_aggregate_bool_exp {
  count: dependency_additional_cdns_aggregate_bool_exp_count
}

input dependency_additional_cdns_aggregate_bool_exp_count {
  arguments: [dependency_additional_cdns_select_column!]
  distinct: Boolean
  filter: dependency_additional_cdns_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "dependency_additional_cdns"
"""
type dependency_additional_cdns_aggregate_fields {
  avg: dependency_additional_cdns_avg_fields
  count(columns: [dependency_additional_cdns_select_column!], distinct: Boolean): Int!
  max: dependency_additional_cdns_max_fields
  min: dependency_additional_cdns_min_fields
  stddev: dependency_additional_cdns_stddev_fields
  stddev_pop: dependency_additional_cdns_stddev_pop_fields
  stddev_samp: dependency_additional_cdns_stddev_samp_fields
  sum: dependency_additional_cdns_sum_fields
  var_pop: dependency_additional_cdns_var_pop_fields
  var_samp: dependency_additional_cdns_var_samp_fields
  variance: dependency_additional_cdns_variance_fields
}

"""
order by aggregate values of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_aggregate_order_by {
  avg: dependency_additional_cdns_avg_order_by
  count: order_by
  max: dependency_additional_cdns_max_order_by
  min: dependency_additional_cdns_min_order_by
  stddev: dependency_additional_cdns_stddev_order_by
  stddev_pop: dependency_additional_cdns_stddev_pop_order_by
  stddev_samp: dependency_additional_cdns_stddev_samp_order_by
  sum: dependency_additional_cdns_sum_order_by
  var_pop: dependency_additional_cdns_var_pop_order_by
  var_samp: dependency_additional_cdns_var_samp_order_by
  variance: dependency_additional_cdns_variance_order_by
}

"""aggregate avg on columns"""
type dependency_additional_cdns_avg_fields {
  index: Float
}

"""
order by avg() on columns of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_avg_order_by {
  index: order_by
}

"""
Boolean expression to filter rows from the table "dependency_additional_cdns". All fields are combined with a logical 'AND'.
"""
input dependency_additional_cdns_bool_exp {
  _and: [dependency_additional_cdns_bool_exp!]
  _not: dependency_additional_cdns_bool_exp
  _or: [dependency_additional_cdns_bool_exp!]
  cdn: String_comparison_exp
  dependency_name_and_version: String_comparison_exp
  index: Int_comparison_exp
}

"""aggregate max on columns"""
type dependency_additional_cdns_max_fields {
  cdn: String
  dependency_name_and_version: String
  index: Int
}

"""
order by max() on columns of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_max_order_by {
  cdn: order_by
  dependency_name_and_version: order_by
  index: order_by
}

"""aggregate min on columns"""
type dependency_additional_cdns_min_fields {
  cdn: String
  dependency_name_and_version: String
  index: Int
}

"""
order by min() on columns of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_min_order_by {
  cdn: order_by
  dependency_name_and_version: order_by
  index: order_by
}

"""
Ordering options when selecting data from "dependency_additional_cdns".
"""
input dependency_additional_cdns_order_by {
  cdn: order_by
  dependency_name_and_version: order_by
  index: order_by
}

"""
select columns of table "dependency_additional_cdns"
"""
enum dependency_additional_cdns_select_column {
  """column name"""
  cdn

  """column name"""
  dependency_name_and_version

  """column name"""
  index
}

"""aggregate stddev on columns"""
type dependency_additional_cdns_stddev_fields {
  index: Float
}

"""
order by stddev() on columns of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_stddev_order_by {
  index: order_by
}

"""aggregate stddev_pop on columns"""
type dependency_additional_cdns_stddev_pop_fields {
  index: Float
}

"""
order by stddev_pop() on columns of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_stddev_pop_order_by {
  index: order_by
}

"""aggregate stddev_samp on columns"""
type dependency_additional_cdns_stddev_samp_fields {
  index: Float
}

"""
order by stddev_samp() on columns of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_stddev_samp_order_by {
  index: order_by
}

"""
Streaming cursor of the table "dependency_additional_cdns"
"""
input dependency_additional_cdns_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dependency_additional_cdns_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dependency_additional_cdns_stream_cursor_value_input {
  cdn: String
  dependency_name_and_version: String
  index: Int
}

"""aggregate sum on columns"""
type dependency_additional_cdns_sum_fields {
  index: Int
}

"""
order by sum() on columns of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_sum_order_by {
  index: order_by
}

"""aggregate var_pop on columns"""
type dependency_additional_cdns_var_pop_fields {
  index: Float
}

"""
order by var_pop() on columns of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_var_pop_order_by {
  index: order_by
}

"""aggregate var_samp on columns"""
type dependency_additional_cdns_var_samp_fields {
  index: Float
}

"""
order by var_samp() on columns of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_var_samp_order_by {
  index: order_by
}

"""aggregate variance on columns"""
type dependency_additional_cdns_variance_fields {
  index: Float
}

"""
order by variance() on columns of table "dependency_additional_cdns"
"""
input dependency_additional_cdns_variance_order_by {
  index: order_by
}

"""
columns and relationships of "dependency_additional_repositories"
"""
type dependency_additional_repositories {
  dependency_name_and_version: String!
  index: Int!
  repository: String!
}

"""
aggregated selection of "dependency_additional_repositories"
"""
type dependency_additional_repositories_aggregate {
  aggregate: dependency_additional_repositories_aggregate_fields
  nodes: [dependency_additional_repositories!]!
}

input dependency_additional_repositories_aggregate_bool_exp {
  count: dependency_additional_repositories_aggregate_bool_exp_count
}

input dependency_additional_repositories_aggregate_bool_exp_count {
  arguments: [dependency_additional_repositories_select_column!]
  distinct: Boolean
  filter: dependency_additional_repositories_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "dependency_additional_repositories"
"""
type dependency_additional_repositories_aggregate_fields {
  avg: dependency_additional_repositories_avg_fields
  count(columns: [dependency_additional_repositories_select_column!], distinct: Boolean): Int!
  max: dependency_additional_repositories_max_fields
  min: dependency_additional_repositories_min_fields
  stddev: dependency_additional_repositories_stddev_fields
  stddev_pop: dependency_additional_repositories_stddev_pop_fields
  stddev_samp: dependency_additional_repositories_stddev_samp_fields
  sum: dependency_additional_repositories_sum_fields
  var_pop: dependency_additional_repositories_var_pop_fields
  var_samp: dependency_additional_repositories_var_samp_fields
  variance: dependency_additional_repositories_variance_fields
}

"""
order by aggregate values of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_aggregate_order_by {
  avg: dependency_additional_repositories_avg_order_by
  count: order_by
  max: dependency_additional_repositories_max_order_by
  min: dependency_additional_repositories_min_order_by
  stddev: dependency_additional_repositories_stddev_order_by
  stddev_pop: dependency_additional_repositories_stddev_pop_order_by
  stddev_samp: dependency_additional_repositories_stddev_samp_order_by
  sum: dependency_additional_repositories_sum_order_by
  var_pop: dependency_additional_repositories_var_pop_order_by
  var_samp: dependency_additional_repositories_var_samp_order_by
  variance: dependency_additional_repositories_variance_order_by
}

"""aggregate avg on columns"""
type dependency_additional_repositories_avg_fields {
  index: Float
}

"""
order by avg() on columns of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_avg_order_by {
  index: order_by
}

"""
Boolean expression to filter rows from the table "dependency_additional_repositories". All fields are combined with a logical 'AND'.
"""
input dependency_additional_repositories_bool_exp {
  _and: [dependency_additional_repositories_bool_exp!]
  _not: dependency_additional_repositories_bool_exp
  _or: [dependency_additional_repositories_bool_exp!]
  dependency_name_and_version: String_comparison_exp
  index: Int_comparison_exp
  repository: String_comparison_exp
}

"""aggregate max on columns"""
type dependency_additional_repositories_max_fields {
  dependency_name_and_version: String
  index: Int
  repository: String
}

"""
order by max() on columns of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_max_order_by {
  dependency_name_and_version: order_by
  index: order_by
  repository: order_by
}

"""aggregate min on columns"""
type dependency_additional_repositories_min_fields {
  dependency_name_and_version: String
  index: Int
  repository: String
}

"""
order by min() on columns of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_min_order_by {
  dependency_name_and_version: order_by
  index: order_by
  repository: order_by
}

"""
Ordering options when selecting data from "dependency_additional_repositories".
"""
input dependency_additional_repositories_order_by {
  dependency_name_and_version: order_by
  index: order_by
  repository: order_by
}

"""
select columns of table "dependency_additional_repositories"
"""
enum dependency_additional_repositories_select_column {
  """column name"""
  dependency_name_and_version

  """column name"""
  index

  """column name"""
  repository
}

"""aggregate stddev on columns"""
type dependency_additional_repositories_stddev_fields {
  index: Float
}

"""
order by stddev() on columns of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_stddev_order_by {
  index: order_by
}

"""aggregate stddev_pop on columns"""
type dependency_additional_repositories_stddev_pop_fields {
  index: Float
}

"""
order by stddev_pop() on columns of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_stddev_pop_order_by {
  index: order_by
}

"""aggregate stddev_samp on columns"""
type dependency_additional_repositories_stddev_samp_fields {
  index: Float
}

"""
order by stddev_samp() on columns of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_stddev_samp_order_by {
  index: order_by
}

"""
Streaming cursor of the table "dependency_additional_repositories"
"""
input dependency_additional_repositories_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dependency_additional_repositories_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dependency_additional_repositories_stream_cursor_value_input {
  dependency_name_and_version: String
  index: Int
  repository: String
}

"""aggregate sum on columns"""
type dependency_additional_repositories_sum_fields {
  index: Int
}

"""
order by sum() on columns of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_sum_order_by {
  index: order_by
}

"""aggregate var_pop on columns"""
type dependency_additional_repositories_var_pop_fields {
  index: Float
}

"""
order by var_pop() on columns of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_var_pop_order_by {
  index: order_by
}

"""aggregate var_samp on columns"""
type dependency_additional_repositories_var_samp_fields {
  index: Float
}

"""
order by var_samp() on columns of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_var_samp_order_by {
  index: order_by
}

"""aggregate variance on columns"""
type dependency_additional_repositories_variance_fields {
  index: Float
}

"""
order by variance() on columns of table "dependency_additional_repositories"
"""
input dependency_additional_repositories_variance_order_by {
  index: order_by
}

"""
columns and relationships of "dependency_registries"
"""
type dependency_registries {
  address: String!

  """An array relationship"""
  dependencies(
    """distinct select on columns"""
    distinct_on: [dependencies_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependencies_metadata_order_by!]

    """filter the rows returned"""
    where: dependencies_metadata_bool_exp
  ): [dependencies_metadata!]!

  """An aggregate relationship"""
  dependencies_aggregate(
    """distinct select on columns"""
    distinct_on: [dependencies_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependencies_metadata_order_by!]

    """filter the rows returned"""
    where: dependencies_metadata_bool_exp
  ): dependencies_metadata_aggregate!
  owner: String!

  """An array relationship"""
  supported_core_contracts(
    """distinct select on columns"""
    distinct_on: [contracts_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contracts_metadata_order_by!]

    """filter the rows returned"""
    where: contracts_metadata_bool_exp
  ): [contracts_metadata!]!

  """An aggregate relationship"""
  supported_core_contracts_aggregate(
    """distinct select on columns"""
    distinct_on: [contracts_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contracts_metadata_order_by!]

    """filter the rows returned"""
    where: contracts_metadata_bool_exp
  ): contracts_metadata_aggregate!
  updated_at: timestamptz!
  updated_onchain_at: timestamptz!
}

"""
aggregated selection of "dependency_registries"
"""
type dependency_registries_aggregate {
  aggregate: dependency_registries_aggregate_fields
  nodes: [dependency_registries!]!
}

"""
aggregate fields of "dependency_registries"
"""
type dependency_registries_aggregate_fields {
  count(columns: [dependency_registries_select_column!], distinct: Boolean): Int!
  max: dependency_registries_max_fields
  min: dependency_registries_min_fields
}

"""
Boolean expression to filter rows from the table "dependency_registries". All fields are combined with a logical 'AND'.
"""
input dependency_registries_bool_exp {
  _and: [dependency_registries_bool_exp!]
  _not: dependency_registries_bool_exp
  _or: [dependency_registries_bool_exp!]
  address: String_comparison_exp
  dependencies: dependencies_metadata_bool_exp
  dependencies_aggregate: dependencies_metadata_aggregate_bool_exp
  owner: String_comparison_exp
  supported_core_contracts: contracts_metadata_bool_exp
  supported_core_contracts_aggregate: contracts_metadata_aggregate_bool_exp
  updated_at: timestamptz_comparison_exp
  updated_onchain_at: timestamptz_comparison_exp
}

"""aggregate max on columns"""
type dependency_registries_max_fields {
  address: String
  owner: String
  updated_at: timestamptz
  updated_onchain_at: timestamptz
}

"""aggregate min on columns"""
type dependency_registries_min_fields {
  address: String
  owner: String
  updated_at: timestamptz
  updated_onchain_at: timestamptz
}

"""Ordering options when selecting data from "dependency_registries"."""
input dependency_registries_order_by {
  address: order_by
  dependencies_aggregate: dependencies_metadata_aggregate_order_by
  owner: order_by
  supported_core_contracts_aggregate: contracts_metadata_aggregate_order_by
  updated_at: order_by
  updated_onchain_at: order_by
}

"""
select columns of table "dependency_registries"
"""
enum dependency_registries_select_column {
  """column name"""
  address

  """column name"""
  owner

  """column name"""
  updated_at

  """column name"""
  updated_onchain_at
}

"""
Streaming cursor of the table "dependency_registries"
"""
input dependency_registries_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dependency_registries_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dependency_registries_stream_cursor_value_input {
  address: String
  owner: String
  updated_at: timestamptz
  updated_onchain_at: timestamptz
}

"""
columns and relationships of "dependency_scripts"
"""
type dependency_scripts {
  address: String!
  dependency_name_and_version: String!
  index: Int!
  script: String!
}

"""
aggregated selection of "dependency_scripts"
"""
type dependency_scripts_aggregate {
  aggregate: dependency_scripts_aggregate_fields
  nodes: [dependency_scripts!]!
}

input dependency_scripts_aggregate_bool_exp {
  count: dependency_scripts_aggregate_bool_exp_count
}

input dependency_scripts_aggregate_bool_exp_count {
  arguments: [dependency_scripts_select_column!]
  distinct: Boolean
  filter: dependency_scripts_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "dependency_scripts"
"""
type dependency_scripts_aggregate_fields {
  avg: dependency_scripts_avg_fields
  count(columns: [dependency_scripts_select_column!], distinct: Boolean): Int!
  max: dependency_scripts_max_fields
  min: dependency_scripts_min_fields
  stddev: dependency_scripts_stddev_fields
  stddev_pop: dependency_scripts_stddev_pop_fields
  stddev_samp: dependency_scripts_stddev_samp_fields
  sum: dependency_scripts_sum_fields
  var_pop: dependency_scripts_var_pop_fields
  var_samp: dependency_scripts_var_samp_fields
  variance: dependency_scripts_variance_fields
}

"""
order by aggregate values of table "dependency_scripts"
"""
input dependency_scripts_aggregate_order_by {
  avg: dependency_scripts_avg_order_by
  count: order_by
  max: dependency_scripts_max_order_by
  min: dependency_scripts_min_order_by
  stddev: dependency_scripts_stddev_order_by
  stddev_pop: dependency_scripts_stddev_pop_order_by
  stddev_samp: dependency_scripts_stddev_samp_order_by
  sum: dependency_scripts_sum_order_by
  var_pop: dependency_scripts_var_pop_order_by
  var_samp: dependency_scripts_var_samp_order_by
  variance: dependency_scripts_variance_order_by
}

"""aggregate avg on columns"""
type dependency_scripts_avg_fields {
  index: Float
}

"""
order by avg() on columns of table "dependency_scripts"
"""
input dependency_scripts_avg_order_by {
  index: order_by
}

"""
Boolean expression to filter rows from the table "dependency_scripts". All fields are combined with a logical 'AND'.
"""
input dependency_scripts_bool_exp {
  _and: [dependency_scripts_bool_exp!]
  _not: dependency_scripts_bool_exp
  _or: [dependency_scripts_bool_exp!]
  address: String_comparison_exp
  dependency_name_and_version: String_comparison_exp
  index: Int_comparison_exp
  script: String_comparison_exp
}

"""aggregate max on columns"""
type dependency_scripts_max_fields {
  address: String
  dependency_name_and_version: String
  index: Int
  script: String
}

"""
order by max() on columns of table "dependency_scripts"
"""
input dependency_scripts_max_order_by {
  address: order_by
  dependency_name_and_version: order_by
  index: order_by
  script: order_by
}

"""aggregate min on columns"""
type dependency_scripts_min_fields {
  address: String
  dependency_name_and_version: String
  index: Int
  script: String
}

"""
order by min() on columns of table "dependency_scripts"
"""
input dependency_scripts_min_order_by {
  address: order_by
  dependency_name_and_version: order_by
  index: order_by
  script: order_by
}

"""Ordering options when selecting data from "dependency_scripts"."""
input dependency_scripts_order_by {
  address: order_by
  dependency_name_and_version: order_by
  index: order_by
  script: order_by
}

"""
select columns of table "dependency_scripts"
"""
enum dependency_scripts_select_column {
  """column name"""
  address

  """column name"""
  dependency_name_and_version

  """column name"""
  index

  """column name"""
  script
}

"""aggregate stddev on columns"""
type dependency_scripts_stddev_fields {
  index: Float
}

"""
order by stddev() on columns of table "dependency_scripts"
"""
input dependency_scripts_stddev_order_by {
  index: order_by
}

"""aggregate stddev_pop on columns"""
type dependency_scripts_stddev_pop_fields {
  index: Float
}

"""
order by stddev_pop() on columns of table "dependency_scripts"
"""
input dependency_scripts_stddev_pop_order_by {
  index: order_by
}

"""aggregate stddev_samp on columns"""
type dependency_scripts_stddev_samp_fields {
  index: Float
}

"""
order by stddev_samp() on columns of table "dependency_scripts"
"""
input dependency_scripts_stddev_samp_order_by {
  index: order_by
}

"""
Streaming cursor of the table "dependency_scripts"
"""
input dependency_scripts_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: dependency_scripts_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input dependency_scripts_stream_cursor_value_input {
  address: String
  dependency_name_and_version: String
  index: Int
  script: String
}

"""aggregate sum on columns"""
type dependency_scripts_sum_fields {
  index: Int
}

"""
order by sum() on columns of table "dependency_scripts"
"""
input dependency_scripts_sum_order_by {
  index: order_by
}

"""aggregate var_pop on columns"""
type dependency_scripts_var_pop_fields {
  index: Float
}

"""
order by var_pop() on columns of table "dependency_scripts"
"""
input dependency_scripts_var_pop_order_by {
  index: order_by
}

"""aggregate var_samp on columns"""
type dependency_scripts_var_samp_fields {
  index: Float
}

"""
order by var_samp() on columns of table "dependency_scripts"
"""
input dependency_scripts_var_samp_order_by {
  index: order_by
}

"""aggregate variance on columns"""
type dependency_scripts_variance_fields {
  index: Float
}

"""
order by variance() on columns of table "dependency_scripts"
"""
input dependency_scripts_variance_order_by {
  index: order_by
}

"""This table stores rows of metadata tags associated with all projects."""
type entity_tags {
  id: Int!

  """An object relationship"""
  project: projects_metadata
  project_id: String

  """An object relationship"""
  tag: tags
  tag_name: String!

  """An object relationship"""
  user: users
  user_address: String
}

"""
order by aggregate values of table "entity_tags"
"""
input entity_tags_aggregate_order_by {
  avg: entity_tags_avg_order_by
  count: order_by
  max: entity_tags_max_order_by
  min: entity_tags_min_order_by
  stddev: entity_tags_stddev_order_by
  stddev_pop: entity_tags_stddev_pop_order_by
  stddev_samp: entity_tags_stddev_samp_order_by
  sum: entity_tags_sum_order_by
  var_pop: entity_tags_var_pop_order_by
  var_samp: entity_tags_var_samp_order_by
  variance: entity_tags_variance_order_by
}

"""
order by avg() on columns of table "entity_tags"
"""
input entity_tags_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "entity_tags". All fields are combined with a logical 'AND'.
"""
input entity_tags_bool_exp {
  _and: [entity_tags_bool_exp!]
  _not: entity_tags_bool_exp
  _or: [entity_tags_bool_exp!]
  id: Int_comparison_exp
  project: projects_metadata_bool_exp
  project_id: String_comparison_exp
  tag: tags_bool_exp
  tag_name: String_comparison_exp
  user: users_bool_exp
  user_address: String_comparison_exp
}

"""
order by max() on columns of table "entity_tags"
"""
input entity_tags_max_order_by {
  id: order_by
  project_id: order_by
  tag_name: order_by
  user_address: order_by
}

"""
order by min() on columns of table "entity_tags"
"""
input entity_tags_min_order_by {
  id: order_by
  project_id: order_by
  tag_name: order_by
  user_address: order_by
}

"""Ordering options when selecting data from "entity_tags"."""
input entity_tags_order_by {
  id: order_by
  project: projects_metadata_order_by
  project_id: order_by
  tag: tags_order_by
  tag_name: order_by
  user: users_order_by
  user_address: order_by
}

"""
select columns of table "entity_tags"
"""
enum entity_tags_select_column {
  """column name"""
  id

  """column name"""
  project_id

  """column name"""
  tag_name

  """column name"""
  user_address
}

"""
order by stddev() on columns of table "entity_tags"
"""
input entity_tags_stddev_order_by {
  id: order_by
}

"""
order by stddev_pop() on columns of table "entity_tags"
"""
input entity_tags_stddev_pop_order_by {
  id: order_by
}

"""
order by stddev_samp() on columns of table "entity_tags"
"""
input entity_tags_stddev_samp_order_by {
  id: order_by
}

"""
Streaming cursor of the table "entity_tags"
"""
input entity_tags_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: entity_tags_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input entity_tags_stream_cursor_value_input {
  id: Int
  project_id: String
  tag_name: String
  user_address: String
}

"""
order by sum() on columns of table "entity_tags"
"""
input entity_tags_sum_order_by {
  id: order_by
}

"""
order by var_pop() on columns of table "entity_tags"
"""
input entity_tags_var_pop_order_by {
  id: order_by
}

"""
order by var_samp() on columns of table "entity_tags"
"""
input entity_tags_var_samp_order_by {
  id: order_by
}

"""
order by variance() on columns of table "entity_tags"
"""
input entity_tags_variance_order_by {
  id: order_by
}

enum ENUM_ARTICLE_CATEGORY {
  EDUCATION
  INTERVIEW
  NEWS
  PODCAST
  VIDEO
}

enum ENUM_ARTICLE_HOMEPAGELOCATION {
  bottom
  middle
  none
  top
}

"""This table lists a users’ favorites (tokens, projects, other users)"""
type favorites {
  favorited_project_id: String
  favorited_token_id: String

  """An object relationship"""
  favorited_user: users
  favorited_user_address: String
  id: Int!

  """An object relationship"""
  project_metadata: projects_metadata

  """An object relationship"""
  token_metadata: tokens_metadata

  """An object relationship"""
  user: users!
  user_public_address: String!
}

"""
aggregated selection of "favorites"
"""
type favorites_aggregate {
  aggregate: favorites_aggregate_fields
  nodes: [favorites!]!
}

input favorites_aggregate_bool_exp {
  count: favorites_aggregate_bool_exp_count
}

input favorites_aggregate_bool_exp_count {
  arguments: [favorites_select_column!]
  distinct: Boolean
  filter: favorites_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "favorites"
"""
type favorites_aggregate_fields {
  avg: favorites_avg_fields
  count(columns: [favorites_select_column!], distinct: Boolean): Int!
  max: favorites_max_fields
  min: favorites_min_fields
  stddev: favorites_stddev_fields
  stddev_pop: favorites_stddev_pop_fields
  stddev_samp: favorites_stddev_samp_fields
  sum: favorites_sum_fields
  var_pop: favorites_var_pop_fields
  var_samp: favorites_var_samp_fields
  variance: favorites_variance_fields
}

"""
order by aggregate values of table "favorites"
"""
input favorites_aggregate_order_by {
  avg: favorites_avg_order_by
  count: order_by
  max: favorites_max_order_by
  min: favorites_min_order_by
  stddev: favorites_stddev_order_by
  stddev_pop: favorites_stddev_pop_order_by
  stddev_samp: favorites_stddev_samp_order_by
  sum: favorites_sum_order_by
  var_pop: favorites_var_pop_order_by
  var_samp: favorites_var_samp_order_by
  variance: favorites_variance_order_by
}

"""aggregate avg on columns"""
type favorites_avg_fields {
  id: Float
}

"""
order by avg() on columns of table "favorites"
"""
input favorites_avg_order_by {
  id: order_by
}

"""
Boolean expression to filter rows from the table "favorites". All fields are combined with a logical 'AND'.
"""
input favorites_bool_exp {
  _and: [favorites_bool_exp!]
  _not: favorites_bool_exp
  _or: [favorites_bool_exp!]
  favorited_project_id: String_comparison_exp
  favorited_token_id: String_comparison_exp
  favorited_user: users_bool_exp
  favorited_user_address: String_comparison_exp
  id: Int_comparison_exp
  project_metadata: projects_metadata_bool_exp
  token_metadata: tokens_metadata_bool_exp
  user: users_bool_exp
  user_public_address: String_comparison_exp
}

"""aggregate max on columns"""
type favorites_max_fields {
  favorited_project_id: String
  favorited_token_id: String
  favorited_user_address: String
  id: Int
  user_public_address: String
}

"""
order by max() on columns of table "favorites"
"""
input favorites_max_order_by {
  favorited_project_id: order_by
  favorited_token_id: order_by
  favorited_user_address: order_by
  id: order_by
  user_public_address: order_by
}

"""aggregate min on columns"""
type favorites_min_fields {
  favorited_project_id: String
  favorited_token_id: String
  favorited_user_address: String
  id: Int
  user_public_address: String
}

"""
order by min() on columns of table "favorites"
"""
input favorites_min_order_by {
  favorited_project_id: order_by
  favorited_token_id: order_by
  favorited_user_address: order_by
  id: order_by
  user_public_address: order_by
}

"""Ordering options when selecting data from "favorites"."""
input favorites_order_by {
  favorited_project_id: order_by
  favorited_token_id: order_by
  favorited_user: users_order_by
  favorited_user_address: order_by
  id: order_by
  project_metadata: projects_metadata_order_by
  token_metadata: tokens_metadata_order_by
  user: users_order_by
  user_public_address: order_by
}

"""
select columns of table "favorites"
"""
enum favorites_select_column {
  """column name"""
  favorited_project_id

  """column name"""
  favorited_token_id

  """column name"""
  favorited_user_address

  """column name"""
  id

  """column name"""
  user_public_address
}

"""aggregate stddev on columns"""
type favorites_stddev_fields {
  id: Float
}

"""
order by stddev() on columns of table "favorites"
"""
input favorites_stddev_order_by {
  id: order_by
}

"""aggregate stddev_pop on columns"""
type favorites_stddev_pop_fields {
  id: Float
}

"""
order by stddev_pop() on columns of table "favorites"
"""
input favorites_stddev_pop_order_by {
  id: order_by
}

"""aggregate stddev_samp on columns"""
type favorites_stddev_samp_fields {
  id: Float
}

"""
order by stddev_samp() on columns of table "favorites"
"""
input favorites_stddev_samp_order_by {
  id: order_by
}

"""
Streaming cursor of the table "favorites"
"""
input favorites_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: favorites_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input favorites_stream_cursor_value_input {
  favorited_project_id: String
  favorited_token_id: String
  favorited_user_address: String
  id: Int
  user_public_address: String
}

"""aggregate sum on columns"""
type favorites_sum_fields {
  id: Int
}

"""
order by sum() on columns of table "favorites"
"""
input favorites_sum_order_by {
  id: order_by
}

"""aggregate var_pop on columns"""
type favorites_var_pop_fields {
  id: Float
}

"""
order by var_pop() on columns of table "favorites"
"""
input favorites_var_pop_order_by {
  id: order_by
}

"""aggregate var_samp on columns"""
type favorites_var_samp_fields {
  id: Float
}

"""
order by var_samp() on columns of table "favorites"
"""
input favorites_var_samp_order_by {
  id: order_by
}

"""aggregate variance on columns"""
type favorites_variance_fields {
  id: Float
}

"""
order by variance() on columns of table "favorites"
"""
input favorites_variance_order_by {
  id: order_by
}

"""
columns and relationships of "feature_flags"
"""
type feature_flags {
  flag_name: String!
  globally_enabled: Boolean!
}

"""
Boolean expression to filter rows from the table "feature_flags". All fields are combined with a logical 'AND'.
"""
input feature_flags_bool_exp {
  _and: [feature_flags_bool_exp!]
  _not: feature_flags_bool_exp
  _or: [feature_flags_bool_exp!]
  flag_name: String_comparison_exp
  globally_enabled: Boolean_comparison_exp
}

"""Ordering options when selecting data from "feature_flags"."""
input feature_flags_order_by {
  flag_name: order_by
  globally_enabled: order_by
}

"""
select columns of table "feature_flags"
"""
enum feature_flags_select_column {
  """column name"""
  flag_name

  """column name"""
  globally_enabled
}

"""
Streaming cursor of the table "feature_flags"
"""
input feature_flags_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: feature_flags_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input feature_flags_stream_cursor_value_input {
  flag_name: String
  globally_enabled: Boolean
}

input featured_token_projects_metadata_args {
  seed: float8
}

input filter_tokens_metadata_by_features_args {
  path: jsonpath
}

scalar float8

"""
Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'.
"""
input float8_comparison_exp {
  _eq: float8
  _gt: float8
  _gte: float8
  _in: [float8!]
  _is_null: Boolean
  _lt: float8
  _lte: float8
  _neq: float8
  _nin: [float8!]
}

union GenericMorph = Article | ArtistEditorialPage | ComponentArtistEditorialPageExhibitions | ComponentArtistEditorialPageFeaturedWork | ComponentArtistEditorialPagePress | ComponentArtistEditorialPageProjectsCreated | ComponentArtistEditorialPageSpectrumArticles | ComponentGalleryGridItemGalleryGridItem | ComponentImageWithCaptionImageWithCaption | ComponentPressItemPressItem | ComponentProjectMetadataProjectMetadata | ComponentReleaseInfoReleaseInfo | ComponentSpectrumArticleSpectrumArticle | MinterInfo | ProjectPage

input IDFilterInput {
  and: [ID]
  between: [ID]
  contains: ID
  containsi: ID
  endsWith: ID
  eq: ID
  eqi: ID
  gt: ID
  gte: ID
  in: [ID]
  lt: ID
  lte: ID
  ne: ID
  not: IDFilterInput
  notContains: ID
  notContainsi: ID
  notIn: [ID]
  notNull: Boolean
  null: Boolean
  or: [ID]
  startsWith: ID
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

input IntFilterInput {
  and: [Int]
  between: [Int]
  contains: Int
  containsi: Int
  endsWith: Int
  eq: Int
  eqi: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  ne: Int
  not: IntFilterInput
  notContains: Int
  notContainsi: Int
  notIn: [Int]
  notNull: Boolean
  null: Boolean
  or: [Int]
  startsWith: Int
}

scalar JSON

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

scalar jsonpath

input list_projects_metadata_random_args {
  seed: seed_float
}

"""
This table details the rendered image files, and all other media assets, for DiGi Artand all Engine partners.
"""
type media {
  bucket_name: String!

  """
  A computed field, executes function "media_extension"
  """
  extension: String
  file_path: String!
  id: Int!
  metadata(
    """JSON select path"""
    path: String
  ): jsonb
  owner_id: String

  """
  A computed field, executes function "media_url"
  """
  url: String
}

"""
Boolean expression to filter rows from the table "media". All fields are combined with a logical 'AND'.
"""
input media_bool_exp {
  _and: [media_bool_exp!]
  _not: media_bool_exp
  _or: [media_bool_exp!]
  bucket_name: String_comparison_exp
  extension: String_comparison_exp
  file_path: String_comparison_exp
  id: Int_comparison_exp
  metadata: jsonb_comparison_exp
  owner_id: String_comparison_exp
  url: String_comparison_exp
}

"""Ordering options when selecting data from "media"."""
input media_order_by {
  bucket_name: order_by
  extension: order_by
  file_path: order_by
  id: order_by
  metadata: order_by
  owner_id: order_by
  url: order_by
}

"""
select columns of table "media"
"""
enum media_select_column {
  """column name"""
  bucket_name

  """column name"""
  file_path

  """column name"""
  id

  """column name"""
  metadata

  """column name"""
  owner_id
}

"""
Streaming cursor of the table "media"
"""
input media_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: media_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input media_stream_cursor_value_input {
  bucket_name: String
  file_path: String
  id: Int
  metadata: jsonb
  owner_id: String
}

"""Enumeration of minter filter types"""
type minter_filter_type_names {
  name: String!
}

"""
Boolean expression to filter rows from the table "minter_filter_type_names". All fields are combined with a logical 'AND'.
"""
input minter_filter_type_names_bool_exp {
  _and: [minter_filter_type_names_bool_exp!]
  _not: minter_filter_type_names_bool_exp
  _or: [minter_filter_type_names_bool_exp!]
  name: String_comparison_exp
}

enum minter_filter_type_names_enum {
  MinterFilterV0
  MinterFilterV1
  MinterFilterV2
  UNKNOWN
}

"""
Boolean expression to compare columns of type "minter_filter_type_names_enum". All fields are combined with logical 'AND'.
"""
input minter_filter_type_names_enum_comparison_exp {
  _eq: minter_filter_type_names_enum
  _in: [minter_filter_type_names_enum!]
  _is_null: Boolean
  _neq: minter_filter_type_names_enum
  _nin: [minter_filter_type_names_enum!]
}

"""Ordering options when selecting data from "minter_filter_type_names"."""
input minter_filter_type_names_order_by {
  name: order_by
}

"""
select columns of table "minter_filter_type_names"
"""
enum minter_filter_type_names_select_column {
  """column name"""
  name
}

"""
Streaming cursor of the table "minter_filter_type_names"
"""
input minter_filter_type_names_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: minter_filter_type_names_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input minter_filter_type_names_stream_cursor_value_input {
  name: String
}

"""
Newly-deployed minters (ie. Set Price minter, Dutch Auction with Settlement minter, etc) must be approved by the DiGi Artminter-filter contract before they may be included for purchasing on an artist’s project. This table tracks a minter-filter’s approved contracts.
"""
type minter_filters_metadata {
  address: String!
  core_registry_address: String

  """
  A computed field, executes function "select_minterfilter_allowed_minters"
  """
  globally_allowed_minters(
    """distinct select on columns"""
    distinct_on: [minters_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [minters_metadata_order_by!]

    """filter the rows returned"""
    where: minters_metadata_bool_exp
  ): [minters_metadata!]

  """An array relationship"""
  known_minters(
    """distinct select on columns"""
    distinct_on: [minters_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [minters_metadata_order_by!]

    """filter the rows returned"""
    where: minters_metadata_bool_exp
  ): [minters_metadata!]!
  type: minter_filter_type_names_enum
}

"""
Boolean expression to filter rows from the table "minter_filters_metadata". All fields are combined with a logical 'AND'.
"""
input minter_filters_metadata_bool_exp {
  _and: [minter_filters_metadata_bool_exp!]
  _not: minter_filters_metadata_bool_exp
  _or: [minter_filters_metadata_bool_exp!]
  address: String_comparison_exp
  core_registry_address: String_comparison_exp
  globally_allowed_minters: minters_metadata_bool_exp
  known_minters: minters_metadata_bool_exp
  type: minter_filter_type_names_enum_comparison_exp
}

"""Ordering options when selecting data from "minter_filters_metadata"."""
input minter_filters_metadata_order_by {
  address: order_by
  core_registry_address: order_by
  globally_allowed_minters_aggregate: minters_metadata_aggregate_order_by
  known_minters_aggregate: minters_metadata_aggregate_order_by
  type: order_by
}

"""
select columns of table "minter_filters_metadata"
"""
enum minter_filters_metadata_select_column {
  """column name"""
  address

  """column name"""
  core_registry_address

  """column name"""
  type
}

"""
Streaming cursor of the table "minter_filters_metadata"
"""
input minter_filters_metadata_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: minter_filters_metadata_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input minter_filters_metadata_stream_cursor_value_input {
  address: String
  core_registry_address: String
  type: minter_filter_type_names_enum
}

enum minter_type_names_enum {
  MinterDAExpHolderV5
  MinterDAExpSettlementV0
  MinterDAExpSettlementV1
  MinterDAExpSettlementV2
  MinterDAExpSettlementV3
  MinterDAExpV0
  MinterDAExpV1
  MinterDAExpV2
  MinterDAExpV4
  MinterDAExpV5
  MinterDALinHolderV5
  MinterDALinV0
  MinterDALinV1
  MinterDALinV2
  MinterDALinV3
  MinterDALinV4
  MinterDALinV5
  MinterHolderV0
  MinterHolderV1
  MinterHolderV2
  MinterHolderV4
  MinterMerkleV0
  MinterMerkleV1
  MinterMerkleV2
  MinterMerkleV3
  MinterMerkleV5
  MinterPolyptychV0
  MinterSEAV0
  MinterSetPriceERC20V0
  MinterSetPriceERC20V1
  MinterSetPriceERC20V2
  MinterSetPriceERC20V4
  MinterSetPriceERC20V5
  MinterSetPriceHolderV5
  MinterSetPriceMerkleV5
  MinterSetPricePolyptychERC20V5
  MinterSetPricePolyptychV5
  MinterSetPriceV0
  MinterSetPriceV1
  MinterSetPriceV2
  MinterSetPriceV4
  MinterSetPriceV5
}

"""
Boolean expression to compare columns of type "minter_type_names_enum". All fields are combined with logical 'AND'.
"""
input minter_type_names_enum_comparison_exp {
  _eq: minter_type_names_enum
  _in: [minter_type_names_enum!]
  _is_null: Boolean
  _neq: minter_type_names_enum
  _nin: [minter_type_names_enum!]
}

"""
Minters are versioned within this table, and the metadata (ie. labels & descriptions) describing the functionality/features of a particular minter version are listed here. Data is updated after the AB team deploys a new generic minter type to the blockchain and public subgraph.
"""
type minter_types {
  active: Boolean!
  description_template: String!
  label: String
  project_configuration_schema(
    """JSON select path"""
    path: String
  ): jsonb!
  type: minter_type_names_enum!

  """
  A computed field, executes function "minter_type_unversioned"
  """
  unversioned_type: String

  """
  A computed field, executes function "minter_type_version_number"
  """
  version_number: Int
}

"""
Boolean expression to filter rows from the table "minter_types". All fields are combined with a logical 'AND'.
"""
input minter_types_bool_exp {
  _and: [minter_types_bool_exp!]
  _not: minter_types_bool_exp
  _or: [minter_types_bool_exp!]
  active: Boolean_comparison_exp
  description_template: String_comparison_exp
  label: String_comparison_exp
  project_configuration_schema: jsonb_comparison_exp
  type: minter_type_names_enum_comparison_exp
  unversioned_type: String_comparison_exp
  version_number: Int_comparison_exp
}

"""Ordering options when selecting data from "minter_types"."""
input minter_types_order_by {
  active: order_by
  description_template: order_by
  label: order_by
  project_configuration_schema: order_by
  type: order_by
  unversioned_type: order_by
  version_number: order_by
}

"""
select columns of table "minter_types"
"""
enum minter_types_select_column {
  """column name"""
  active

  """column name"""
  description_template

  """column name"""
  label

  """column name"""
  project_configuration_schema

  """column name"""
  type
}

"""
Streaming cursor of the table "minter_types"
"""
input minter_types_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: minter_types_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input minter_types_stream_cursor_value_input {
  active: Boolean
  description_template: String
  label: String
  project_configuration_schema: jsonb
  type: minter_type_names_enum
}

type MinterInfo {
  Description: String!
  Name: String!
  createdAt: DateTime
  publishedAt: DateTime
  updatedAt: DateTime
}

type MinterInfoEntity {
  attributes: MinterInfo
  id: ID
}

type MinterInfoEntityResponse {
  data: MinterInfoEntity
}

type MinterInfoEntityResponseCollection {
  data: [MinterInfoEntity!]!
  meta: ResponseCollectionMeta!
}

input MinterInfoFiltersInput {
  Description: StringFilterInput
  Name: StringFilterInput
  and: [MinterInfoFiltersInput]
  createdAt: DateTimeFilterInput
  id: IDFilterInput
  not: MinterInfoFiltersInput
  or: [MinterInfoFiltersInput]
  publishedAt: DateTimeFilterInput
  updatedAt: DateTimeFilterInput
}

"""
This table details the auction and metadata pertaining to DiGi Art“minters” - or, the varieties of purchasing mechanics available for projects. Data is updated after the AB team deploys a new generic minter type to the blockchain and public subgraph.
"""
type minters_metadata {
  address: String!
  extra_minter_details(
    """JSON select path"""
    path: String
  ): jsonb
  is_globally_allowlisted_on_minter_filter: Boolean!

  """An object relationship"""
  minter_filter: minter_filters_metadata
  minter_filter_address: String!
  minter_type: minter_type_names_enum!

  """An array relationship"""
  receipts(
    """distinct select on columns"""
    distinct_on: [receipt_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [receipt_metadata_order_by!]

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): [receipt_metadata!]!

  """An aggregate relationship"""
  receipts_aggregate(
    """distinct select on columns"""
    distinct_on: [receipt_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [receipt_metadata_order_by!]

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): receipt_metadata_aggregate!

  """An object relationship"""
  type: minter_types
}

"""
order by aggregate values of table "minters_metadata"
"""
input minters_metadata_aggregate_order_by {
  count: order_by
  max: minters_metadata_max_order_by
  min: minters_metadata_min_order_by
}

"""
Boolean expression to filter rows from the table "minters_metadata". All fields are combined with a logical 'AND'.
"""
input minters_metadata_bool_exp {
  _and: [minters_metadata_bool_exp!]
  _not: minters_metadata_bool_exp
  _or: [minters_metadata_bool_exp!]
  address: String_comparison_exp
  extra_minter_details: jsonb_comparison_exp
  is_globally_allowlisted_on_minter_filter: Boolean_comparison_exp
  minter_filter: minter_filters_metadata_bool_exp
  minter_filter_address: String_comparison_exp
  minter_type: minter_type_names_enum_comparison_exp
  receipts: receipt_metadata_bool_exp
  receipts_aggregate: receipt_metadata_aggregate_bool_exp
  type: minter_types_bool_exp
}

"""
order by max() on columns of table "minters_metadata"
"""
input minters_metadata_max_order_by {
  address: order_by
  minter_filter_address: order_by
}

"""
order by min() on columns of table "minters_metadata"
"""
input minters_metadata_min_order_by {
  address: order_by
  minter_filter_address: order_by
}

"""Ordering options when selecting data from "minters_metadata"."""
input minters_metadata_order_by {
  address: order_by
  extra_minter_details: order_by
  is_globally_allowlisted_on_minter_filter: order_by
  minter_filter: minter_filters_metadata_order_by
  minter_filter_address: order_by
  minter_type: order_by
  receipts_aggregate: receipt_metadata_aggregate_order_by
  type: minter_types_order_by
}

"""
select columns of table "minters_metadata"
"""
enum minters_metadata_select_column {
  """column name"""
  address

  """column name"""
  extra_minter_details

  """column name"""
  is_globally_allowlisted_on_minter_filter

  """column name"""
  minter_filter_address

  """column name"""
  minter_type
}

"""
Streaming cursor of the table "minters_metadata"
"""
input minters_metadata_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: minters_metadata_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input minters_metadata_stream_cursor_value_input {
  address: String
  extra_minter_details: jsonb
  is_globally_allowlisted_on_minter_filter: Boolean
  minter_filter_address: String
  minter_type: minter_type_names_enum
}

"""mutation root"""
type Mutation {
  authenticate(input: AuthenticateInput!): AuthenticateOutput
}

scalar numeric

"""
Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'.
"""
input numeric_comparison_exp {
  _eq: numeric
  _gt: numeric
  _gte: numeric
  _in: [numeric!]
  _is_null: Boolean
  _lt: numeric
  _lte: numeric
  _neq: numeric
  _nin: [numeric!]
}

"""
Table for out-of-bounds tokens created for previewing upcoming projects
"""
type oob_tokens_metadata {
  """An object relationship"""
  contract: contracts_metadata!
  contract_address: String!

  """An object relationship"""
  gif: media
  gif_id: Int
  hash: String!
  id: String!

  """An object relationship"""
  image: media
  image_id: Int

  """
  A computed field, executes function "oob_live_view_path"
  """
  live_view_path: String

  """
  A computed field, executes function "oob_live_view_url"
  """
  live_view_url: String

  """
  a computed field that returns the media proxy url for this OOB token's statically rendered image
  """
  media_url: String

  """
  A computed field, executes function "oob_preview_asset_url"
  """
  preview_asset_url: String

  """
  A computed field, executes function "oob_primary_asset_url"
  """
  primary_asset_url: String

  """An object relationship"""
  project: projects_metadata!
  project_id: String!
  token_id: Int!

  """An object relationship"""
  video: media
  video_id: Int
}

"""
aggregated selection of "oob_tokens_metadata"
"""
type oob_tokens_metadata_aggregate {
  aggregate: oob_tokens_metadata_aggregate_fields
  nodes: [oob_tokens_metadata!]!
}

input oob_tokens_metadata_aggregate_bool_exp {
  count: oob_tokens_metadata_aggregate_bool_exp_count
}

input oob_tokens_metadata_aggregate_bool_exp_count {
  arguments: [oob_tokens_metadata_select_column!]
  distinct: Boolean
  filter: oob_tokens_metadata_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "oob_tokens_metadata"
"""
type oob_tokens_metadata_aggregate_fields {
  avg: oob_tokens_metadata_avg_fields
  count(columns: [oob_tokens_metadata_select_column!], distinct: Boolean): Int!
  max: oob_tokens_metadata_max_fields
  min: oob_tokens_metadata_min_fields
  stddev: oob_tokens_metadata_stddev_fields
  stddev_pop: oob_tokens_metadata_stddev_pop_fields
  stddev_samp: oob_tokens_metadata_stddev_samp_fields
  sum: oob_tokens_metadata_sum_fields
  var_pop: oob_tokens_metadata_var_pop_fields
  var_samp: oob_tokens_metadata_var_samp_fields
  variance: oob_tokens_metadata_variance_fields
}

"""
order by aggregate values of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_aggregate_order_by {
  avg: oob_tokens_metadata_avg_order_by
  count: order_by
  max: oob_tokens_metadata_max_order_by
  min: oob_tokens_metadata_min_order_by
  stddev: oob_tokens_metadata_stddev_order_by
  stddev_pop: oob_tokens_metadata_stddev_pop_order_by
  stddev_samp: oob_tokens_metadata_stddev_samp_order_by
  sum: oob_tokens_metadata_sum_order_by
  var_pop: oob_tokens_metadata_var_pop_order_by
  var_samp: oob_tokens_metadata_var_samp_order_by
  variance: oob_tokens_metadata_variance_order_by
}

"""aggregate avg on columns"""
type oob_tokens_metadata_avg_fields {
  gif_id: Float
  image_id: Float
  token_id: Float
  video_id: Float
}

"""
order by avg() on columns of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_avg_order_by {
  gif_id: order_by
  image_id: order_by
  token_id: order_by
  video_id: order_by
}

"""
Boolean expression to filter rows from the table "oob_tokens_metadata". All fields are combined with a logical 'AND'.
"""
input oob_tokens_metadata_bool_exp {
  _and: [oob_tokens_metadata_bool_exp!]
  _not: oob_tokens_metadata_bool_exp
  _or: [oob_tokens_metadata_bool_exp!]
  contract: contracts_metadata_bool_exp
  contract_address: String_comparison_exp
  gif: media_bool_exp
  gif_id: Int_comparison_exp
  hash: String_comparison_exp
  id: String_comparison_exp
  image: media_bool_exp
  image_id: Int_comparison_exp
  live_view_path: String_comparison_exp
  live_view_url: String_comparison_exp
  media_url: String_comparison_exp
  preview_asset_url: String_comparison_exp
  primary_asset_url: String_comparison_exp
  project: projects_metadata_bool_exp
  project_id: String_comparison_exp
  token_id: Int_comparison_exp
  video: media_bool_exp
  video_id: Int_comparison_exp
}

"""aggregate max on columns"""
type oob_tokens_metadata_max_fields {
  contract_address: String
  gif_id: Int
  hash: String
  id: String
  image_id: Int

  """
  A computed field, executes function "oob_live_view_path"
  """
  live_view_path: String

  """
  A computed field, executes function "oob_live_view_url"
  """
  live_view_url: String

  """
  a computed field that returns the media proxy url for this OOB token's statically rendered image
  """
  media_url: String

  """
  A computed field, executes function "oob_preview_asset_url"
  """
  preview_asset_url: String

  """
  A computed field, executes function "oob_primary_asset_url"
  """
  primary_asset_url: String
  project_id: String
  token_id: Int
  video_id: Int
}

"""
order by max() on columns of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_max_order_by {
  contract_address: order_by
  gif_id: order_by
  hash: order_by
  id: order_by
  image_id: order_by
  project_id: order_by
  token_id: order_by
  video_id: order_by
}

"""aggregate min on columns"""
type oob_tokens_metadata_min_fields {
  contract_address: String
  gif_id: Int
  hash: String
  id: String
  image_id: Int

  """
  A computed field, executes function "oob_live_view_path"
  """
  live_view_path: String

  """
  A computed field, executes function "oob_live_view_url"
  """
  live_view_url: String

  """
  a computed field that returns the media proxy url for this OOB token's statically rendered image
  """
  media_url: String

  """
  A computed field, executes function "oob_preview_asset_url"
  """
  preview_asset_url: String

  """
  A computed field, executes function "oob_primary_asset_url"
  """
  primary_asset_url: String
  project_id: String
  token_id: Int
  video_id: Int
}

"""
order by min() on columns of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_min_order_by {
  contract_address: order_by
  gif_id: order_by
  hash: order_by
  id: order_by
  image_id: order_by
  project_id: order_by
  token_id: order_by
  video_id: order_by
}

"""Ordering options when selecting data from "oob_tokens_metadata"."""
input oob_tokens_metadata_order_by {
  contract: contracts_metadata_order_by
  contract_address: order_by
  gif: media_order_by
  gif_id: order_by
  hash: order_by
  id: order_by
  image: media_order_by
  image_id: order_by
  live_view_path: order_by
  live_view_url: order_by
  media_url: order_by
  preview_asset_url: order_by
  primary_asset_url: order_by
  project: projects_metadata_order_by
  project_id: order_by
  token_id: order_by
  video: media_order_by
  video_id: order_by
}

"""
select columns of table "oob_tokens_metadata"
"""
enum oob_tokens_metadata_select_column {
  """column name"""
  contract_address

  """column name"""
  gif_id

  """column name"""
  hash

  """column name"""
  id

  """column name"""
  image_id

  """column name"""
  project_id

  """column name"""
  token_id

  """column name"""
  video_id
}

"""aggregate stddev on columns"""
type oob_tokens_metadata_stddev_fields {
  gif_id: Float
  image_id: Float
  token_id: Float
  video_id: Float
}

"""
order by stddev() on columns of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_stddev_order_by {
  gif_id: order_by
  image_id: order_by
  token_id: order_by
  video_id: order_by
}

"""aggregate stddev_pop on columns"""
type oob_tokens_metadata_stddev_pop_fields {
  gif_id: Float
  image_id: Float
  token_id: Float
  video_id: Float
}

"""
order by stddev_pop() on columns of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_stddev_pop_order_by {
  gif_id: order_by
  image_id: order_by
  token_id: order_by
  video_id: order_by
}

"""aggregate stddev_samp on columns"""
type oob_tokens_metadata_stddev_samp_fields {
  gif_id: Float
  image_id: Float
  token_id: Float
  video_id: Float
}

"""
order by stddev_samp() on columns of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_stddev_samp_order_by {
  gif_id: order_by
  image_id: order_by
  token_id: order_by
  video_id: order_by
}

"""
Streaming cursor of the table "oob_tokens_metadata"
"""
input oob_tokens_metadata_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: oob_tokens_metadata_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input oob_tokens_metadata_stream_cursor_value_input {
  contract_address: String
  gif_id: Int
  hash: String
  id: String
  image_id: Int
  project_id: String
  token_id: Int
  video_id: Int
}

"""aggregate sum on columns"""
type oob_tokens_metadata_sum_fields {
  gif_id: Int
  image_id: Int
  token_id: Int
  video_id: Int
}

"""
order by sum() on columns of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_sum_order_by {
  gif_id: order_by
  image_id: order_by
  token_id: order_by
  video_id: order_by
}

"""aggregate var_pop on columns"""
type oob_tokens_metadata_var_pop_fields {
  gif_id: Float
  image_id: Float
  token_id: Float
  video_id: Float
}

"""
order by var_pop() on columns of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_var_pop_order_by {
  gif_id: order_by
  image_id: order_by
  token_id: order_by
  video_id: order_by
}

"""aggregate var_samp on columns"""
type oob_tokens_metadata_var_samp_fields {
  gif_id: Float
  image_id: Float
  token_id: Float
  video_id: Float
}

"""
order by var_samp() on columns of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_var_samp_order_by {
  gif_id: order_by
  image_id: order_by
  token_id: order_by
  video_id: order_by
}

"""aggregate variance on columns"""
type oob_tokens_metadata_variance_fields {
  gif_id: Float
  image_id: Float
  token_id: Float
  video_id: Float
}

"""
order by variance() on columns of table "oob_tokens_metadata"
"""
input oob_tokens_metadata_variance_order_by {
  gif_id: order_by
  image_id: order_by
  token_id: order_by
  video_id: order_by
}

type OpenseaCollectionData {
  projectId: String!
  url: String!
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

type Pagination {
  page: Int!
  pageCount: Int!
  pageSize: Int!
  total: Int!
}

input PaginationArg {
  limit: Int
  page: Int
  pageSize: Int
  start: Int
}

"""Stores details about a token's primary purchase"""
type primary_purchases {
  currency_address: String
  currency_symbol: String
  minter_address: String

  """An object relationship"""
  token: tokens_metadata!
  token_id: String!
  transaction_hash: String!
}

"""
Boolean expression to filter rows from the table "primary_purchases". All fields are combined with a logical 'AND'.
"""
input primary_purchases_bool_exp {
  _and: [primary_purchases_bool_exp!]
  _not: primary_purchases_bool_exp
  _or: [primary_purchases_bool_exp!]
  currency_address: String_comparison_exp
  currency_symbol: String_comparison_exp
  minter_address: String_comparison_exp
  token: tokens_metadata_bool_exp
  token_id: String_comparison_exp
  transaction_hash: String_comparison_exp
}

"""Ordering options when selecting data from "primary_purchases"."""
input primary_purchases_order_by {
  currency_address: order_by
  currency_symbol: order_by
  minter_address: order_by
  token: tokens_metadata_order_by
  token_id: order_by
  transaction_hash: order_by
}

"""
select columns of table "primary_purchases"
"""
enum primary_purchases_select_column {
  """column name"""
  currency_address

  """column name"""
  currency_symbol

  """column name"""
  minter_address

  """column name"""
  token_id

  """column name"""
  transaction_hash
}

"""
Streaming cursor of the table "primary_purchases"
"""
input primary_purchases_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: primary_purchases_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input primary_purchases_stream_cursor_value_input {
  currency_address: String
  currency_symbol: String
  minter_address: String
  token_id: String
  transaction_hash: String
}

"""
This table tracks pending & completed "processing jobs" which are a batch of 40 tokens or less. Any given refresh request consists of one or many processing jobs.
"""
type processing_jobs {
  asset_type: refresh_asset_types_enum
  completed_at: timestamptz
  id: uuid!
  name: String!
  refresh_request_id: uuid!
  status: processing_jobs_status_types_enum!
  submitted_at: timestamptz
}

"""
order by aggregate values of table "processing_jobs"
"""
input processing_jobs_aggregate_order_by {
  count: order_by
  max: processing_jobs_max_order_by
  min: processing_jobs_min_order_by
}

"""
Boolean expression to filter rows from the table "processing_jobs". All fields are combined with a logical 'AND'.
"""
input processing_jobs_bool_exp {
  _and: [processing_jobs_bool_exp!]
  _not: processing_jobs_bool_exp
  _or: [processing_jobs_bool_exp!]
  asset_type: refresh_asset_types_enum_comparison_exp
  completed_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  name: String_comparison_exp
  refresh_request_id: uuid_comparison_exp
  status: processing_jobs_status_types_enum_comparison_exp
  submitted_at: timestamptz_comparison_exp
}

"""
order by max() on columns of table "processing_jobs"
"""
input processing_jobs_max_order_by {
  completed_at: order_by
  id: order_by
  name: order_by
  refresh_request_id: order_by
  submitted_at: order_by
}

"""
order by min() on columns of table "processing_jobs"
"""
input processing_jobs_min_order_by {
  completed_at: order_by
  id: order_by
  name: order_by
  refresh_request_id: order_by
  submitted_at: order_by
}

"""Ordering options when selecting data from "processing_jobs"."""
input processing_jobs_order_by {
  asset_type: order_by
  completed_at: order_by
  id: order_by
  name: order_by
  refresh_request_id: order_by
  status: order_by
  submitted_at: order_by
}

"""
select columns of table "processing_jobs"
"""
enum processing_jobs_select_column {
  """column name"""
  asset_type

  """column name"""
  completed_at

  """column name"""
  id

  """column name"""
  name

  """column name"""
  refresh_request_id

  """column name"""
  status

  """column name"""
  submitted_at
}

enum processing_jobs_status_types_enum {
  FAILED
  PENDING
  SUCCESS
}

"""
Boolean expression to compare columns of type "processing_jobs_status_types_enum". All fields are combined with logical 'AND'.
"""
input processing_jobs_status_types_enum_comparison_exp {
  _eq: processing_jobs_status_types_enum
  _in: [processing_jobs_status_types_enum!]
  _is_null: Boolean
  _neq: processing_jobs_status_types_enum
  _nin: [processing_jobs_status_types_enum!]
}

"""
Streaming cursor of the table "processing_jobs"
"""
input processing_jobs_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: processing_jobs_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input processing_jobs_stream_cursor_value_input {
  asset_type: refresh_asset_types_enum
  completed_at: timestamptz
  id: uuid
  name: String
  refresh_request_id: uuid
  status: processing_jobs_status_types_enum
  submitted_at: timestamptz
}

"""
This table stores metadata for accessing an external dependency for any given Engine Flex project.
"""
type project_external_asset_dependencies {
  bytecode_address: String
  cid: String!
  data: String
  dependency_type: project_external_asset_dependency_types_enum!
  index: Int!

  """An object relationship"""
  project: projects_metadata!
  project_id: String!
}

"""
order by aggregate values of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_aggregate_order_by {
  avg: project_external_asset_dependencies_avg_order_by
  count: order_by
  max: project_external_asset_dependencies_max_order_by
  min: project_external_asset_dependencies_min_order_by
  stddev: project_external_asset_dependencies_stddev_order_by
  stddev_pop: project_external_asset_dependencies_stddev_pop_order_by
  stddev_samp: project_external_asset_dependencies_stddev_samp_order_by
  sum: project_external_asset_dependencies_sum_order_by
  var_pop: project_external_asset_dependencies_var_pop_order_by
  var_samp: project_external_asset_dependencies_var_samp_order_by
  variance: project_external_asset_dependencies_variance_order_by
}

"""
order by avg() on columns of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_avg_order_by {
  index: order_by
}

"""
Boolean expression to filter rows from the table "project_external_asset_dependencies". All fields are combined with a logical 'AND'.
"""
input project_external_asset_dependencies_bool_exp {
  _and: [project_external_asset_dependencies_bool_exp!]
  _not: project_external_asset_dependencies_bool_exp
  _or: [project_external_asset_dependencies_bool_exp!]
  bytecode_address: String_comparison_exp
  cid: String_comparison_exp
  data: String_comparison_exp
  dependency_type: project_external_asset_dependency_types_enum_comparison_exp
  index: Int_comparison_exp
  project: projects_metadata_bool_exp
  project_id: String_comparison_exp
}

"""
order by max() on columns of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_max_order_by {
  bytecode_address: order_by
  cid: order_by
  data: order_by
  index: order_by
  project_id: order_by
}

"""
order by min() on columns of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_min_order_by {
  bytecode_address: order_by
  cid: order_by
  data: order_by
  index: order_by
  project_id: order_by
}

"""
Ordering options when selecting data from "project_external_asset_dependencies".
"""
input project_external_asset_dependencies_order_by {
  bytecode_address: order_by
  cid: order_by
  data: order_by
  dependency_type: order_by
  index: order_by
  project: projects_metadata_order_by
  project_id: order_by
}

"""
select columns of table "project_external_asset_dependencies"
"""
enum project_external_asset_dependencies_select_column {
  """column name"""
  bytecode_address

  """column name"""
  cid

  """column name"""
  data

  """column name"""
  dependency_type

  """column name"""
  index

  """column name"""
  project_id
}

"""
order by stddev() on columns of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_stddev_order_by {
  index: order_by
}

"""
order by stddev_pop() on columns of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_stddev_pop_order_by {
  index: order_by
}

"""
order by stddev_samp() on columns of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_stddev_samp_order_by {
  index: order_by
}

"""
Streaming cursor of the table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: project_external_asset_dependencies_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input project_external_asset_dependencies_stream_cursor_value_input {
  bytecode_address: String
  cid: String
  data: String
  dependency_type: project_external_asset_dependency_types_enum
  index: Int
  project_id: String
}

"""
order by sum() on columns of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_sum_order_by {
  index: order_by
}

"""
order by var_pop() on columns of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_var_pop_order_by {
  index: order_by
}

"""
order by var_samp() on columns of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_var_samp_order_by {
  index: order_by
}

"""
order by variance() on columns of table "project_external_asset_dependencies"
"""
input project_external_asset_dependencies_variance_order_by {
  index: order_by
}

enum project_external_asset_dependency_types_enum {
  ARWEAVE
  IPFS
  ONCHAIN
}

"""
Boolean expression to compare columns of type "project_external_asset_dependency_types_enum". All fields are combined with logical 'AND'.
"""
input project_external_asset_dependency_types_enum_comparison_exp {
  _eq: project_external_asset_dependency_types_enum
  _in: [project_external_asset_dependency_types_enum!]
  _is_null: Boolean
  _neq: project_external_asset_dependency_types_enum
  _nin: [project_external_asset_dependency_types_enum!]
}

"""
This table holds metadata related to a minter that’s been configured by an artist for their project. Rows are added when an artist selects & assigns a minter type to their project that they’ve not previously used for the project in question.
"""
type project_minter_configurations {
  """
  A computed field, executes function "project_minter_config_auction_end_time"
  """
  auction_end_time: timestamptz

  """
  A computed field, executes function "project_minter_config_auction_start_time"
  """
  auction_start_time: timestamptz
  base_price: String

  """
  A computed field, executes function "project_minter_configuration_complete"
  """
  complete: Boolean
  currency_address: String!
  currency_symbol: String!
  extra_minter_details(
    """JSON select path"""
    path: String
  ): jsonb
  id: String!
  max_invocations: Int

  """An object relationship"""
  minter: minters_metadata
  minter_id: String!
  offchain_extra_minter_details(
    """JSON select path"""
    path: String
  ): jsonb
  price_is_configured: Boolean!

  """An object relationship"""
  project: projects_metadata
  project_id: String!
  properties_updated_at(
    """JSON select path"""
    path: String
  ): jsonb!
  purchase_to_disabled: Boolean!
}

"""
Boolean expression to filter rows from the table "project_minter_configurations". All fields are combined with a logical 'AND'.
"""
input project_minter_configurations_bool_exp {
  _and: [project_minter_configurations_bool_exp!]
  _not: project_minter_configurations_bool_exp
  _or: [project_minter_configurations_bool_exp!]
  auction_end_time: timestamptz_comparison_exp
  auction_start_time: timestamptz_comparison_exp
  base_price: String_comparison_exp
  complete: Boolean_comparison_exp
  currency_address: String_comparison_exp
  currency_symbol: String_comparison_exp
  extra_minter_details: jsonb_comparison_exp
  id: String_comparison_exp
  max_invocations: Int_comparison_exp
  minter: minters_metadata_bool_exp
  minter_id: String_comparison_exp
  offchain_extra_minter_details: jsonb_comparison_exp
  price_is_configured: Boolean_comparison_exp
  project: projects_metadata_bool_exp
  project_id: String_comparison_exp
  properties_updated_at: jsonb_comparison_exp
  purchase_to_disabled: Boolean_comparison_exp
}

"""
Ordering options when selecting data from "project_minter_configurations".
"""
input project_minter_configurations_order_by {
  auction_end_time: order_by
  auction_start_time: order_by
  base_price: order_by
  complete: order_by
  currency_address: order_by
  currency_symbol: order_by
  extra_minter_details: order_by
  id: order_by
  max_invocations: order_by
  minter: minters_metadata_order_by
  minter_id: order_by
  offchain_extra_minter_details: order_by
  price_is_configured: order_by
  project: projects_metadata_order_by
  project_id: order_by
  properties_updated_at: order_by
  purchase_to_disabled: order_by
}

"""
select columns of table "project_minter_configurations"
"""
enum project_minter_configurations_select_column {
  """column name"""
  base_price

  """column name"""
  currency_address

  """column name"""
  currency_symbol

  """column name"""
  extra_minter_details

  """column name"""
  id

  """column name"""
  max_invocations

  """column name"""
  minter_id

  """column name"""
  offchain_extra_minter_details

  """column name"""
  price_is_configured

  """column name"""
  project_id

  """column name"""
  properties_updated_at

  """column name"""
  purchase_to_disabled
}

"""
Streaming cursor of the table "project_minter_configurations"
"""
input project_minter_configurations_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: project_minter_configurations_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input project_minter_configurations_stream_cursor_value_input {
  base_price: String
  currency_address: String
  currency_symbol: String
  extra_minter_details: jsonb
  id: String
  max_invocations: Int
  minter_id: String
  offchain_extra_minter_details: jsonb
  price_is_configured: Boolean
  project_id: String
  properties_updated_at: jsonb
  purchase_to_disabled: Boolean
}

"""
This table holds the artist script files used for all projects (all scripts are primarily stored on-chain, and this table exists here for convenience purposes). Note that multiple scripts are combined when multiple indexes exist for a given projectID. This table is updated when an artist uploads, edits, or deletes a script in their project shell.
"""
type project_scripts {
  index: Int!

  """An object relationship"""
  project: projects_metadata
  project_id: String!
  script: String!
}

"""
order by aggregate values of table "project_scripts"
"""
input project_scripts_aggregate_order_by {
  avg: project_scripts_avg_order_by
  count: order_by
  max: project_scripts_max_order_by
  min: project_scripts_min_order_by
  stddev: project_scripts_stddev_order_by
  stddev_pop: project_scripts_stddev_pop_order_by
  stddev_samp: project_scripts_stddev_samp_order_by
  sum: project_scripts_sum_order_by
  var_pop: project_scripts_var_pop_order_by
  var_samp: project_scripts_var_samp_order_by
  variance: project_scripts_variance_order_by
}

"""
order by avg() on columns of table "project_scripts"
"""
input project_scripts_avg_order_by {
  index: order_by
}

"""
Boolean expression to filter rows from the table "project_scripts". All fields are combined with a logical 'AND'.
"""
input project_scripts_bool_exp {
  _and: [project_scripts_bool_exp!]
  _not: project_scripts_bool_exp
  _or: [project_scripts_bool_exp!]
  index: Int_comparison_exp
  project: projects_metadata_bool_exp
  project_id: String_comparison_exp
  script: String_comparison_exp
}

"""
order by max() on columns of table "project_scripts"
"""
input project_scripts_max_order_by {
  index: order_by
  project_id: order_by
  script: order_by
}

"""
order by min() on columns of table "project_scripts"
"""
input project_scripts_min_order_by {
  index: order_by
  project_id: order_by
  script: order_by
}

"""Ordering options when selecting data from "project_scripts"."""
input project_scripts_order_by {
  index: order_by
  project: projects_metadata_order_by
  project_id: order_by
  script: order_by
}

"""
select columns of table "project_scripts"
"""
enum project_scripts_select_column {
  """column name"""
  index

  """column name"""
  project_id

  """column name"""
  script
}

"""
order by stddev() on columns of table "project_scripts"
"""
input project_scripts_stddev_order_by {
  index: order_by
}

"""
order by stddev_pop() on columns of table "project_scripts"
"""
input project_scripts_stddev_pop_order_by {
  index: order_by
}

"""
order by stddev_samp() on columns of table "project_scripts"
"""
input project_scripts_stddev_samp_order_by {
  index: order_by
}

"""
Streaming cursor of the table "project_scripts"
"""
input project_scripts_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: project_scripts_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input project_scripts_stream_cursor_value_input {
  index: Int
  project_id: String
  script: String
}

"""
order by sum() on columns of table "project_scripts"
"""
input project_scripts_sum_order_by {
  index: order_by
}

"""
order by var_pop() on columns of table "project_scripts"
"""
input project_scripts_var_pop_order_by {
  index: order_by
}

"""
order by var_samp() on columns of table "project_scripts"
"""
input project_scripts_var_samp_order_by {
  index: order_by
}

"""
order by variance() on columns of table "project_scripts"
"""
input project_scripts_variance_order_by {
  index: order_by
}

"""
columns and relationships of "project_series"
"""
type project_series {
  id: Int!

  """An array relationship"""
  projects(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """An aggregate relationship"""
  projects_aggregate(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!
}

"""
aggregated selection of "project_series"
"""
type project_series_aggregate {
  aggregate: project_series_aggregate_fields
  nodes: [project_series!]!
}

"""
aggregate fields of "project_series"
"""
type project_series_aggregate_fields {
  avg: project_series_avg_fields
  count(columns: [project_series_select_column!], distinct: Boolean): Int!
  max: project_series_max_fields
  min: project_series_min_fields
  stddev: project_series_stddev_fields
  stddev_pop: project_series_stddev_pop_fields
  stddev_samp: project_series_stddev_samp_fields
  sum: project_series_sum_fields
  var_pop: project_series_var_pop_fields
  var_samp: project_series_var_samp_fields
  variance: project_series_variance_fields
}

"""aggregate avg on columns"""
type project_series_avg_fields {
  id: Float
}

"""
Boolean expression to filter rows from the table "project_series". All fields are combined with a logical 'AND'.
"""
input project_series_bool_exp {
  _and: [project_series_bool_exp!]
  _not: project_series_bool_exp
  _or: [project_series_bool_exp!]
  id: Int_comparison_exp
  projects: projects_metadata_bool_exp
  projects_aggregate: projects_metadata_aggregate_bool_exp
}

"""aggregate max on columns"""
type project_series_max_fields {
  id: Int
}

"""aggregate min on columns"""
type project_series_min_fields {
  id: Int
}

"""Ordering options when selecting data from "project_series"."""
input project_series_order_by {
  id: order_by
  projects_aggregate: projects_metadata_aggregate_order_by
}

"""
select columns of table "project_series"
"""
enum project_series_select_column {
  """column name"""
  id
}

"""aggregate stddev on columns"""
type project_series_stddev_fields {
  id: Float
}

"""aggregate stddev_pop on columns"""
type project_series_stddev_pop_fields {
  id: Float
}

"""aggregate stddev_samp on columns"""
type project_series_stddev_samp_fields {
  id: Float
}

"""
Streaming cursor of the table "project_series"
"""
input project_series_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: project_series_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input project_series_stream_cursor_value_input {
  id: Int
}

"""aggregate sum on columns"""
type project_series_sum_fields {
  id: Int
}

"""aggregate var_pop on columns"""
type project_series_var_pop_fields {
  id: Float
}

"""aggregate var_samp on columns"""
type project_series_var_samp_fields {
  id: Float
}

"""aggregate variance on columns"""
type project_series_variance_fields {
  id: Float
}

"""
columns and relationships of "project_vertical_categories"
"""
type project_vertical_categories {
  """An object relationship"""
  category: categories!
  hosted: Boolean!
  name: categories_enum!

  """An array relationship"""
  verticals(
    """distinct select on columns"""
    distinct_on: [project_verticals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_verticals_order_by!]

    """filter the rows returned"""
    where: project_verticals_bool_exp
  ): [project_verticals!]!
}

"""
Boolean expression to filter rows from the table "project_vertical_categories". All fields are combined with a logical 'AND'.
"""
input project_vertical_categories_bool_exp {
  _and: [project_vertical_categories_bool_exp!]
  _not: project_vertical_categories_bool_exp
  _or: [project_vertical_categories_bool_exp!]
  category: categories_bool_exp
  hosted: Boolean_comparison_exp
  name: categories_enum_comparison_exp
  verticals: project_verticals_bool_exp
}

"""
Ordering options when selecting data from "project_vertical_categories".
"""
input project_vertical_categories_order_by {
  category: categories_order_by
  hosted: order_by
  name: order_by
  verticals_aggregate: project_verticals_aggregate_order_by
}

"""
select columns of table "project_vertical_categories"
"""
enum project_vertical_categories_select_column {
  """column name"""
  hosted

  """column name"""
  name
}

"""
Streaming cursor of the table "project_vertical_categories"
"""
input project_vertical_categories_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: project_vertical_categories_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input project_vertical_categories_stream_cursor_value_input {
  hosted: Boolean
  name: categories_enum
}

"""
columns and relationships of "project_verticals"
"""
type project_verticals {
  active: Boolean!

  """An object relationship"""
  category: project_vertical_categories!
  category_name: String!
  description: String
  display_name: String!
  name: verticals_enum!

  """An array relationship"""
  projects(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """An aggregate relationship"""
  projects_aggregate(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!

  """An object relationship"""
  vertical: verticals!
}

"""
order by aggregate values of table "project_verticals"
"""
input project_verticals_aggregate_order_by {
  count: order_by
  max: project_verticals_max_order_by
  min: project_verticals_min_order_by
}

"""
Boolean expression to filter rows from the table "project_verticals". All fields are combined with a logical 'AND'.
"""
input project_verticals_bool_exp {
  _and: [project_verticals_bool_exp!]
  _not: project_verticals_bool_exp
  _or: [project_verticals_bool_exp!]
  active: Boolean_comparison_exp
  category: project_vertical_categories_bool_exp
  category_name: String_comparison_exp
  description: String_comparison_exp
  display_name: String_comparison_exp
  name: verticals_enum_comparison_exp
  projects: projects_metadata_bool_exp
  projects_aggregate: projects_metadata_aggregate_bool_exp
  vertical: verticals_bool_exp
}

"""
order by max() on columns of table "project_verticals"
"""
input project_verticals_max_order_by {
  category_name: order_by
  description: order_by
  display_name: order_by
}

"""
order by min() on columns of table "project_verticals"
"""
input project_verticals_min_order_by {
  category_name: order_by
  description: order_by
  display_name: order_by
}

"""Ordering options when selecting data from "project_verticals"."""
input project_verticals_order_by {
  active: order_by
  category: project_vertical_categories_order_by
  category_name: order_by
  description: order_by
  display_name: order_by
  name: order_by
  projects_aggregate: projects_metadata_aggregate_order_by
  vertical: verticals_order_by
}

"""
select columns of table "project_verticals"
"""
enum project_verticals_select_column {
  """column name"""
  active

  """column name"""
  category_name

  """column name"""
  description

  """column name"""
  display_name

  """column name"""
  name
}

"""
Streaming cursor of the table "project_verticals"
"""
input project_verticals_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: project_verticals_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input project_verticals_stream_cursor_value_input {
  active: Boolean
  category_name: String
  description: String
  display_name: String
  name: verticals_enum
}

type ProjectPage {
  AuctionInfoRow(filters: ComponentReleaseInfoReleaseInfoFiltersInput, pagination: PaginationArg = {}, sort: [String] = []): [ComponentReleaseInfoReleaseInfo]
  Quote: String
  createdAt: DateTime
  project: ComponentProjectMetadataProjectMetadata!
  publishedAt: DateTime
  updatedAt: DateTime
}

type ProjectPageEntity {
  attributes: ProjectPage
  id: ID
}

type ProjectPageEntityResponse {
  data: ProjectPageEntity
}

type ProjectPageEntityResponseCollection {
  data: [ProjectPageEntity!]!
  meta: ResponseCollectionMeta!
}

input ProjectPageFiltersInput {
  AuctionInfoRow: ComponentReleaseInfoReleaseInfoFiltersInput
  Quote: StringFilterInput
  and: [ProjectPageFiltersInput]
  createdAt: DateTimeFilterInput
  id: IDFilterInput
  not: ProjectPageFiltersInput
  or: [ProjectPageFiltersInput]
  project: ComponentProjectMetadataProjectMetadataFiltersInput
  publishedAt: DateTimeFilterInput
  updatedAt: DateTimeFilterInput
}

"""
Artists may choose to name arbitrary traits & patterns (“features”) within the outputs of their project. These features are listed here and calculated via the features_script. This table is updated when an artist uploads, edits, or deletes a feature in their project shell.
"""
type projects_features {
  enable_artist_update_after_completion: Boolean!
  feature_fields(
    """JSON select path"""
    path: String
  ): jsonb

  """
  A computed field, executes function "projects_features_feature_fields_counts"
  """
  feature_fields_counts(
    """JSON select path"""
    path: String
  ): jsonb
  id: Int!

  """An object relationship"""
  project: projects_metadata!
  project_id: String!
}

"""
Boolean expression to filter rows from the table "projects_features". All fields are combined with a logical 'AND'.
"""
input projects_features_bool_exp {
  _and: [projects_features_bool_exp!]
  _not: projects_features_bool_exp
  _or: [projects_features_bool_exp!]
  enable_artist_update_after_completion: Boolean_comparison_exp
  feature_fields: jsonb_comparison_exp
  feature_fields_counts: jsonb_comparison_exp
  id: Int_comparison_exp
  project: projects_metadata_bool_exp
  project_id: String_comparison_exp
}

"""Ordering options when selecting data from "projects_features"."""
input projects_features_order_by {
  enable_artist_update_after_completion: order_by
  feature_fields: order_by
  feature_fields_counts: order_by
  id: order_by
  project: projects_metadata_order_by
  project_id: order_by
}

"""
select columns of table "projects_features"
"""
enum projects_features_select_column {
  """column name"""
  enable_artist_update_after_completion

  """column name"""
  feature_fields

  """column name"""
  id

  """column name"""
  project_id
}

"""
Streaming cursor of the table "projects_features"
"""
input projects_features_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: projects_features_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input projects_features_stream_cursor_value_input {
  enable_artist_update_after_completion: Boolean
  feature_fields: jsonb
  id: Int
  project_id: String
}

"""
This table holds entries for every project and information on all project-related settings.
"""
type projects_metadata {
  activated_at: timestamptz
  active: Boolean!
  additional_payee: String
  additional_payee_percentage: Int
  additional_payee_secondary_sales_address: String
  additional_payee_secondary_sales_percentage: Int

  """An object relationship"""
  additional_payee_splitter: split_atomic_contracts

  """An object relationship"""
  artist: users!
  artistPage(filters: ArtistEditorialPageFiltersInput_remote_rel_projects_metadataartistPage, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): ArtistEditorialPageEntityResponseCollection
  artist_address: String!
  artist_display_notes: String
  artist_featured_token_id: String
  artist_interview: String
  artist_name: String
  aspect_ratio: numeric!

  """
  A computed field, executes function "project_auction_end_time"
  """
  auction_end_time: timestamptz

  """
  A computed field, executes function "project_auction_start_time"
  """
  auction_start_time: timestamptz
  base_uri: String

  """An array relationship"""
  bids(
    """distinct select on columns"""
    distinct_on: [bids_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bids_metadata_order_by!]

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): [bids_metadata!]!

  """An aggregate relationship"""
  bids_aggregate(
    """distinct select on columns"""
    distinct_on: [bids_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bids_metadata_order_by!]

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): bids_metadata_aggregate!
  canvas_mode: Boolean
  charitable_giving_details: String
  complete: Boolean!
  completed_at: timestamptz

  """An object relationship"""
  contract: contracts_metadata!
  contract_address: String!
  creative_credit: String
  curation_status: curation_statuses_enum!

  """
  A computed field, executes function "curation_status_display"
  """
  curation_status_display: String
  curation_status_override: curation_statuses_enum
  currency_address: String
  currency_decimals: Int
  currency_symbol: String

  """An object relationship"""
  dependency: dependencies_metadata

  """
  Returns 'script_type_and_version_override' for the project if available; otherwise, falls back to 'script_type_and_version'
  """
  dependency_name_and_version: String
  description: String
  disable_auto_image_format: Boolean
  disable_sample_generator: Boolean!
  display_static: Boolean!

  """An array relationship"""
  external_asset_dependencies(
    """distinct select on columns"""
    distinct_on: [project_external_asset_dependencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_external_asset_dependencies_order_by!]

    """filter the rows returned"""
    where: project_external_asset_dependencies_bool_exp
  ): [project_external_asset_dependencies!]!
  external_asset_dependencies_locked: Boolean

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint

  """
  A computed field, executes function "project_favorited_by_user"
  """
  favorited_by_user: Boolean

  """An array relationship"""
  favorites(
    """distinct select on columns"""
    distinct_on: [favorites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [favorites_order_by!]

    """filter the rows returned"""
    where: favorites_bool_exp
  ): [favorites!]!

  """An aggregate relationship"""
  favorites_aggregate(
    """distinct select on columns"""
    distinct_on: [favorites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [favorites_order_by!]

    """filter the rows returned"""
    where: favorites_bool_exp
  ): favorites_aggregate!

  """
  A computed field, executes function "project_featured_token"
  """
  featured_token(
    """
    input parameters for computed field "featured_token" defined on table "projects_metadata"
    """
    args: featured_token_projects_metadata_args

    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]

  """An object relationship"""
  features: projects_features

  """
  A computed field, executes function "first_token_minted_at"
  """
  first_token_minted_at: timestamptz
  generate_video_assets: Boolean!

  """
  A computed field, executes function "project_heritage_status"
  """
  heritage_curation_status: String
  id: String!
  index: Int

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint
  ipfs_hash: String

  """
  A computed field, executes function "project_is_flagship"
  """
  is_digi: Boolean
  license: String
  link_to_license: String

  """
  A computed field, executes function "calc_locked"
  """
  locked: Boolean

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Int!

  """An object relationship"""
  minter_configuration: project_minter_configurations
  minter_configuration_id: String
  name: String

  """An array relationship"""
  oob_tokens(
    """distinct select on columns"""
    distinct_on: [oob_tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oob_tokens_metadata_order_by!]

    """filter the rows returned"""
    where: oob_tokens_metadata_bool_exp
  ): [oob_tokens_metadata!]!

  """An aggregate relationship"""
  oob_tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [oob_tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oob_tokens_metadata_order_by!]

    """filter the rows returned"""
    where: oob_tokens_metadata_bool_exp
  ): oob_tokens_metadata_aggregate!
  paused: Boolean!
  preview_render_type: render_types_enum!
  price_per_token_in_wei: String
  primary_render_type: render_types_enum!
  project_id: String!
  properties_updated_at(
    """JSON select path"""
    path: String
  ): jsonb!

  """An object relationship"""
  proposed_artist_addresses_and_split: proposed_artist_addresses_and_splits
  proposed_artists_and_splits_id: String

  """
  A computed field, executes function "project_random_oob_token"
  """
  random_oob_token(
    """
    input parameters for computed field "random_oob_token" defined on table "projects_metadata"
    """
    args: random_oob_token_projects_metadata_args

    """distinct select on columns"""
    distinct_on: [oob_tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oob_tokens_metadata_order_by!]

    """filter the rows returned"""
    where: oob_tokens_metadata_bool_exp
  ): [oob_tokens_metadata!]

  """
  A computed field, executes function "project_random_token"
  """
  random_token(
    """
    input parameters for computed field "random_token" defined on table "projects_metadata"
    """
    args: random_token_projects_metadata_args

    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]
  read_only_addresses(
    """JSON select path"""
    path: String
  ): jsonb

  """An array relationship"""
  receipts(
    """distinct select on columns"""
    distinct_on: [receipt_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [receipt_metadata_order_by!]

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): [receipt_metadata!]!

  """An aggregate relationship"""
  receipts_aggregate(
    """distinct select on columns"""
    distinct_on: [receipt_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [receipt_metadata_order_by!]

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): receipt_metadata_aggregate!

  """An array relationship"""
  refresh_requests(
    """distinct select on columns"""
    distinct_on: [refresh_requests_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [refresh_requests_order_by!]

    """filter the rows returned"""
    where: refresh_requests_bool_exp
  ): [refresh_requests!]!

  """
  A computed field, executes function "project_render_complete"
  """
  render_complete: Boolean
  render_delay: Int
  render_with_gpu: Boolean
  royalty_percentage: Int
  sales_notes: String
  script: String

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint
  script_json(
    """JSON select path"""
    path: String
  ): jsonb

  """
  Indicates the script type and version (e.g., p5@1.0.0) assigned to the project on its core contract
  """
  script_type_and_version: String

  """
  Specifies the script type and version override for the project, as set on the DiGi Artdependency registry contract
  """
  script_type_and_version_override: String

  """An array relationship"""
  scripts(
    """distinct select on columns"""
    distinct_on: [project_scripts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_scripts_order_by!]

    """filter the rows returned"""
    where: project_scripts_bool_exp
  ): [project_scripts!]!

  """
  A computed field, executes function "second_token_minted_at"
  """
  second_token_minted_at: timestamptz

  """An object relationship"""
  series: project_series
  series_id: Int
  start_datetime: timestamptz

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [entity_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [entity_tags_order_by!]

    """filter the rows returned"""
    where: entity_tags_bool_exp
  ): [entity_tags!]!

  """An array relationship"""
  tokens(
    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]!

  """An aggregate relationship"""
  tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): tokens_metadata_aggregate!
  updated_at: timestamp

  """
  A computed field, executes function "user_is_artist"
  """
  user_is_artist: Boolean

  """An object relationship"""
  vertical: project_verticals!
  vertical_name: String!
  video_aspect_ratio: numeric
  video_duration: Int
  video_fps: Int
  video_render_delay: Int
  website: String
}

"""
aggregated selection of "projects_metadata"
"""
type projects_metadata_aggregate {
  aggregate: projects_metadata_aggregate_fields
  nodes: [projects_metadata!]!
}

input projects_metadata_aggregate_bool_exp {
  bool_and: projects_metadata_aggregate_bool_exp_bool_and
  bool_or: projects_metadata_aggregate_bool_exp_bool_or
  count: projects_metadata_aggregate_bool_exp_count
}

input projects_metadata_aggregate_bool_exp_bool_and {
  arguments: projects_metadata_select_column_projects_metadata_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: projects_metadata_bool_exp
  predicate: Boolean_comparison_exp!
}

input projects_metadata_aggregate_bool_exp_bool_or {
  arguments: projects_metadata_select_column_projects_metadata_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: projects_metadata_bool_exp
  predicate: Boolean_comparison_exp!
}

input projects_metadata_aggregate_bool_exp_count {
  arguments: [projects_metadata_select_column!]
  distinct: Boolean
  filter: projects_metadata_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "projects_metadata"
"""
type projects_metadata_aggregate_fields {
  avg: projects_metadata_avg_fields
  count(columns: [projects_metadata_select_column!], distinct: Boolean): Int!
  max: projects_metadata_max_fields
  min: projects_metadata_min_fields
  stddev: projects_metadata_stddev_fields
  stddev_pop: projects_metadata_stddev_pop_fields
  stddev_samp: projects_metadata_stddev_samp_fields
  sum: projects_metadata_sum_fields
  var_pop: projects_metadata_var_pop_fields
  var_samp: projects_metadata_var_samp_fields
  variance: projects_metadata_variance_fields
}

"""
order by aggregate values of table "projects_metadata"
"""
input projects_metadata_aggregate_order_by {
  avg: projects_metadata_avg_order_by
  count: order_by
  max: projects_metadata_max_order_by
  min: projects_metadata_min_order_by
  stddev: projects_metadata_stddev_order_by
  stddev_pop: projects_metadata_stddev_pop_order_by
  stddev_samp: projects_metadata_stddev_samp_order_by
  sum: projects_metadata_sum_order_by
  var_pop: projects_metadata_var_pop_order_by
  var_samp: projects_metadata_var_samp_order_by
  variance: projects_metadata_variance_order_by
}

"""aggregate avg on columns"""
type projects_metadata_avg_fields {
  additional_payee_percentage: Float
  additional_payee_secondary_sales_percentage: Float
  aspect_ratio: Float
  currency_decimals: Float

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint
  index: Float

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Float
  render_delay: Float
  royalty_percentage: Float

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint
  series_id: Float
  video_aspect_ratio: Float
  video_duration: Float
  video_fps: Float
  video_render_delay: Float
}

"""
order by avg() on columns of table "projects_metadata"
"""
input projects_metadata_avg_order_by {
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_percentage: order_by
  aspect_ratio: order_by
  currency_decimals: order_by
  index: order_by
  max_invocations: order_by
  render_delay: order_by
  royalty_percentage: order_by
  series_id: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
}

"""
Boolean expression to filter rows from the table "projects_metadata". All fields are combined with a logical 'AND'.
"""
input projects_metadata_bool_exp {
  _and: [projects_metadata_bool_exp!]
  _not: projects_metadata_bool_exp
  _or: [projects_metadata_bool_exp!]
  activated_at: timestamptz_comparison_exp
  active: Boolean_comparison_exp
  additional_payee: String_comparison_exp
  additional_payee_percentage: Int_comparison_exp
  additional_payee_secondary_sales_address: String_comparison_exp
  additional_payee_secondary_sales_percentage: Int_comparison_exp
  additional_payee_splitter: split_atomic_contracts_bool_exp
  artist: users_bool_exp
  artist_address: String_comparison_exp
  artist_display_notes: String_comparison_exp
  artist_featured_token_id: String_comparison_exp
  artist_interview: String_comparison_exp
  artist_name: String_comparison_exp
  aspect_ratio: numeric_comparison_exp
  auction_end_time: timestamptz_comparison_exp
  auction_start_time: timestamptz_comparison_exp
  base_uri: String_comparison_exp
  bids: bids_metadata_bool_exp
  bids_aggregate: bids_metadata_aggregate_bool_exp
  canvas_mode: Boolean_comparison_exp
  charitable_giving_details: String_comparison_exp
  complete: Boolean_comparison_exp
  completed_at: timestamptz_comparison_exp
  contract: contracts_metadata_bool_exp
  contract_address: String_comparison_exp
  creative_credit: String_comparison_exp
  curation_status: curation_statuses_enum_comparison_exp
  curation_status_display: String_comparison_exp
  curation_status_override: curation_statuses_enum_comparison_exp
  currency_address: String_comparison_exp
  currency_decimals: Int_comparison_exp
  currency_symbol: String_comparison_exp
  dependency: dependencies_metadata_bool_exp
  dependency_name_and_version: String_comparison_exp
  description: String_comparison_exp
  disable_auto_image_format: Boolean_comparison_exp
  disable_sample_generator: Boolean_comparison_exp
  display_static: Boolean_comparison_exp
  external_asset_dependencies: project_external_asset_dependencies_bool_exp
  external_asset_dependencies_locked: Boolean_comparison_exp
  external_asset_dependency_count: bigint_comparison_exp
  favorited_by_user: Boolean_comparison_exp
  favorites: favorites_bool_exp
  favorites_aggregate: favorites_aggregate_bool_exp
  features: projects_features_bool_exp
  first_token_minted_at: timestamptz_comparison_exp
  generate_video_assets: Boolean_comparison_exp
  heritage_curation_status: String_comparison_exp
  id: String_comparison_exp
  index: Int_comparison_exp
  invocations: bigint_comparison_exp
  ipfs_hash: String_comparison_exp
  is_digi: Boolean_comparison_exp
  license: String_comparison_exp
  link_to_license: String_comparison_exp
  locked: Boolean_comparison_exp
  lowest_listing: float8_comparison_exp
  max_invocations: Int_comparison_exp
  minter_configuration: project_minter_configurations_bool_exp
  minter_configuration_id: String_comparison_exp
  name: String_comparison_exp
  oob_tokens: oob_tokens_metadata_bool_exp
  oob_tokens_aggregate: oob_tokens_metadata_aggregate_bool_exp
  paused: Boolean_comparison_exp
  preview_render_type: render_types_enum_comparison_exp
  price_per_token_in_wei: String_comparison_exp
  primary_render_type: render_types_enum_comparison_exp
  project_id: String_comparison_exp
  properties_updated_at: jsonb_comparison_exp
  proposed_artist_addresses_and_split: proposed_artist_addresses_and_splits_bool_exp
  proposed_artists_and_splits_id: String_comparison_exp
  read_only_addresses: jsonb_comparison_exp
  receipts: receipt_metadata_bool_exp
  receipts_aggregate: receipt_metadata_aggregate_bool_exp
  refresh_requests: refresh_requests_bool_exp
  render_complete: Boolean_comparison_exp
  render_delay: Int_comparison_exp
  render_with_gpu: Boolean_comparison_exp
  royalty_percentage: Int_comparison_exp
  sales_notes: String_comparison_exp
  script: String_comparison_exp
  script_count: bigint_comparison_exp
  script_json: jsonb_comparison_exp
  script_type_and_version: String_comparison_exp
  script_type_and_version_override: String_comparison_exp
  scripts: project_scripts_bool_exp
  second_token_minted_at: timestamptz_comparison_exp
  series: project_series_bool_exp
  series_id: Int_comparison_exp
  start_datetime: timestamptz_comparison_exp
  tags: entity_tags_bool_exp
  tokens: tokens_metadata_bool_exp
  tokens_aggregate: tokens_metadata_aggregate_bool_exp
  updated_at: timestamp_comparison_exp
  user_is_artist: Boolean_comparison_exp
  vertical: project_verticals_bool_exp
  vertical_name: String_comparison_exp
  video_aspect_ratio: numeric_comparison_exp
  video_duration: Int_comparison_exp
  video_fps: Int_comparison_exp
  video_render_delay: Int_comparison_exp
  website: String_comparison_exp
}

"""aggregate max on columns"""
type projects_metadata_max_fields {
  activated_at: timestamptz
  additional_payee: String
  additional_payee_percentage: Int
  additional_payee_secondary_sales_address: String
  additional_payee_secondary_sales_percentage: Int
  artist_address: String
  artist_display_notes: String
  artist_featured_token_id: String
  artist_interview: String
  artist_name: String
  aspect_ratio: numeric

  """
  A computed field, executes function "project_auction_end_time"
  """
  auction_end_time: timestamptz

  """
  A computed field, executes function "project_auction_start_time"
  """
  auction_start_time: timestamptz
  base_uri: String
  charitable_giving_details: String
  completed_at: timestamptz
  contract_address: String
  creative_credit: String

  """
  A computed field, executes function "curation_status_display"
  """
  curation_status_display: String
  currency_address: String
  currency_decimals: Int
  currency_symbol: String

  """
  Returns 'script_type_and_version_override' for the project if available; otherwise, falls back to 'script_type_and_version'
  """
  dependency_name_and_version: String
  description: String

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint

  """
  A computed field, executes function "first_token_minted_at"
  """
  first_token_minted_at: timestamptz

  """
  A computed field, executes function "project_heritage_status"
  """
  heritage_curation_status: String
  id: String
  index: Int

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint
  ipfs_hash: String
  license: String
  link_to_license: String

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Int
  minter_configuration_id: String
  name: String
  price_per_token_in_wei: String
  project_id: String
  proposed_artists_and_splits_id: String
  render_delay: Int
  royalty_percentage: Int
  sales_notes: String
  script: String

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint

  """
  Indicates the script type and version (e.g., p5@1.0.0) assigned to the project on its core contract
  """
  script_type_and_version: String

  """
  Specifies the script type and version override for the project, as set on the DiGi Artdependency registry contract
  """
  script_type_and_version_override: String

  """
  A computed field, executes function "second_token_minted_at"
  """
  second_token_minted_at: timestamptz
  series_id: Int
  start_datetime: timestamptz
  updated_at: timestamp
  vertical_name: String
  video_aspect_ratio: numeric
  video_duration: Int
  video_fps: Int
  video_render_delay: Int
  website: String
}

"""
order by max() on columns of table "projects_metadata"
"""
input projects_metadata_max_order_by {
  activated_at: order_by
  additional_payee: order_by
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_address: order_by
  additional_payee_secondary_sales_percentage: order_by
  artist_address: order_by
  artist_display_notes: order_by
  artist_featured_token_id: order_by
  artist_interview: order_by
  artist_name: order_by
  aspect_ratio: order_by
  base_uri: order_by
  charitable_giving_details: order_by
  completed_at: order_by
  contract_address: order_by
  creative_credit: order_by
  currency_address: order_by
  currency_decimals: order_by
  currency_symbol: order_by

  """
  Returns 'script_type_and_version_override' for the project if available; otherwise, falls back to 'script_type_and_version'
  """
  dependency_name_and_version: order_by
  description: order_by
  id: order_by
  index: order_by
  ipfs_hash: order_by
  license: order_by
  link_to_license: order_by
  max_invocations: order_by
  minter_configuration_id: order_by
  name: order_by
  price_per_token_in_wei: order_by
  project_id: order_by
  proposed_artists_and_splits_id: order_by
  render_delay: order_by
  royalty_percentage: order_by
  sales_notes: order_by
  script: order_by

  """
  Indicates the script type and version (e.g., p5@1.0.0) assigned to the project on its core contract
  """
  script_type_and_version: order_by

  """
  Specifies the script type and version override for the project, as set on the DiGi Artdependency registry contract
  """
  script_type_and_version_override: order_by
  series_id: order_by
  start_datetime: order_by
  updated_at: order_by
  vertical_name: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
  website: order_by
}

"""aggregate min on columns"""
type projects_metadata_min_fields {
  activated_at: timestamptz
  additional_payee: String
  additional_payee_percentage: Int
  additional_payee_secondary_sales_address: String
  additional_payee_secondary_sales_percentage: Int
  artist_address: String
  artist_display_notes: String
  artist_featured_token_id: String
  artist_interview: String
  artist_name: String
  aspect_ratio: numeric

  """
  A computed field, executes function "project_auction_end_time"
  """
  auction_end_time: timestamptz

  """
  A computed field, executes function "project_auction_start_time"
  """
  auction_start_time: timestamptz
  base_uri: String
  charitable_giving_details: String
  completed_at: timestamptz
  contract_address: String
  creative_credit: String

  """
  A computed field, executes function "curation_status_display"
  """
  curation_status_display: String
  currency_address: String
  currency_decimals: Int
  currency_symbol: String

  """
  Returns 'script_type_and_version_override' for the project if available; otherwise, falls back to 'script_type_and_version'
  """
  dependency_name_and_version: String
  description: String

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint

  """
  A computed field, executes function "first_token_minted_at"
  """
  first_token_minted_at: timestamptz

  """
  A computed field, executes function "project_heritage_status"
  """
  heritage_curation_status: String
  id: String
  index: Int

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint
  ipfs_hash: String
  license: String
  link_to_license: String

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Int
  minter_configuration_id: String
  name: String
  price_per_token_in_wei: String
  project_id: String
  proposed_artists_and_splits_id: String
  render_delay: Int
  royalty_percentage: Int
  sales_notes: String
  script: String

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint

  """
  Indicates the script type and version (e.g., p5@1.0.0) assigned to the project on its core contract
  """
  script_type_and_version: String

  """
  Specifies the script type and version override for the project, as set on the DiGi Artdependency registry contract
  """
  script_type_and_version_override: String

  """
  A computed field, executes function "second_token_minted_at"
  """
  second_token_minted_at: timestamptz
  series_id: Int
  start_datetime: timestamptz
  updated_at: timestamp
  vertical_name: String
  video_aspect_ratio: numeric
  video_duration: Int
  video_fps: Int
  video_render_delay: Int
  website: String
}

"""
order by min() on columns of table "projects_metadata"
"""
input projects_metadata_min_order_by {
  activated_at: order_by
  additional_payee: order_by
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_address: order_by
  additional_payee_secondary_sales_percentage: order_by
  artist_address: order_by
  artist_display_notes: order_by
  artist_featured_token_id: order_by
  artist_interview: order_by
  artist_name: order_by
  aspect_ratio: order_by
  base_uri: order_by
  charitable_giving_details: order_by
  completed_at: order_by
  contract_address: order_by
  creative_credit: order_by
  currency_address: order_by
  currency_decimals: order_by
  currency_symbol: order_by

  """
  Returns 'script_type_and_version_override' for the project if available; otherwise, falls back to 'script_type_and_version'
  """
  dependency_name_and_version: order_by
  description: order_by
  id: order_by
  index: order_by
  ipfs_hash: order_by
  license: order_by
  link_to_license: order_by
  max_invocations: order_by
  minter_configuration_id: order_by
  name: order_by
  price_per_token_in_wei: order_by
  project_id: order_by
  proposed_artists_and_splits_id: order_by
  render_delay: order_by
  royalty_percentage: order_by
  sales_notes: order_by
  script: order_by

  """
  Indicates the script type and version (e.g., p5@1.0.0) assigned to the project on its core contract
  """
  script_type_and_version: order_by

  """
  Specifies the script type and version override for the project, as set on the DiGi Artdependency registry contract
  """
  script_type_and_version_override: order_by
  series_id: order_by
  start_datetime: order_by
  updated_at: order_by
  vertical_name: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
  website: order_by
}

"""Ordering options when selecting data from "projects_metadata"."""
input projects_metadata_order_by {
  activated_at: order_by
  active: order_by
  additional_payee: order_by
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_address: order_by
  additional_payee_secondary_sales_percentage: order_by
  additional_payee_splitter: split_atomic_contracts_order_by
  artist: users_order_by
  artist_address: order_by
  artist_display_notes: order_by
  artist_featured_token_id: order_by
  artist_interview: order_by
  artist_name: order_by
  aspect_ratio: order_by
  auction_end_time: order_by
  auction_start_time: order_by
  base_uri: order_by
  bids_aggregate: bids_metadata_aggregate_order_by
  canvas_mode: order_by
  charitable_giving_details: order_by
  complete: order_by
  completed_at: order_by
  contract: contracts_metadata_order_by
  contract_address: order_by
  creative_credit: order_by
  curation_status: order_by
  curation_status_display: order_by
  curation_status_override: order_by
  currency_address: order_by
  currency_decimals: order_by
  currency_symbol: order_by
  dependency: dependencies_metadata_order_by
  dependency_name_and_version: order_by
  description: order_by
  disable_auto_image_format: order_by
  disable_sample_generator: order_by
  display_static: order_by
  external_asset_dependencies_aggregate: project_external_asset_dependencies_aggregate_order_by
  external_asset_dependencies_locked: order_by
  external_asset_dependency_count: order_by
  favorited_by_user: order_by
  favorites_aggregate: favorites_aggregate_order_by
  features: projects_features_order_by
  first_token_minted_at: order_by
  generate_video_assets: order_by
  heritage_curation_status: order_by
  id: order_by
  index: order_by
  invocations: order_by
  ipfs_hash: order_by
  is_digi: order_by
  license: order_by
  link_to_license: order_by
  locked: order_by
  lowest_listing: order_by
  max_invocations: order_by
  minter_configuration: project_minter_configurations_order_by
  minter_configuration_id: order_by
  name: order_by
  oob_tokens_aggregate: oob_tokens_metadata_aggregate_order_by
  paused: order_by
  preview_render_type: order_by
  price_per_token_in_wei: order_by
  primary_render_type: order_by
  project_id: order_by
  properties_updated_at: order_by
  proposed_artist_addresses_and_split: proposed_artist_addresses_and_splits_order_by
  proposed_artists_and_splits_id: order_by
  read_only_addresses: order_by
  receipts_aggregate: receipt_metadata_aggregate_order_by
  refresh_requests_aggregate: refresh_requests_aggregate_order_by
  render_complete: order_by
  render_delay: order_by
  render_with_gpu: order_by
  royalty_percentage: order_by
  sales_notes: order_by
  script: order_by
  script_count: order_by
  script_json: order_by
  script_type_and_version: order_by
  script_type_and_version_override: order_by
  scripts_aggregate: project_scripts_aggregate_order_by
  second_token_minted_at: order_by
  series: project_series_order_by
  series_id: order_by
  start_datetime: order_by
  tags_aggregate: entity_tags_aggregate_order_by
  tokens_aggregate: tokens_metadata_aggregate_order_by
  updated_at: order_by
  user_is_artist: order_by
  vertical: project_verticals_order_by
  vertical_name: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
  website: order_by
}

"""
select columns of table "projects_metadata"
"""
enum projects_metadata_select_column {
  """column name"""
  activated_at

  """column name"""
  active

  """column name"""
  additional_payee

  """column name"""
  additional_payee_percentage

  """column name"""
  additional_payee_secondary_sales_address

  """column name"""
  additional_payee_secondary_sales_percentage

  """column name"""
  artist_address

  """column name"""
  artist_display_notes

  """column name"""
  artist_featured_token_id

  """column name"""
  artist_interview

  """column name"""
  artist_name

  """column name"""
  aspect_ratio

  """column name"""
  base_uri

  """column name"""
  canvas_mode

  """column name"""
  charitable_giving_details

  """column name"""
  complete

  """column name"""
  completed_at

  """column name"""
  contract_address

  """column name"""
  creative_credit

  """column name"""
  curation_status

  """column name"""
  curation_status_override

  """column name"""
  currency_address

  """column name"""
  currency_decimals

  """column name"""
  currency_symbol

  """column name"""
  dependency_name_and_version

  """column name"""
  description

  """column name"""
  disable_auto_image_format

  """column name"""
  disable_sample_generator

  """column name"""
  display_static

  """column name"""
  external_asset_dependencies_locked

  """column name"""
  generate_video_assets

  """column name"""
  id

  """column name"""
  index

  """column name"""
  ipfs_hash

  """column name"""
  license

  """column name"""
  link_to_license

  """column name"""
  max_invocations

  """column name"""
  minter_configuration_id

  """column name"""
  name

  """column name"""
  paused

  """column name"""
  preview_render_type

  """column name"""
  price_per_token_in_wei

  """column name"""
  primary_render_type

  """column name"""
  project_id

  """column name"""
  properties_updated_at

  """column name"""
  proposed_artists_and_splits_id

  """column name"""
  read_only_addresses

  """column name"""
  render_delay

  """column name"""
  render_with_gpu

  """column name"""
  royalty_percentage

  """column name"""
  sales_notes

  """column name"""
  script

  """column name"""
  script_json

  """column name"""
  script_type_and_version

  """column name"""
  script_type_and_version_override

  """column name"""
  series_id

  """column name"""
  start_datetime

  """column name"""
  updated_at

  """column name"""
  vertical_name

  """column name"""
  video_aspect_ratio

  """column name"""
  video_duration

  """column name"""
  video_fps

  """column name"""
  video_render_delay

  """column name"""
  website
}

"""
select "projects_metadata_aggregate_bool_exp_bool_and_arguments_columns" columns of table "projects_metadata"
"""
enum projects_metadata_select_column_projects_metadata_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  active

  """column name"""
  canvas_mode

  """column name"""
  complete

  """column name"""
  disable_auto_image_format

  """column name"""
  disable_sample_generator

  """column name"""
  display_static

  """column name"""
  external_asset_dependencies_locked

  """column name"""
  generate_video_assets

  """column name"""
  paused

  """column name"""
  render_with_gpu
}

"""
select "projects_metadata_aggregate_bool_exp_bool_or_arguments_columns" columns of table "projects_metadata"
"""
enum projects_metadata_select_column_projects_metadata_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  active

  """column name"""
  canvas_mode

  """column name"""
  complete

  """column name"""
  disable_auto_image_format

  """column name"""
  disable_sample_generator

  """column name"""
  display_static

  """column name"""
  external_asset_dependencies_locked

  """column name"""
  generate_video_assets

  """column name"""
  paused

  """column name"""
  render_with_gpu
}

"""aggregate stddev on columns"""
type projects_metadata_stddev_fields {
  additional_payee_percentage: Float
  additional_payee_secondary_sales_percentage: Float
  aspect_ratio: Float
  currency_decimals: Float

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint
  index: Float

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Float
  render_delay: Float
  royalty_percentage: Float

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint
  series_id: Float
  video_aspect_ratio: Float
  video_duration: Float
  video_fps: Float
  video_render_delay: Float
}

"""
order by stddev() on columns of table "projects_metadata"
"""
input projects_metadata_stddev_order_by {
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_percentage: order_by
  aspect_ratio: order_by
  currency_decimals: order_by
  index: order_by
  max_invocations: order_by
  render_delay: order_by
  royalty_percentage: order_by
  series_id: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
}

"""aggregate stddev_pop on columns"""
type projects_metadata_stddev_pop_fields {
  additional_payee_percentage: Float
  additional_payee_secondary_sales_percentage: Float
  aspect_ratio: Float
  currency_decimals: Float

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint
  index: Float

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Float
  render_delay: Float
  royalty_percentage: Float

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint
  series_id: Float
  video_aspect_ratio: Float
  video_duration: Float
  video_fps: Float
  video_render_delay: Float
}

"""
order by stddev_pop() on columns of table "projects_metadata"
"""
input projects_metadata_stddev_pop_order_by {
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_percentage: order_by
  aspect_ratio: order_by
  currency_decimals: order_by
  index: order_by
  max_invocations: order_by
  render_delay: order_by
  royalty_percentage: order_by
  series_id: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
}

"""aggregate stddev_samp on columns"""
type projects_metadata_stddev_samp_fields {
  additional_payee_percentage: Float
  additional_payee_secondary_sales_percentage: Float
  aspect_ratio: Float
  currency_decimals: Float

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint
  index: Float

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Float
  render_delay: Float
  royalty_percentage: Float

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint
  series_id: Float
  video_aspect_ratio: Float
  video_duration: Float
  video_fps: Float
  video_render_delay: Float
}

"""
order by stddev_samp() on columns of table "projects_metadata"
"""
input projects_metadata_stddev_samp_order_by {
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_percentage: order_by
  aspect_ratio: order_by
  currency_decimals: order_by
  index: order_by
  max_invocations: order_by
  render_delay: order_by
  royalty_percentage: order_by
  series_id: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
}

"""
Streaming cursor of the table "projects_metadata"
"""
input projects_metadata_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: projects_metadata_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input projects_metadata_stream_cursor_value_input {
  activated_at: timestamptz
  active: Boolean
  additional_payee: String
  additional_payee_percentage: Int
  additional_payee_secondary_sales_address: String
  additional_payee_secondary_sales_percentage: Int
  artist_address: String
  artist_display_notes: String
  artist_featured_token_id: String
  artist_interview: String
  artist_name: String
  aspect_ratio: numeric
  base_uri: String
  canvas_mode: Boolean
  charitable_giving_details: String
  complete: Boolean
  completed_at: timestamptz
  contract_address: String
  creative_credit: String
  curation_status: curation_statuses_enum
  curation_status_override: curation_statuses_enum
  currency_address: String
  currency_decimals: Int
  currency_symbol: String

  """
  Returns 'script_type_and_version_override' for the project if available; otherwise, falls back to 'script_type_and_version'
  """
  dependency_name_and_version: String
  description: String
  disable_auto_image_format: Boolean
  disable_sample_generator: Boolean
  display_static: Boolean
  external_asset_dependencies_locked: Boolean
  generate_video_assets: Boolean
  id: String
  index: Int
  ipfs_hash: String
  license: String
  link_to_license: String
  max_invocations: Int
  minter_configuration_id: String
  name: String
  paused: Boolean
  preview_render_type: render_types_enum
  price_per_token_in_wei: String
  primary_render_type: render_types_enum
  project_id: String
  properties_updated_at: jsonb
  proposed_artists_and_splits_id: String
  read_only_addresses: jsonb
  render_delay: Int
  render_with_gpu: Boolean
  royalty_percentage: Int
  sales_notes: String
  script: String
  script_json: jsonb

  """
  Indicates the script type and version (e.g., p5@1.0.0) assigned to the project on its core contract
  """
  script_type_and_version: String

  """
  Specifies the script type and version override for the project, as set on the DiGi Artdependency registry contract
  """
  script_type_and_version_override: String
  series_id: Int
  start_datetime: timestamptz
  updated_at: timestamp
  vertical_name: String
  video_aspect_ratio: numeric
  video_duration: Int
  video_fps: Int
  video_render_delay: Int
  website: String
}

"""aggregate sum on columns"""
type projects_metadata_sum_fields {
  additional_payee_percentage: Int
  additional_payee_secondary_sales_percentage: Int
  aspect_ratio: numeric
  currency_decimals: Int

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint
  index: Int

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Int
  render_delay: Int
  royalty_percentage: Int

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint
  series_id: Int
  video_aspect_ratio: numeric
  video_duration: Int
  video_fps: Int
  video_render_delay: Int
}

"""
order by sum() on columns of table "projects_metadata"
"""
input projects_metadata_sum_order_by {
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_percentage: order_by
  aspect_ratio: order_by
  currency_decimals: order_by
  index: order_by
  max_invocations: order_by
  render_delay: order_by
  royalty_percentage: order_by
  series_id: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
}

"""aggregate var_pop on columns"""
type projects_metadata_var_pop_fields {
  additional_payee_percentage: Float
  additional_payee_secondary_sales_percentage: Float
  aspect_ratio: Float
  currency_decimals: Float

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint
  index: Float

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Float
  render_delay: Float
  royalty_percentage: Float

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint
  series_id: Float
  video_aspect_ratio: Float
  video_duration: Float
  video_fps: Float
  video_render_delay: Float
}

"""
order by var_pop() on columns of table "projects_metadata"
"""
input projects_metadata_var_pop_order_by {
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_percentage: order_by
  aspect_ratio: order_by
  currency_decimals: order_by
  index: order_by
  max_invocations: order_by
  render_delay: order_by
  royalty_percentage: order_by
  series_id: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
}

"""aggregate var_samp on columns"""
type projects_metadata_var_samp_fields {
  additional_payee_percentage: Float
  additional_payee_secondary_sales_percentage: Float
  aspect_ratio: Float
  currency_decimals: Float

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint
  index: Float

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Float
  render_delay: Float
  royalty_percentage: Float

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint
  series_id: Float
  video_aspect_ratio: Float
  video_duration: Float
  video_fps: Float
  video_render_delay: Float
}

"""
order by var_samp() on columns of table "projects_metadata"
"""
input projects_metadata_var_samp_order_by {
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_percentage: order_by
  aspect_ratio: order_by
  currency_decimals: order_by
  index: order_by
  max_invocations: order_by
  render_delay: order_by
  royalty_percentage: order_by
  series_id: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
}

"""aggregate variance on columns"""
type projects_metadata_variance_fields {
  additional_payee_percentage: Float
  additional_payee_secondary_sales_percentage: Float
  aspect_ratio: Float
  currency_decimals: Float

  """
  A computed field, executes function "project_external_asset_dependency_count"
  """
  external_asset_dependency_count: bigint
  index: Float

  """
  A computed field, executes function "project_invocations"
  """
  invocations: bigint

  """
  A computed field, executes function "project_lowest_listing"
  """
  lowest_listing: float8
  max_invocations: Float
  render_delay: Float
  royalty_percentage: Float

  """
  A computed field, executes function "project_script_count"
  """
  script_count: bigint
  series_id: Float
  video_aspect_ratio: Float
  video_duration: Float
  video_fps: Float
  video_render_delay: Float
}

"""
order by variance() on columns of table "projects_metadata"
"""
input projects_metadata_variance_order_by {
  additional_payee_percentage: order_by
  additional_payee_secondary_sales_percentage: order_by
  aspect_ratio: order_by
  currency_decimals: order_by
  index: order_by
  max_invocations: order_by
  render_delay: order_by
  royalty_percentage: order_by
  series_id: order_by
  video_aspect_ratio: order_by
  video_duration: order_by
  video_fps: order_by
  video_render_delay: order_by
}

"""Currently proposed artist and address splits"""
type proposed_artist_addresses_and_splits {
  additional_payee_primary_sales: String!
  additional_payee_primary_sales_percentage: Int!
  additional_payee_secondary_sales: String!
  additional_payee_secondary_sales_percentage: Int!

  """An object relationship"""
  additional_payee_splitter: split_atomic_contracts
  artist_address: String!

  """An object relationship"""
  project: projects_metadata!
  project_id: String!
}

"""
Boolean expression to filter rows from the table "proposed_artist_addresses_and_splits". All fields are combined with a logical 'AND'.
"""
input proposed_artist_addresses_and_splits_bool_exp {
  _and: [proposed_artist_addresses_and_splits_bool_exp!]
  _not: proposed_artist_addresses_and_splits_bool_exp
  _or: [proposed_artist_addresses_and_splits_bool_exp!]
  additional_payee_primary_sales: String_comparison_exp
  additional_payee_primary_sales_percentage: Int_comparison_exp
  additional_payee_secondary_sales: String_comparison_exp
  additional_payee_secondary_sales_percentage: Int_comparison_exp
  additional_payee_splitter: split_atomic_contracts_bool_exp
  artist_address: String_comparison_exp
  project: projects_metadata_bool_exp
  project_id: String_comparison_exp
}

"""
Ordering options when selecting data from "proposed_artist_addresses_and_splits".
"""
input proposed_artist_addresses_and_splits_order_by {
  additional_payee_primary_sales: order_by
  additional_payee_primary_sales_percentage: order_by
  additional_payee_secondary_sales: order_by
  additional_payee_secondary_sales_percentage: order_by
  additional_payee_splitter: split_atomic_contracts_order_by
  artist_address: order_by
  project: projects_metadata_order_by
  project_id: order_by
}

"""
select columns of table "proposed_artist_addresses_and_splits"
"""
enum proposed_artist_addresses_and_splits_select_column {
  """column name"""
  additional_payee_primary_sales

  """column name"""
  additional_payee_primary_sales_percentage

  """column name"""
  additional_payee_secondary_sales

  """column name"""
  additional_payee_secondary_sales_percentage

  """column name"""
  artist_address

  """column name"""
  project_id
}

"""
Streaming cursor of the table "proposed_artist_addresses_and_splits"
"""
input proposed_artist_addresses_and_splits_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: proposed_artist_addresses_and_splits_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input proposed_artist_addresses_and_splits_stream_cursor_value_input {
  additional_payee_primary_sales: String
  additional_payee_primary_sales_percentage: Int
  additional_payee_secondary_sales: String
  additional_payee_secondary_sales_percentage: Int
  artist_address: String
  project_id: String
}

enum PublicationState {
  LIVE
  PREVIEW
}

type Query {
  article(id: ID): ArticleEntityResponse
  articles(filters: ArticleFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): ArticleEntityResponseCollection
  artistEditorialPage(id: ID): ArtistEditorialPageEntityResponse
  artistEditorialPages(filters: ArtistEditorialPageFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): ArtistEditorialPageEntityResponseCollection

  """
  fetch data from the table: "artists"
  """
  artists(
    """distinct select on columns"""
    distinct_on: [artists_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artists_order_by!]

    """filter the rows returned"""
    where: artists_bool_exp
  ): [artists!]!

  """
  fetch aggregated fields from the table: "artists"
  """
  artists_aggregate(
    """distinct select on columns"""
    distinct_on: [artists_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artists_order_by!]

    """filter the rows returned"""
    where: artists_bool_exp
  ): artists_aggregate!

  """
  fetch data from the table: "bids_metadata"
  """
  bids_metadata(
    """distinct select on columns"""
    distinct_on: [bids_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bids_metadata_order_by!]

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): [bids_metadata!]!

  """
  fetch aggregated fields from the table: "bids_metadata"
  """
  bids_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [bids_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bids_metadata_order_by!]

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): bids_metadata_aggregate!

  """fetch data from the table: "bids_metadata" using primary key columns"""
  bids_metadata_by_pk(id: String!): bids_metadata

  """
  fetch data from the table: "categories"
  """
  categories(
    """distinct select on columns"""
    distinct_on: [categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [categories_order_by!]

    """filter the rows returned"""
    where: categories_bool_exp
  ): [categories!]!

  """fetch data from the table: "categories" using primary key columns"""
  categories_by_pk(name: String!): categories

  """
  fetch data from the table: "contract_allowlistings"
  """
  contract_allowlistings(
    """distinct select on columns"""
    distinct_on: [contract_allowlistings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contract_allowlistings_order_by!]

    """filter the rows returned"""
    where: contract_allowlistings_bool_exp
  ): [contract_allowlistings!]!

  """
  fetch data from the table: "contract_allowlistings" using primary key columns
  """
  contract_allowlistings_by_pk(contract_address: String!, user_address: String!): contract_allowlistings

  """
  fetch data from the table: "contract_type_names"
  """
  contract_type_names(
    """distinct select on columns"""
    distinct_on: [contract_type_names_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contract_type_names_order_by!]

    """filter the rows returned"""
    where: contract_type_names_bool_exp
  ): [contract_type_names!]!

  """
  fetch data from the table: "contract_type_names" using primary key columns
  """
  contract_type_names_by_pk(name: String!): contract_type_names

  """
  fetch data from the table: "contract_types"
  """
  contract_types(
    """distinct select on columns"""
    distinct_on: [contract_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contract_types_order_by!]

    """filter the rows returned"""
    where: contract_types_bool_exp
  ): [contract_types!]!

  """fetch data from the table: "contract_types" using primary key columns"""
  contract_types_by_pk(type: contract_type_names_enum!): contract_types

  """
  fetch data from the table: "contracts_metadata"
  """
  contracts_metadata(
    """distinct select on columns"""
    distinct_on: [contracts_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contracts_metadata_order_by!]

    """filter the rows returned"""
    where: contracts_metadata_bool_exp
  ): [contracts_metadata!]!

  """
  fetch aggregated fields from the table: "contracts_metadata"
  """
  contracts_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [contracts_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contracts_metadata_order_by!]

    """filter the rows returned"""
    where: contracts_metadata_bool_exp
  ): contracts_metadata_aggregate!

  """
  fetch data from the table: "contracts_metadata" using primary key columns
  """
  contracts_metadata_by_pk(address: String!): contracts_metadata

  """
  fetch data from the table: "dependencies_metadata"
  """
  dependencies_metadata(
    """distinct select on columns"""
    distinct_on: [dependencies_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependencies_metadata_order_by!]

    """filter the rows returned"""
    where: dependencies_metadata_bool_exp
  ): [dependencies_metadata!]!

  """
  fetch aggregated fields from the table: "dependencies_metadata"
  """
  dependencies_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [dependencies_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependencies_metadata_order_by!]

    """filter the rows returned"""
    where: dependencies_metadata_bool_exp
  ): dependencies_metadata_aggregate!

  """
  fetch data from the table: "dependencies_metadata" using primary key columns
  """
  dependencies_metadata_by_pk(name_and_version: String!): dependencies_metadata

  """
  fetch data from the table: "dependency_additional_cdns"
  """
  dependency_additional_cdns(
    """distinct select on columns"""
    distinct_on: [dependency_additional_cdns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_cdns_order_by!]

    """filter the rows returned"""
    where: dependency_additional_cdns_bool_exp
  ): [dependency_additional_cdns!]!

  """
  fetch aggregated fields from the table: "dependency_additional_cdns"
  """
  dependency_additional_cdns_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_additional_cdns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_cdns_order_by!]

    """filter the rows returned"""
    where: dependency_additional_cdns_bool_exp
  ): dependency_additional_cdns_aggregate!

  """
  fetch data from the table: "dependency_additional_cdns" using primary key columns
  """
  dependency_additional_cdns_by_pk(dependency_name_and_version: String!, index: Int!): dependency_additional_cdns

  """
  fetch data from the table: "dependency_additional_repositories"
  """
  dependency_additional_repositories(
    """distinct select on columns"""
    distinct_on: [dependency_additional_repositories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_repositories_order_by!]

    """filter the rows returned"""
    where: dependency_additional_repositories_bool_exp
  ): [dependency_additional_repositories!]!

  """
  fetch aggregated fields from the table: "dependency_additional_repositories"
  """
  dependency_additional_repositories_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_additional_repositories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_repositories_order_by!]

    """filter the rows returned"""
    where: dependency_additional_repositories_bool_exp
  ): dependency_additional_repositories_aggregate!

  """
  fetch data from the table: "dependency_additional_repositories" using primary key columns
  """
  dependency_additional_repositories_by_pk(dependency_name_and_version: String!, index: Int!): dependency_additional_repositories

  """
  fetch data from the table: "dependency_registries"
  """
  dependency_registries(
    """distinct select on columns"""
    distinct_on: [dependency_registries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_registries_order_by!]

    """filter the rows returned"""
    where: dependency_registries_bool_exp
  ): [dependency_registries!]!

  """
  fetch aggregated fields from the table: "dependency_registries"
  """
  dependency_registries_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_registries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_registries_order_by!]

    """filter the rows returned"""
    where: dependency_registries_bool_exp
  ): dependency_registries_aggregate!

  """
  fetch data from the table: "dependency_registries" using primary key columns
  """
  dependency_registries_by_pk(address: String!): dependency_registries

  """
  fetch data from the table: "dependency_scripts"
  """
  dependency_scripts(
    """distinct select on columns"""
    distinct_on: [dependency_scripts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_scripts_order_by!]

    """filter the rows returned"""
    where: dependency_scripts_bool_exp
  ): [dependency_scripts!]!

  """
  fetch aggregated fields from the table: "dependency_scripts"
  """
  dependency_scripts_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_scripts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_scripts_order_by!]

    """filter the rows returned"""
    where: dependency_scripts_bool_exp
  ): dependency_scripts_aggregate!

  """
  fetch data from the table: "dependency_scripts" using primary key columns
  """
  dependency_scripts_by_pk(dependency_name_and_version: String!, index: Int!): dependency_scripts

  """An array relationship"""
  entity_tags(
    """distinct select on columns"""
    distinct_on: [entity_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [entity_tags_order_by!]

    """filter the rows returned"""
    where: entity_tags_bool_exp
  ): [entity_tags!]!

  """fetch data from the table: "entity_tags" using primary key columns"""
  entity_tags_by_pk(id: Int!): entity_tags

  """An array relationship"""
  favorites(
    """distinct select on columns"""
    distinct_on: [favorites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [favorites_order_by!]

    """filter the rows returned"""
    where: favorites_bool_exp
  ): [favorites!]!

  """An aggregate relationship"""
  favorites_aggregate(
    """distinct select on columns"""
    distinct_on: [favorites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [favorites_order_by!]

    """filter the rows returned"""
    where: favorites_bool_exp
  ): favorites_aggregate!

  """fetch data from the table: "favorites" using primary key columns"""
  favorites_by_pk(id: Int!): favorites

  """
  fetch data from the table: "feature_flags"
  """
  feature_flags(
    """distinct select on columns"""
    distinct_on: [feature_flags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [feature_flags_order_by!]

    """filter the rows returned"""
    where: feature_flags_bool_exp
  ): [feature_flags!]!

  """fetch data from the table: "feature_flags" using primary key columns"""
  feature_flags_by_pk(flag_name: String!): feature_flags

  """
  execute function "filter_tokens_metadata_by_features" which returns "tokens_metadata"
  """
  filter_tokens_metadata_by_features(
    """
    input parameters for function "filter_tokens_metadata_by_features"
    """
    args: filter_tokens_metadata_by_features_args!

    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]!

  """
  execute function "filter_tokens_metadata_by_features" and query aggregates on result of table type "tokens_metadata"
  """
  filter_tokens_metadata_by_features_aggregate(
    """
    input parameters for function "filter_tokens_metadata_by_features_aggregate"
    """
    args: filter_tokens_metadata_by_features_args!

    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): tokens_metadata_aggregate!
  getAuthMessage(domain: String!, publicAddress: String!, uri: String!): AuthMessageOutput
  getOpenseaCollectionURL(contractAddress: String!, projectId: String!): OpenseaCollectionData
  isTokenFlagged(contractAddress: String!, tokenId: String!): Boolean

  """
  execute function "list_projects_metadata_random" which returns "projects_metadata"
  """
  list_projects_metadata_random(
    """
    input parameters for function "list_projects_metadata_random"
    """
    args: list_projects_metadata_random_args

    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """
  execute function "list_projects_metadata_random" and query aggregates on result of table type "projects_metadata"
  """
  list_projects_metadata_random_aggregate(
    """
    input parameters for function "list_projects_metadata_random_aggregate"
    """
    args: list_projects_metadata_random_args

    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!

  """
  fetch data from the table: "media"
  """
  media(
    """distinct select on columns"""
    distinct_on: [media_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_order_by!]

    """filter the rows returned"""
    where: media_bool_exp
  ): [media!]!

  """fetch data from the table: "media" using primary key columns"""
  media_by_pk(id: Int!): media
  minterInfo(id: ID): MinterInfoEntityResponse
  minterInfos(filters: MinterInfoFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): MinterInfoEntityResponseCollection

  """
  fetch data from the table: "minter_filter_type_names"
  """
  minter_filter_type_names(
    """distinct select on columns"""
    distinct_on: [minter_filter_type_names_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [minter_filter_type_names_order_by!]

    """filter the rows returned"""
    where: minter_filter_type_names_bool_exp
  ): [minter_filter_type_names!]!

  """
  fetch data from the table: "minter_filter_type_names" using primary key columns
  """
  minter_filter_type_names_by_pk(name: String!): minter_filter_type_names

  """
  fetch data from the table: "minter_filters_metadata"
  """
  minter_filters_metadata(
    """distinct select on columns"""
    distinct_on: [minter_filters_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [minter_filters_metadata_order_by!]

    """filter the rows returned"""
    where: minter_filters_metadata_bool_exp
  ): [minter_filters_metadata!]!

  """
  fetch data from the table: "minter_filters_metadata" using primary key columns
  """
  minter_filters_metadata_by_pk(address: String!): minter_filters_metadata

  """
  fetch data from the table: "minter_types"
  """
  minter_types(
    """distinct select on columns"""
    distinct_on: [minter_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [minter_types_order_by!]

    """filter the rows returned"""
    where: minter_types_bool_exp
  ): [minter_types!]!

  """fetch data from the table: "minter_types" using primary key columns"""
  minter_types_by_pk(type: minter_type_names_enum!): minter_types

  """
  fetch data from the table: "minters_metadata"
  """
  minters_metadata(
    """distinct select on columns"""
    distinct_on: [minters_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [minters_metadata_order_by!]

    """filter the rows returned"""
    where: minters_metadata_bool_exp
  ): [minters_metadata!]!

  """
  fetch data from the table: "minters_metadata" using primary key columns
  """
  minters_metadata_by_pk(address: String!): minters_metadata

  """
  fetch data from the table: "oob_tokens_metadata"
  """
  oob_tokens_metadata(
    """distinct select on columns"""
    distinct_on: [oob_tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oob_tokens_metadata_order_by!]

    """filter the rows returned"""
    where: oob_tokens_metadata_bool_exp
  ): [oob_tokens_metadata!]!

  """
  fetch aggregated fields from the table: "oob_tokens_metadata"
  """
  oob_tokens_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [oob_tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oob_tokens_metadata_order_by!]

    """filter the rows returned"""
    where: oob_tokens_metadata_bool_exp
  ): oob_tokens_metadata_aggregate!

  """
  fetch data from the table: "oob_tokens_metadata" using primary key columns
  """
  oob_tokens_metadata_by_pk(id: String!): oob_tokens_metadata

  """
  fetch data from the table: "primary_purchases"
  """
  primary_purchases(
    """distinct select on columns"""
    distinct_on: [primary_purchases_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [primary_purchases_order_by!]

    """filter the rows returned"""
    where: primary_purchases_bool_exp
  ): [primary_purchases!]!

  """
  fetch data from the table: "primary_purchases" using primary key columns
  """
  primary_purchases_by_pk(token_id: String!): primary_purchases

  """An array relationship"""
  processing_jobs(
    """distinct select on columns"""
    distinct_on: [processing_jobs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [processing_jobs_order_by!]

    """filter the rows returned"""
    where: processing_jobs_bool_exp
  ): [processing_jobs!]!

  """fetch data from the table: "processing_jobs" using primary key columns"""
  processing_jobs_by_pk(id: uuid!): processing_jobs
  projectPage(id: ID): ProjectPageEntityResponse
  projectPages(filters: ProjectPageFiltersInput, pagination: PaginationArg = {}, publicationState: PublicationState = LIVE, sort: [String] = []): ProjectPageEntityResponseCollection

  """
  fetch data from the table: "project_external_asset_dependencies"
  """
  project_external_asset_dependencies(
    """distinct select on columns"""
    distinct_on: [project_external_asset_dependencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_external_asset_dependencies_order_by!]

    """filter the rows returned"""
    where: project_external_asset_dependencies_bool_exp
  ): [project_external_asset_dependencies!]!

  """
  fetch data from the table: "project_external_asset_dependencies" using primary key columns
  """
  project_external_asset_dependencies_by_pk(index: Int!, project_id: String!): project_external_asset_dependencies

  """
  fetch data from the table: "project_minter_configurations"
  """
  project_minter_configurations(
    """distinct select on columns"""
    distinct_on: [project_minter_configurations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_minter_configurations_order_by!]

    """filter the rows returned"""
    where: project_minter_configurations_bool_exp
  ): [project_minter_configurations!]!

  """
  fetch data from the table: "project_minter_configurations" using primary key columns
  """
  project_minter_configurations_by_pk(id: String!): project_minter_configurations

  """
  fetch data from the table: "project_scripts"
  """
  project_scripts(
    """distinct select on columns"""
    distinct_on: [project_scripts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_scripts_order_by!]

    """filter the rows returned"""
    where: project_scripts_bool_exp
  ): [project_scripts!]!

  """fetch data from the table: "project_scripts" using primary key columns"""
  project_scripts_by_pk(index: Int!, project_id: String!): project_scripts

  """
  fetch data from the table: "project_series"
  """
  project_series(
    """distinct select on columns"""
    distinct_on: [project_series_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_series_order_by!]

    """filter the rows returned"""
    where: project_series_bool_exp
  ): [project_series!]!

  """
  fetch aggregated fields from the table: "project_series"
  """
  project_series_aggregate(
    """distinct select on columns"""
    distinct_on: [project_series_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_series_order_by!]

    """filter the rows returned"""
    where: project_series_bool_exp
  ): project_series_aggregate!

  """fetch data from the table: "project_series" using primary key columns"""
  project_series_by_pk(id: Int!): project_series

  """
  fetch data from the table: "project_vertical_categories"
  """
  project_vertical_categories(
    """distinct select on columns"""
    distinct_on: [project_vertical_categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_vertical_categories_order_by!]

    """filter the rows returned"""
    where: project_vertical_categories_bool_exp
  ): [project_vertical_categories!]!

  """
  fetch data from the table: "project_vertical_categories" using primary key columns
  """
  project_vertical_categories_by_pk(name: categories_enum!): project_vertical_categories

  """
  fetch data from the table: "project_verticals"
  """
  project_verticals(
    """distinct select on columns"""
    distinct_on: [project_verticals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_verticals_order_by!]

    """filter the rows returned"""
    where: project_verticals_bool_exp
  ): [project_verticals!]!

  """
  fetch data from the table: "project_verticals" using primary key columns
  """
  project_verticals_by_pk(name: verticals_enum!): project_verticals

  """
  fetch data from the table: "projects_features"
  """
  projects_features(
    """distinct select on columns"""
    distinct_on: [projects_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_features_order_by!]

    """filter the rows returned"""
    where: projects_features_bool_exp
  ): [projects_features!]!

  """
  fetch data from the table: "projects_features" using primary key columns
  """
  projects_features_by_pk(id: Int!): projects_features

  """
  fetch data from the table: "projects_metadata"
  """
  projects_metadata(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """
  fetch aggregated fields from the table: "projects_metadata"
  """
  projects_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!

  """
  fetch data from the table: "projects_metadata" using primary key columns
  """
  projects_metadata_by_pk(id: String!): projects_metadata

  """
  fetch data from the table: "proposed_artist_addresses_and_splits"
  """
  proposed_artist_addresses_and_splits(
    """distinct select on columns"""
    distinct_on: [proposed_artist_addresses_and_splits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [proposed_artist_addresses_and_splits_order_by!]

    """filter the rows returned"""
    where: proposed_artist_addresses_and_splits_bool_exp
  ): [proposed_artist_addresses_and_splits!]!

  """
  fetch data from the table: "proposed_artist_addresses_and_splits" using primary key columns
  """
  proposed_artist_addresses_and_splits_by_pk(project_id: String!): proposed_artist_addresses_and_splits

  """
  fetch data from the table: "receipt_metadata"
  """
  receipt_metadata(
    """distinct select on columns"""
    distinct_on: [receipt_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [receipt_metadata_order_by!]

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): [receipt_metadata!]!

  """
  fetch aggregated fields from the table: "receipt_metadata"
  """
  receipt_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [receipt_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [receipt_metadata_order_by!]

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): receipt_metadata_aggregate!

  """
  fetch data from the table: "receipt_metadata" using primary key columns
  """
  receipt_metadata_by_pk(id: String!): receipt_metadata

  """An array relationship"""
  refresh_requests(
    """distinct select on columns"""
    distinct_on: [refresh_requests_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [refresh_requests_order_by!]

    """filter the rows returned"""
    where: refresh_requests_bool_exp
  ): [refresh_requests!]!

  """
  fetch data from the table: "refresh_requests" using primary key columns
  """
  refresh_requests_by_pk(id: uuid!): refresh_requests

  """
  fetch data from the table: "render_types"
  """
  render_types(
    """distinct select on columns"""
    distinct_on: [render_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [render_types_order_by!]

    """filter the rows returned"""
    where: render_types_bool_exp
  ): [render_types!]!

  """fetch data from the table: "render_types" using primary key columns"""
  render_types_by_pk(value: String!): render_types

  """
  execute function "search_projects" which returns "projects_metadata"
  """
  search_projects(
    """
    input parameters for function "search_projects"
    """
    args: search_projects_args!

    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """
  execute function "search_projects" and query aggregates on result of table type "projects_metadata"
  """
  search_projects_aggregate(
    """
    input parameters for function "search_projects_aggregate"
    """
    args: search_projects_args!

    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!

  """
  execute function "search_tags" which returns "tags"
  """
  search_tags(
    """
    input parameters for function "search_tags"
    """
    args: search_tags_args!

    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """
  execute function "search_tokens" which returns "tokens_metadata"
  """
  search_tokens(
    """
    input parameters for function "search_tokens"
    """
    args: search_tokens_args!

    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]!

  """
  execute function "search_tokens" and query aggregates on result of table type "tokens_metadata"
  """
  search_tokens_aggregate(
    """
    input parameters for function "search_tokens_aggregate"
    """
    args: search_tokens_args!

    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): tokens_metadata_aggregate!

  """
  execute function "search_users" which returns "user_profiles"
  """
  search_users(
    """
    input parameters for function "search_users"
    """
    args: search_users_args!

    """distinct select on columns"""
    distinct_on: [user_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_profiles_order_by!]

    """filter the rows returned"""
    where: user_profiles_bool_exp
  ): [user_profiles!]!

  """
  execute function "search_users" and query aggregates on result of table type "user_profiles"
  """
  search_users_aggregate(
    """
    input parameters for function "search_users_aggregate"
    """
    args: search_users_args!

    """distinct select on columns"""
    distinct_on: [user_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_profiles_order_by!]

    """filter the rows returned"""
    where: user_profiles_bool_exp
  ): user_profiles_aggregate!

  """
  fetch data from the table: "split_atomic_contracts"
  """
  split_atomic_contracts(
    """distinct select on columns"""
    distinct_on: [split_atomic_contracts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_atomic_contracts_order_by!]

    """filter the rows returned"""
    where: split_atomic_contracts_bool_exp
  ): [split_atomic_contracts!]!

  """
  fetch data from the table: "split_atomic_contracts" using primary key columns
  """
  split_atomic_contracts_by_pk(address: String!): split_atomic_contracts

  """
  fetch data from the table: "split_atomic_factories"
  """
  split_atomic_factories(
    """distinct select on columns"""
    distinct_on: [split_atomic_factories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_atomic_factories_order_by!]

    """filter the rows returned"""
    where: split_atomic_factories_bool_exp
  ): [split_atomic_factories!]!

  """
  fetch data from the table: "split_atomic_factories" using primary key columns
  """
  split_atomic_factories_by_pk(address: String!): split_atomic_factories

  """
  fetch data from the table: "split_payment_configurations"
  """
  split_payment_configurations(
    """distinct select on columns"""
    distinct_on: [split_payment_configurations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_payment_configurations_order_by!]

    """filter the rows returned"""
    where: split_payment_configurations_bool_exp
  ): [split_payment_configurations!]!

  """
  fetch data from the table: "split_payment_configurations" using primary key columns
  """
  split_payment_configurations_by_pk(id: String!): split_payment_configurations

  """
  fetch data from the table: "tags"
  """
  tags(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """fetch data from the table: "tags" using primary key columns"""
  tags_by_pk(name: String!): tags

  """
  fetch data from the table: "tokens_metadata"
  """
  tokens_metadata(
    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]!

  """
  fetch aggregated fields from the table: "tokens_metadata"
  """
  tokens_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): tokens_metadata_aggregate!

  """fetch data from the table: "tokens_metadata" using primary key columns"""
  tokens_metadata_by_pk(id: String!): tokens_metadata

  """
  fetch data from the table: "user_profiles"
  """
  user_profiles(
    """distinct select on columns"""
    distinct_on: [user_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_profiles_order_by!]

    """filter the rows returned"""
    where: user_profiles_bool_exp
  ): [user_profiles!]!

  """
  fetch aggregated fields from the table: "user_profiles"
  """
  user_profiles_aggregate(
    """distinct select on columns"""
    distinct_on: [user_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_profiles_order_by!]

    """filter the rows returned"""
    where: user_profiles_bool_exp
  ): user_profiles_aggregate!

  """fetch data from the table: "user_profiles" using primary key columns"""
  user_profiles_by_pk(id: Int!): user_profiles

  """
  fetch data from the table: "users"
  """
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch aggregated fields from the table: "users"
  """
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """fetch data from the table: "users" using primary key columns"""
  users_by_pk(public_address: String!): users

  """
  fetch data from the table: "verticals"
  """
  verticals(
    """distinct select on columns"""
    distinct_on: [verticals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [verticals_order_by!]

    """filter the rows returned"""
    where: verticals_bool_exp
  ): [verticals!]!

  """fetch data from the table: "verticals" using primary key columns"""
  verticals_by_pk(name: String!): verticals

  """
  fetch data from the table: "video_aspect_ratios"
  """
  video_aspect_ratios(
    """distinct select on columns"""
    distinct_on: [video_aspect_ratios_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [video_aspect_ratios_order_by!]

    """filter the rows returned"""
    where: video_aspect_ratios_bool_exp
  ): [video_aspect_ratios!]!

  """
  fetch data from the table: "video_aspect_ratios" using primary key columns
  """
  video_aspect_ratios_by_pk(value: numeric!): video_aspect_ratios

  """
  fetch data from the table: "video_frame_rates"
  """
  video_frame_rates(
    """distinct select on columns"""
    distinct_on: [video_frame_rates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [video_frame_rates_order_by!]

    """filter the rows returned"""
    where: video_frame_rates_bool_exp
  ): [video_frame_rates!]!

  """
  fetch data from the table: "video_frame_rates" using primary key columns
  """
  video_frame_rates_by_pk(value: Int!): video_frame_rates

  """
  fetch data from the table: "webflow_artist_info"
  """
  webflow_artist_info(
    """distinct select on columns"""
    distinct_on: [webflow_artist_info_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webflow_artist_info_order_by!]

    """filter the rows returned"""
    where: webflow_artist_info_bool_exp
  ): [webflow_artist_info!]!

  """
  fetch data from the table: "webflow_artist_info" using primary key columns
  """
  webflow_artist_info_by_pk(webflow_item_id: String!): webflow_artist_info

  """
  fetch data from the table: "webflow_spectrum_articles"
  """
  webflow_spectrum_articles(
    """distinct select on columns"""
    distinct_on: [webflow_spectrum_articles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webflow_spectrum_articles_order_by!]

    """filter the rows returned"""
    where: webflow_spectrum_articles_bool_exp
  ): [webflow_spectrum_articles!]!

  """
  fetch data from the table: "webflow_spectrum_articles" using primary key columns
  """
  webflow_spectrum_articles_by_pk(webflow_item_id: String!): webflow_spectrum_articles
}

input random_oob_token_projects_metadata_args {
  seed: float8
}

input random_token_projects_metadata_args {
  seed: float8
}

"""indexed data from subgraph Receipt entity, used by settlment minters"""
type receipt_metadata {
  """
  Computed field defining approximate excess settlement funds available to be reclaimed on a given receipt, given latest purchase price on minter. May have minor rounding errors after 15 decimals.
  """
  excess_settlement_funds: String
  id: String!

  """An object relationship"""
  minter: minters_metadata!
  minter_id: String!
  net_posted: String!
  num_purchased: String!

  """An object relationship"""
  project: projects_metadata!
  project_id: String!

  """An object relationship"""
  project_minter_configuration: project_minter_configurations

  """An object relationship"""
  user: users!
  user_address: String!
}

"""
aggregated selection of "receipt_metadata"
"""
type receipt_metadata_aggregate {
  aggregate: receipt_metadata_aggregate_fields
  nodes: [receipt_metadata!]!
}

input receipt_metadata_aggregate_bool_exp {
  count: receipt_metadata_aggregate_bool_exp_count
}

input receipt_metadata_aggregate_bool_exp_count {
  arguments: [receipt_metadata_select_column!]
  distinct: Boolean
  filter: receipt_metadata_bool_exp
  predicate: Int_comparison_exp!
}

"""
aggregate fields of "receipt_metadata"
"""
type receipt_metadata_aggregate_fields {
  count(columns: [receipt_metadata_select_column!], distinct: Boolean): Int!
  max: receipt_metadata_max_fields
  min: receipt_metadata_min_fields
}

"""
order by aggregate values of table "receipt_metadata"
"""
input receipt_metadata_aggregate_order_by {
  count: order_by
  max: receipt_metadata_max_order_by
  min: receipt_metadata_min_order_by
}

"""
Boolean expression to filter rows from the table "receipt_metadata". All fields are combined with a logical 'AND'.
"""
input receipt_metadata_bool_exp {
  _and: [receipt_metadata_bool_exp!]
  _not: receipt_metadata_bool_exp
  _or: [receipt_metadata_bool_exp!]
  excess_settlement_funds: String_comparison_exp
  id: String_comparison_exp
  minter: minters_metadata_bool_exp
  minter_id: String_comparison_exp
  net_posted: String_comparison_exp
  num_purchased: String_comparison_exp
  project: projects_metadata_bool_exp
  project_id: String_comparison_exp
  project_minter_configuration: project_minter_configurations_bool_exp
  user: users_bool_exp
  user_address: String_comparison_exp
}

"""aggregate max on columns"""
type receipt_metadata_max_fields {
  """
  Computed field defining approximate excess settlement funds available to be reclaimed on a given receipt, given latest purchase price on minter. May have minor rounding errors after 15 decimals.
  """
  excess_settlement_funds: String
  id: String
  minter_id: String
  net_posted: String
  num_purchased: String
  project_id: String
  user_address: String
}

"""
order by max() on columns of table "receipt_metadata"
"""
input receipt_metadata_max_order_by {
  id: order_by
  minter_id: order_by
  net_posted: order_by
  num_purchased: order_by
  project_id: order_by
  user_address: order_by
}

"""aggregate min on columns"""
type receipt_metadata_min_fields {
  """
  Computed field defining approximate excess settlement funds available to be reclaimed on a given receipt, given latest purchase price on minter. May have minor rounding errors after 15 decimals.
  """
  excess_settlement_funds: String
  id: String
  minter_id: String
  net_posted: String
  num_purchased: String
  project_id: String
  user_address: String
}

"""
order by min() on columns of table "receipt_metadata"
"""
input receipt_metadata_min_order_by {
  id: order_by
  minter_id: order_by
  net_posted: order_by
  num_purchased: order_by
  project_id: order_by
  user_address: order_by
}

"""Ordering options when selecting data from "receipt_metadata"."""
input receipt_metadata_order_by {
  excess_settlement_funds: order_by
  id: order_by
  minter: minters_metadata_order_by
  minter_id: order_by
  net_posted: order_by
  num_purchased: order_by
  project: projects_metadata_order_by
  project_id: order_by
  project_minter_configuration: project_minter_configurations_order_by
  user: users_order_by
  user_address: order_by
}

"""
select columns of table "receipt_metadata"
"""
enum receipt_metadata_select_column {
  """column name"""
  id

  """column name"""
  minter_id

  """column name"""
  net_posted

  """column name"""
  num_purchased

  """column name"""
  project_id

  """column name"""
  user_address
}

"""
Streaming cursor of the table "receipt_metadata"
"""
input receipt_metadata_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: receipt_metadata_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input receipt_metadata_stream_cursor_value_input {
  id: String
  minter_id: String
  net_posted: String
  num_purchased: String
  project_id: String
  user_address: String
}

enum refresh_asset_types_enum {
  Image
  None
  Video
}

"""
Boolean expression to compare columns of type "refresh_asset_types_enum". All fields are combined with logical 'AND'.
"""
input refresh_asset_types_enum_comparison_exp {
  _eq: refresh_asset_types_enum
  _in: [refresh_asset_types_enum!]
  _is_null: Boolean
  _neq: refresh_asset_types_enum
  _nin: [refresh_asset_types_enum!]
}

enum refresh_request_types_enum {
  Project
  Token
}

"""
Boolean expression to compare columns of type "refresh_request_types_enum". All fields are combined with logical 'AND'.
"""
input refresh_request_types_enum_comparison_exp {
  _eq: refresh_request_types_enum
  _in: [refresh_request_types_enum!]
  _is_null: Boolean
  _neq: refresh_request_types_enum
  _nin: [refresh_request_types_enum!]
}

"""
This table tracks pending & completed requests to refresh the media assets for a project or token. Artists and staff may re-render the .png, .mp4 and .gif files for a collection of NFTs and this table maintains those requests.
"""
type refresh_requests {
  completed_at: timestamptz
  id: uuid!

  """An array relationship"""
  processing_jobs(
    """distinct select on columns"""
    distinct_on: [processing_jobs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [processing_jobs_order_by!]

    """filter the rows returned"""
    where: processing_jobs_bool_exp
  ): [processing_jobs!]!
  project_id: String!

  """
  A computed field, executes function "refresh_requests_queue_weight"
  """
  queue_weight: bigint
  request_type: refresh_request_types_enum!
  submitted_at: timestamptz!
  token_ids(
    """JSON select path"""
    path: String
  ): jsonb
}

"""
order by aggregate values of table "refresh_requests"
"""
input refresh_requests_aggregate_order_by {
  count: order_by
  max: refresh_requests_max_order_by
  min: refresh_requests_min_order_by
}

"""
Boolean expression to filter rows from the table "refresh_requests". All fields are combined with a logical 'AND'.
"""
input refresh_requests_bool_exp {
  _and: [refresh_requests_bool_exp!]
  _not: refresh_requests_bool_exp
  _or: [refresh_requests_bool_exp!]
  completed_at: timestamptz_comparison_exp
  id: uuid_comparison_exp
  processing_jobs: processing_jobs_bool_exp
  project_id: String_comparison_exp
  queue_weight: bigint_comparison_exp
  request_type: refresh_request_types_enum_comparison_exp
  submitted_at: timestamptz_comparison_exp
  token_ids: jsonb_comparison_exp
}

"""
order by max() on columns of table "refresh_requests"
"""
input refresh_requests_max_order_by {
  completed_at: order_by
  id: order_by
  project_id: order_by
  submitted_at: order_by
}

"""
order by min() on columns of table "refresh_requests"
"""
input refresh_requests_min_order_by {
  completed_at: order_by
  id: order_by
  project_id: order_by
  submitted_at: order_by
}

"""Ordering options when selecting data from "refresh_requests"."""
input refresh_requests_order_by {
  completed_at: order_by
  id: order_by
  processing_jobs_aggregate: processing_jobs_aggregate_order_by
  project_id: order_by
  queue_weight: order_by
  request_type: order_by
  submitted_at: order_by
  token_ids: order_by
}

"""
select columns of table "refresh_requests"
"""
enum refresh_requests_select_column {
  """column name"""
  completed_at

  """column name"""
  id

  """column name"""
  project_id

  """column name"""
  request_type

  """column name"""
  submitted_at

  """column name"""
  token_ids
}

"""
Streaming cursor of the table "refresh_requests"
"""
input refresh_requests_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: refresh_requests_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input refresh_requests_stream_cursor_value_input {
  completed_at: timestamptz
  id: uuid
  project_id: String
  request_type: refresh_request_types_enum
  submitted_at: timestamptz
  token_ids: jsonb
}

"""
columns and relationships of "render_types"
"""
type render_types {
  label: String!
  value: String!
}

"""
Boolean expression to filter rows from the table "render_types". All fields are combined with a logical 'AND'.
"""
input render_types_bool_exp {
  _and: [render_types_bool_exp!]
  _not: render_types_bool_exp
  _or: [render_types_bool_exp!]
  label: String_comparison_exp
  value: String_comparison_exp
}

enum render_types_enum {
  """gif"""
  gif

  """png"""
  image

  """generator live view"""
  live

  """mp4"""
  video
}

"""
Boolean expression to compare columns of type "render_types_enum". All fields are combined with logical 'AND'.
"""
input render_types_enum_comparison_exp {
  _eq: render_types_enum
  _in: [render_types_enum!]
  _is_null: Boolean
  _neq: render_types_enum
  _nin: [render_types_enum!]
}

"""Ordering options when selecting data from "render_types"."""
input render_types_order_by {
  label: order_by
  value: order_by
}

"""
select columns of table "render_types"
"""
enum render_types_select_column {
  """column name"""
  label

  """column name"""
  value
}

"""
Streaming cursor of the table "render_types"
"""
input render_types_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: render_types_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input render_types_stream_cursor_value_input {
  label: String
  value: String
}

type ResponseCollectionMeta {
  pagination: Pagination!
}

input search_projects_args {
  search: String
}

input search_tags_args {
  search: String
}

input search_tokens_args {
  search: String
}

input search_users_args {
  search: String
}

scalar seed_float

"""Table for all indexed split atomic contracts"""
type split_atomic_contracts {
  address: String!
  implementation: String!
  split_atomic_factory: String!

  """An array relationship"""
  splits(
    """distinct select on columns"""
    distinct_on: [split_payment_configurations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_payment_configurations_order_by!]

    """filter the rows returned"""
    where: split_payment_configurations_bool_exp
  ): [split_payment_configurations!]!
  type: String!
}

"""
order by aggregate values of table "split_atomic_contracts"
"""
input split_atomic_contracts_aggregate_order_by {
  count: order_by
  max: split_atomic_contracts_max_order_by
  min: split_atomic_contracts_min_order_by
}

"""
Boolean expression to filter rows from the table "split_atomic_contracts". All fields are combined with a logical 'AND'.
"""
input split_atomic_contracts_bool_exp {
  _and: [split_atomic_contracts_bool_exp!]
  _not: split_atomic_contracts_bool_exp
  _or: [split_atomic_contracts_bool_exp!]
  address: String_comparison_exp
  implementation: String_comparison_exp
  split_atomic_factory: String_comparison_exp
  splits: split_payment_configurations_bool_exp
  type: String_comparison_exp
}

"""
order by max() on columns of table "split_atomic_contracts"
"""
input split_atomic_contracts_max_order_by {
  address: order_by
  implementation: order_by
  split_atomic_factory: order_by
  type: order_by
}

"""
order by min() on columns of table "split_atomic_contracts"
"""
input split_atomic_contracts_min_order_by {
  address: order_by
  implementation: order_by
  split_atomic_factory: order_by
  type: order_by
}

"""Ordering options when selecting data from "split_atomic_contracts"."""
input split_atomic_contracts_order_by {
  address: order_by
  implementation: order_by
  split_atomic_factory: order_by
  splits_aggregate: split_payment_configurations_aggregate_order_by
  type: order_by
}

"""
select columns of table "split_atomic_contracts"
"""
enum split_atomic_contracts_select_column {
  """column name"""
  address

  """column name"""
  implementation

  """column name"""
  split_atomic_factory

  """column name"""
  type
}

"""
Streaming cursor of the table "split_atomic_contracts"
"""
input split_atomic_contracts_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: split_atomic_contracts_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input split_atomic_contracts_stream_cursor_value_input {
  address: String
  implementation: String
  split_atomic_factory: String
  type: String
}

"""Contains all indexed split atomic factory contracts"""
type split_atomic_factories {
  abandoned: Boolean!
  address: String!
  implementation: String!
  required_split_address: String
  required_split_basis_points: numeric

  """
  fetch data from the table: "split_atomic_contracts"
  """
  split_atomic_contracts(
    """distinct select on columns"""
    distinct_on: [split_atomic_contracts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_atomic_contracts_order_by!]

    """filter the rows returned"""
    where: split_atomic_contracts_bool_exp
  ): [split_atomic_contracts!]!
  type: String!
}

"""
Boolean expression to filter rows from the table "split_atomic_factories". All fields are combined with a logical 'AND'.
"""
input split_atomic_factories_bool_exp {
  _and: [split_atomic_factories_bool_exp!]
  _not: split_atomic_factories_bool_exp
  _or: [split_atomic_factories_bool_exp!]
  abandoned: Boolean_comparison_exp
  address: String_comparison_exp
  implementation: String_comparison_exp
  required_split_address: String_comparison_exp
  required_split_basis_points: numeric_comparison_exp
  split_atomic_contracts: split_atomic_contracts_bool_exp
  type: String_comparison_exp
}

"""Ordering options when selecting data from "split_atomic_factories"."""
input split_atomic_factories_order_by {
  abandoned: order_by
  address: order_by
  implementation: order_by
  required_split_address: order_by
  required_split_basis_points: order_by
  split_atomic_contracts_aggregate: split_atomic_contracts_aggregate_order_by
  type: order_by
}

"""
select columns of table "split_atomic_factories"
"""
enum split_atomic_factories_select_column {
  """column name"""
  abandoned

  """column name"""
  address

  """column name"""
  implementation

  """column name"""
  required_split_address

  """column name"""
  required_split_basis_points

  """column name"""
  type
}

"""
Streaming cursor of the table "split_atomic_factories"
"""
input split_atomic_factories_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: split_atomic_factories_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input split_atomic_factories_stream_cursor_value_input {
  abandoned: Boolean
  address: String
  implementation: String
  required_split_address: String
  required_split_basis_points: numeric
  type: String
}

"""Table of all individual splits used by indexed split atomic contracts"""
type split_payment_configurations {
  basis_points: Int!
  id: String!
  index: Int!
  recipient: String!
  split_atomic_contract: String!
}

"""
order by aggregate values of table "split_payment_configurations"
"""
input split_payment_configurations_aggregate_order_by {
  avg: split_payment_configurations_avg_order_by
  count: order_by
  max: split_payment_configurations_max_order_by
  min: split_payment_configurations_min_order_by
  stddev: split_payment_configurations_stddev_order_by
  stddev_pop: split_payment_configurations_stddev_pop_order_by
  stddev_samp: split_payment_configurations_stddev_samp_order_by
  sum: split_payment_configurations_sum_order_by
  var_pop: split_payment_configurations_var_pop_order_by
  var_samp: split_payment_configurations_var_samp_order_by
  variance: split_payment_configurations_variance_order_by
}

"""
order by avg() on columns of table "split_payment_configurations"
"""
input split_payment_configurations_avg_order_by {
  basis_points: order_by
  index: order_by
}

"""
Boolean expression to filter rows from the table "split_payment_configurations". All fields are combined with a logical 'AND'.
"""
input split_payment_configurations_bool_exp {
  _and: [split_payment_configurations_bool_exp!]
  _not: split_payment_configurations_bool_exp
  _or: [split_payment_configurations_bool_exp!]
  basis_points: Int_comparison_exp
  id: String_comparison_exp
  index: Int_comparison_exp
  recipient: String_comparison_exp
  split_atomic_contract: String_comparison_exp
}

"""
order by max() on columns of table "split_payment_configurations"
"""
input split_payment_configurations_max_order_by {
  basis_points: order_by
  id: order_by
  index: order_by
  recipient: order_by
  split_atomic_contract: order_by
}

"""
order by min() on columns of table "split_payment_configurations"
"""
input split_payment_configurations_min_order_by {
  basis_points: order_by
  id: order_by
  index: order_by
  recipient: order_by
  split_atomic_contract: order_by
}

"""
Ordering options when selecting data from "split_payment_configurations".
"""
input split_payment_configurations_order_by {
  basis_points: order_by
  id: order_by
  index: order_by
  recipient: order_by
  split_atomic_contract: order_by
}

"""
select columns of table "split_payment_configurations"
"""
enum split_payment_configurations_select_column {
  """column name"""
  basis_points

  """column name"""
  id

  """column name"""
  index

  """column name"""
  recipient

  """column name"""
  split_atomic_contract
}

"""
order by stddev() on columns of table "split_payment_configurations"
"""
input split_payment_configurations_stddev_order_by {
  basis_points: order_by
  index: order_by
}

"""
order by stddev_pop() on columns of table "split_payment_configurations"
"""
input split_payment_configurations_stddev_pop_order_by {
  basis_points: order_by
  index: order_by
}

"""
order by stddev_samp() on columns of table "split_payment_configurations"
"""
input split_payment_configurations_stddev_samp_order_by {
  basis_points: order_by
  index: order_by
}

"""
Streaming cursor of the table "split_payment_configurations"
"""
input split_payment_configurations_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: split_payment_configurations_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input split_payment_configurations_stream_cursor_value_input {
  basis_points: Int
  id: String
  index: Int
  recipient: String
  split_atomic_contract: String
}

"""
order by sum() on columns of table "split_payment_configurations"
"""
input split_payment_configurations_sum_order_by {
  basis_points: order_by
  index: order_by
}

"""
order by var_pop() on columns of table "split_payment_configurations"
"""
input split_payment_configurations_var_pop_order_by {
  basis_points: order_by
  index: order_by
}

"""
order by var_samp() on columns of table "split_payment_configurations"
"""
input split_payment_configurations_var_samp_order_by {
  basis_points: order_by
  index: order_by
}

"""
order by variance() on columns of table "split_payment_configurations"
"""
input split_payment_configurations_variance_order_by {
  basis_points: order_by
  index: order_by
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

input StringFilterInput {
  and: [String]
  between: [String]
  contains: String
  containsi: String
  endsWith: String
  eq: String
  eqi: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  not: StringFilterInput
  notContains: String
  notContainsi: String
  notIn: [String]
  notNull: Boolean
  null: Boolean
  or: [String]
  startsWith: String
}

input StringFilterInput_remote_rel_projects_metadataartistPage {
  and: [String]
  between: [String]
  contains: String
  containsi: String
  endsWith: String
  eqi: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  ne: String
  not: StringFilterInput
  notContains: String
  notContainsi: String
  notIn: [String]
  notNull: Boolean
  null: Boolean
  or: [String]
  startsWith: String
}

type Subscription {
  """
  fetch data from the table: "artists"
  """
  artists(
    """distinct select on columns"""
    distinct_on: [artists_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artists_order_by!]

    """filter the rows returned"""
    where: artists_bool_exp
  ): [artists!]!

  """
  fetch aggregated fields from the table: "artists"
  """
  artists_aggregate(
    """distinct select on columns"""
    distinct_on: [artists_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [artists_order_by!]

    """filter the rows returned"""
    where: artists_bool_exp
  ): artists_aggregate!

  """
  fetch data from the table in a streaming manner: "artists"
  """
  artists_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [artists_stream_cursor_input]!

    """filter the rows returned"""
    where: artists_bool_exp
  ): [artists!]!

  """
  fetch data from the table: "bids_metadata"
  """
  bids_metadata(
    """distinct select on columns"""
    distinct_on: [bids_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bids_metadata_order_by!]

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): [bids_metadata!]!

  """
  fetch aggregated fields from the table: "bids_metadata"
  """
  bids_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [bids_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bids_metadata_order_by!]

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): bids_metadata_aggregate!

  """fetch data from the table: "bids_metadata" using primary key columns"""
  bids_metadata_by_pk(id: String!): bids_metadata

  """
  fetch data from the table in a streaming manner: "bids_metadata"
  """
  bids_metadata_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [bids_metadata_stream_cursor_input]!

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): [bids_metadata!]!

  """
  fetch data from the table: "categories"
  """
  categories(
    """distinct select on columns"""
    distinct_on: [categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [categories_order_by!]

    """filter the rows returned"""
    where: categories_bool_exp
  ): [categories!]!

  """fetch data from the table: "categories" using primary key columns"""
  categories_by_pk(name: String!): categories

  """
  fetch data from the table in a streaming manner: "categories"
  """
  categories_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [categories_stream_cursor_input]!

    """filter the rows returned"""
    where: categories_bool_exp
  ): [categories!]!

  """
  fetch data from the table: "contract_allowlistings"
  """
  contract_allowlistings(
    """distinct select on columns"""
    distinct_on: [contract_allowlistings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contract_allowlistings_order_by!]

    """filter the rows returned"""
    where: contract_allowlistings_bool_exp
  ): [contract_allowlistings!]!

  """
  fetch data from the table: "contract_allowlistings" using primary key columns
  """
  contract_allowlistings_by_pk(contract_address: String!, user_address: String!): contract_allowlistings

  """
  fetch data from the table in a streaming manner: "contract_allowlistings"
  """
  contract_allowlistings_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [contract_allowlistings_stream_cursor_input]!

    """filter the rows returned"""
    where: contract_allowlistings_bool_exp
  ): [contract_allowlistings!]!

  """
  fetch data from the table: "contract_type_names"
  """
  contract_type_names(
    """distinct select on columns"""
    distinct_on: [contract_type_names_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contract_type_names_order_by!]

    """filter the rows returned"""
    where: contract_type_names_bool_exp
  ): [contract_type_names!]!

  """
  fetch data from the table: "contract_type_names" using primary key columns
  """
  contract_type_names_by_pk(name: String!): contract_type_names

  """
  fetch data from the table in a streaming manner: "contract_type_names"
  """
  contract_type_names_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [contract_type_names_stream_cursor_input]!

    """filter the rows returned"""
    where: contract_type_names_bool_exp
  ): [contract_type_names!]!

  """
  fetch data from the table: "contract_types"
  """
  contract_types(
    """distinct select on columns"""
    distinct_on: [contract_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contract_types_order_by!]

    """filter the rows returned"""
    where: contract_types_bool_exp
  ): [contract_types!]!

  """fetch data from the table: "contract_types" using primary key columns"""
  contract_types_by_pk(type: contract_type_names_enum!): contract_types

  """
  fetch data from the table in a streaming manner: "contract_types"
  """
  contract_types_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [contract_types_stream_cursor_input]!

    """filter the rows returned"""
    where: contract_types_bool_exp
  ): [contract_types!]!

  """
  fetch data from the table: "contracts_metadata"
  """
  contracts_metadata(
    """distinct select on columns"""
    distinct_on: [contracts_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contracts_metadata_order_by!]

    """filter the rows returned"""
    where: contracts_metadata_bool_exp
  ): [contracts_metadata!]!

  """
  fetch aggregated fields from the table: "contracts_metadata"
  """
  contracts_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [contracts_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contracts_metadata_order_by!]

    """filter the rows returned"""
    where: contracts_metadata_bool_exp
  ): contracts_metadata_aggregate!

  """
  fetch data from the table: "contracts_metadata" using primary key columns
  """
  contracts_metadata_by_pk(address: String!): contracts_metadata

  """
  fetch data from the table in a streaming manner: "contracts_metadata"
  """
  contracts_metadata_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [contracts_metadata_stream_cursor_input]!

    """filter the rows returned"""
    where: contracts_metadata_bool_exp
  ): [contracts_metadata!]!

  """
  fetch data from the table: "dependencies_metadata"
  """
  dependencies_metadata(
    """distinct select on columns"""
    distinct_on: [dependencies_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependencies_metadata_order_by!]

    """filter the rows returned"""
    where: dependencies_metadata_bool_exp
  ): [dependencies_metadata!]!

  """
  fetch aggregated fields from the table: "dependencies_metadata"
  """
  dependencies_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [dependencies_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependencies_metadata_order_by!]

    """filter the rows returned"""
    where: dependencies_metadata_bool_exp
  ): dependencies_metadata_aggregate!

  """
  fetch data from the table: "dependencies_metadata" using primary key columns
  """
  dependencies_metadata_by_pk(name_and_version: String!): dependencies_metadata

  """
  fetch data from the table in a streaming manner: "dependencies_metadata"
  """
  dependencies_metadata_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dependencies_metadata_stream_cursor_input]!

    """filter the rows returned"""
    where: dependencies_metadata_bool_exp
  ): [dependencies_metadata!]!

  """
  fetch data from the table: "dependency_additional_cdns"
  """
  dependency_additional_cdns(
    """distinct select on columns"""
    distinct_on: [dependency_additional_cdns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_cdns_order_by!]

    """filter the rows returned"""
    where: dependency_additional_cdns_bool_exp
  ): [dependency_additional_cdns!]!

  """
  fetch aggregated fields from the table: "dependency_additional_cdns"
  """
  dependency_additional_cdns_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_additional_cdns_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_cdns_order_by!]

    """filter the rows returned"""
    where: dependency_additional_cdns_bool_exp
  ): dependency_additional_cdns_aggregate!

  """
  fetch data from the table: "dependency_additional_cdns" using primary key columns
  """
  dependency_additional_cdns_by_pk(dependency_name_and_version: String!, index: Int!): dependency_additional_cdns

  """
  fetch data from the table in a streaming manner: "dependency_additional_cdns"
  """
  dependency_additional_cdns_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dependency_additional_cdns_stream_cursor_input]!

    """filter the rows returned"""
    where: dependency_additional_cdns_bool_exp
  ): [dependency_additional_cdns!]!

  """
  fetch data from the table: "dependency_additional_repositories"
  """
  dependency_additional_repositories(
    """distinct select on columns"""
    distinct_on: [dependency_additional_repositories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_repositories_order_by!]

    """filter the rows returned"""
    where: dependency_additional_repositories_bool_exp
  ): [dependency_additional_repositories!]!

  """
  fetch aggregated fields from the table: "dependency_additional_repositories"
  """
  dependency_additional_repositories_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_additional_repositories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_additional_repositories_order_by!]

    """filter the rows returned"""
    where: dependency_additional_repositories_bool_exp
  ): dependency_additional_repositories_aggregate!

  """
  fetch data from the table: "dependency_additional_repositories" using primary key columns
  """
  dependency_additional_repositories_by_pk(dependency_name_and_version: String!, index: Int!): dependency_additional_repositories

  """
  fetch data from the table in a streaming manner: "dependency_additional_repositories"
  """
  dependency_additional_repositories_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dependency_additional_repositories_stream_cursor_input]!

    """filter the rows returned"""
    where: dependency_additional_repositories_bool_exp
  ): [dependency_additional_repositories!]!

  """
  fetch data from the table: "dependency_registries"
  """
  dependency_registries(
    """distinct select on columns"""
    distinct_on: [dependency_registries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_registries_order_by!]

    """filter the rows returned"""
    where: dependency_registries_bool_exp
  ): [dependency_registries!]!

  """
  fetch aggregated fields from the table: "dependency_registries"
  """
  dependency_registries_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_registries_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_registries_order_by!]

    """filter the rows returned"""
    where: dependency_registries_bool_exp
  ): dependency_registries_aggregate!

  """
  fetch data from the table: "dependency_registries" using primary key columns
  """
  dependency_registries_by_pk(address: String!): dependency_registries

  """
  fetch data from the table in a streaming manner: "dependency_registries"
  """
  dependency_registries_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dependency_registries_stream_cursor_input]!

    """filter the rows returned"""
    where: dependency_registries_bool_exp
  ): [dependency_registries!]!

  """
  fetch data from the table: "dependency_scripts"
  """
  dependency_scripts(
    """distinct select on columns"""
    distinct_on: [dependency_scripts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_scripts_order_by!]

    """filter the rows returned"""
    where: dependency_scripts_bool_exp
  ): [dependency_scripts!]!

  """
  fetch aggregated fields from the table: "dependency_scripts"
  """
  dependency_scripts_aggregate(
    """distinct select on columns"""
    distinct_on: [dependency_scripts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [dependency_scripts_order_by!]

    """filter the rows returned"""
    where: dependency_scripts_bool_exp
  ): dependency_scripts_aggregate!

  """
  fetch data from the table: "dependency_scripts" using primary key columns
  """
  dependency_scripts_by_pk(dependency_name_and_version: String!, index: Int!): dependency_scripts

  """
  fetch data from the table in a streaming manner: "dependency_scripts"
  """
  dependency_scripts_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [dependency_scripts_stream_cursor_input]!

    """filter the rows returned"""
    where: dependency_scripts_bool_exp
  ): [dependency_scripts!]!

  """An array relationship"""
  entity_tags(
    """distinct select on columns"""
    distinct_on: [entity_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [entity_tags_order_by!]

    """filter the rows returned"""
    where: entity_tags_bool_exp
  ): [entity_tags!]!

  """fetch data from the table: "entity_tags" using primary key columns"""
  entity_tags_by_pk(id: Int!): entity_tags

  """
  fetch data from the table in a streaming manner: "entity_tags"
  """
  entity_tags_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [entity_tags_stream_cursor_input]!

    """filter the rows returned"""
    where: entity_tags_bool_exp
  ): [entity_tags!]!

  """An array relationship"""
  favorites(
    """distinct select on columns"""
    distinct_on: [favorites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [favorites_order_by!]

    """filter the rows returned"""
    where: favorites_bool_exp
  ): [favorites!]!

  """An aggregate relationship"""
  favorites_aggregate(
    """distinct select on columns"""
    distinct_on: [favorites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [favorites_order_by!]

    """filter the rows returned"""
    where: favorites_bool_exp
  ): favorites_aggregate!

  """fetch data from the table: "favorites" using primary key columns"""
  favorites_by_pk(id: Int!): favorites

  """
  fetch data from the table in a streaming manner: "favorites"
  """
  favorites_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [favorites_stream_cursor_input]!

    """filter the rows returned"""
    where: favorites_bool_exp
  ): [favorites!]!

  """
  fetch data from the table: "feature_flags"
  """
  feature_flags(
    """distinct select on columns"""
    distinct_on: [feature_flags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [feature_flags_order_by!]

    """filter the rows returned"""
    where: feature_flags_bool_exp
  ): [feature_flags!]!

  """fetch data from the table: "feature_flags" using primary key columns"""
  feature_flags_by_pk(flag_name: String!): feature_flags

  """
  fetch data from the table in a streaming manner: "feature_flags"
  """
  feature_flags_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [feature_flags_stream_cursor_input]!

    """filter the rows returned"""
    where: feature_flags_bool_exp
  ): [feature_flags!]!

  """
  execute function "filter_tokens_metadata_by_features" which returns "tokens_metadata"
  """
  filter_tokens_metadata_by_features(
    """
    input parameters for function "filter_tokens_metadata_by_features"
    """
    args: filter_tokens_metadata_by_features_args!

    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]!

  """
  execute function "filter_tokens_metadata_by_features" and query aggregates on result of table type "tokens_metadata"
  """
  filter_tokens_metadata_by_features_aggregate(
    """
    input parameters for function "filter_tokens_metadata_by_features_aggregate"
    """
    args: filter_tokens_metadata_by_features_args!

    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): tokens_metadata_aggregate!

  """
  execute function "list_projects_metadata_random" which returns "projects_metadata"
  """
  list_projects_metadata_random(
    """
    input parameters for function "list_projects_metadata_random"
    """
    args: list_projects_metadata_random_args

    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """
  execute function "list_projects_metadata_random" and query aggregates on result of table type "projects_metadata"
  """
  list_projects_metadata_random_aggregate(
    """
    input parameters for function "list_projects_metadata_random_aggregate"
    """
    args: list_projects_metadata_random_args

    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!

  """
  fetch data from the table: "media"
  """
  media(
    """distinct select on columns"""
    distinct_on: [media_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [media_order_by!]

    """filter the rows returned"""
    where: media_bool_exp
  ): [media!]!

  """fetch data from the table: "media" using primary key columns"""
  media_by_pk(id: Int!): media

  """
  fetch data from the table in a streaming manner: "media"
  """
  media_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [media_stream_cursor_input]!

    """filter the rows returned"""
    where: media_bool_exp
  ): [media!]!

  """
  fetch data from the table: "minter_filter_type_names"
  """
  minter_filter_type_names(
    """distinct select on columns"""
    distinct_on: [minter_filter_type_names_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [minter_filter_type_names_order_by!]

    """filter the rows returned"""
    where: minter_filter_type_names_bool_exp
  ): [minter_filter_type_names!]!

  """
  fetch data from the table: "minter_filter_type_names" using primary key columns
  """
  minter_filter_type_names_by_pk(name: String!): minter_filter_type_names

  """
  fetch data from the table in a streaming manner: "minter_filter_type_names"
  """
  minter_filter_type_names_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [minter_filter_type_names_stream_cursor_input]!

    """filter the rows returned"""
    where: minter_filter_type_names_bool_exp
  ): [minter_filter_type_names!]!

  """
  fetch data from the table: "minter_filters_metadata"
  """
  minter_filters_metadata(
    """distinct select on columns"""
    distinct_on: [minter_filters_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [minter_filters_metadata_order_by!]

    """filter the rows returned"""
    where: minter_filters_metadata_bool_exp
  ): [minter_filters_metadata!]!

  """
  fetch data from the table: "minter_filters_metadata" using primary key columns
  """
  minter_filters_metadata_by_pk(address: String!): minter_filters_metadata

  """
  fetch data from the table in a streaming manner: "minter_filters_metadata"
  """
  minter_filters_metadata_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [minter_filters_metadata_stream_cursor_input]!

    """filter the rows returned"""
    where: minter_filters_metadata_bool_exp
  ): [minter_filters_metadata!]!

  """
  fetch data from the table: "minter_types"
  """
  minter_types(
    """distinct select on columns"""
    distinct_on: [minter_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [minter_types_order_by!]

    """filter the rows returned"""
    where: minter_types_bool_exp
  ): [minter_types!]!

  """fetch data from the table: "minter_types" using primary key columns"""
  minter_types_by_pk(type: minter_type_names_enum!): minter_types

  """
  fetch data from the table in a streaming manner: "minter_types"
  """
  minter_types_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [minter_types_stream_cursor_input]!

    """filter the rows returned"""
    where: minter_types_bool_exp
  ): [minter_types!]!

  """
  fetch data from the table: "minters_metadata"
  """
  minters_metadata(
    """distinct select on columns"""
    distinct_on: [minters_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [minters_metadata_order_by!]

    """filter the rows returned"""
    where: minters_metadata_bool_exp
  ): [minters_metadata!]!

  """
  fetch data from the table: "minters_metadata" using primary key columns
  """
  minters_metadata_by_pk(address: String!): minters_metadata

  """
  fetch data from the table in a streaming manner: "minters_metadata"
  """
  minters_metadata_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [minters_metadata_stream_cursor_input]!

    """filter the rows returned"""
    where: minters_metadata_bool_exp
  ): [minters_metadata!]!

  """
  fetch data from the table: "oob_tokens_metadata"
  """
  oob_tokens_metadata(
    """distinct select on columns"""
    distinct_on: [oob_tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oob_tokens_metadata_order_by!]

    """filter the rows returned"""
    where: oob_tokens_metadata_bool_exp
  ): [oob_tokens_metadata!]!

  """
  fetch aggregated fields from the table: "oob_tokens_metadata"
  """
  oob_tokens_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [oob_tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oob_tokens_metadata_order_by!]

    """filter the rows returned"""
    where: oob_tokens_metadata_bool_exp
  ): oob_tokens_metadata_aggregate!

  """
  fetch data from the table: "oob_tokens_metadata" using primary key columns
  """
  oob_tokens_metadata_by_pk(id: String!): oob_tokens_metadata

  """
  fetch data from the table in a streaming manner: "oob_tokens_metadata"
  """
  oob_tokens_metadata_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [oob_tokens_metadata_stream_cursor_input]!

    """filter the rows returned"""
    where: oob_tokens_metadata_bool_exp
  ): [oob_tokens_metadata!]!

  """
  fetch data from the table: "primary_purchases"
  """
  primary_purchases(
    """distinct select on columns"""
    distinct_on: [primary_purchases_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [primary_purchases_order_by!]

    """filter the rows returned"""
    where: primary_purchases_bool_exp
  ): [primary_purchases!]!

  """
  fetch data from the table: "primary_purchases" using primary key columns
  """
  primary_purchases_by_pk(token_id: String!): primary_purchases

  """
  fetch data from the table in a streaming manner: "primary_purchases"
  """
  primary_purchases_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [primary_purchases_stream_cursor_input]!

    """filter the rows returned"""
    where: primary_purchases_bool_exp
  ): [primary_purchases!]!

  """An array relationship"""
  processing_jobs(
    """distinct select on columns"""
    distinct_on: [processing_jobs_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [processing_jobs_order_by!]

    """filter the rows returned"""
    where: processing_jobs_bool_exp
  ): [processing_jobs!]!

  """fetch data from the table: "processing_jobs" using primary key columns"""
  processing_jobs_by_pk(id: uuid!): processing_jobs

  """
  fetch data from the table in a streaming manner: "processing_jobs"
  """
  processing_jobs_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [processing_jobs_stream_cursor_input]!

    """filter the rows returned"""
    where: processing_jobs_bool_exp
  ): [processing_jobs!]!

  """
  fetch data from the table: "project_external_asset_dependencies"
  """
  project_external_asset_dependencies(
    """distinct select on columns"""
    distinct_on: [project_external_asset_dependencies_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_external_asset_dependencies_order_by!]

    """filter the rows returned"""
    where: project_external_asset_dependencies_bool_exp
  ): [project_external_asset_dependencies!]!

  """
  fetch data from the table: "project_external_asset_dependencies" using primary key columns
  """
  project_external_asset_dependencies_by_pk(index: Int!, project_id: String!): project_external_asset_dependencies

  """
  fetch data from the table in a streaming manner: "project_external_asset_dependencies"
  """
  project_external_asset_dependencies_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [project_external_asset_dependencies_stream_cursor_input]!

    """filter the rows returned"""
    where: project_external_asset_dependencies_bool_exp
  ): [project_external_asset_dependencies!]!

  """
  fetch data from the table: "project_minter_configurations"
  """
  project_minter_configurations(
    """distinct select on columns"""
    distinct_on: [project_minter_configurations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_minter_configurations_order_by!]

    """filter the rows returned"""
    where: project_minter_configurations_bool_exp
  ): [project_minter_configurations!]!

  """
  fetch data from the table: "project_minter_configurations" using primary key columns
  """
  project_minter_configurations_by_pk(id: String!): project_minter_configurations

  """
  fetch data from the table in a streaming manner: "project_minter_configurations"
  """
  project_minter_configurations_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [project_minter_configurations_stream_cursor_input]!

    """filter the rows returned"""
    where: project_minter_configurations_bool_exp
  ): [project_minter_configurations!]!

  """
  fetch data from the table: "project_scripts"
  """
  project_scripts(
    """distinct select on columns"""
    distinct_on: [project_scripts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_scripts_order_by!]

    """filter the rows returned"""
    where: project_scripts_bool_exp
  ): [project_scripts!]!

  """fetch data from the table: "project_scripts" using primary key columns"""
  project_scripts_by_pk(index: Int!, project_id: String!): project_scripts

  """
  fetch data from the table in a streaming manner: "project_scripts"
  """
  project_scripts_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [project_scripts_stream_cursor_input]!

    """filter the rows returned"""
    where: project_scripts_bool_exp
  ): [project_scripts!]!

  """
  fetch data from the table: "project_series"
  """
  project_series(
    """distinct select on columns"""
    distinct_on: [project_series_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_series_order_by!]

    """filter the rows returned"""
    where: project_series_bool_exp
  ): [project_series!]!

  """
  fetch aggregated fields from the table: "project_series"
  """
  project_series_aggregate(
    """distinct select on columns"""
    distinct_on: [project_series_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_series_order_by!]

    """filter the rows returned"""
    where: project_series_bool_exp
  ): project_series_aggregate!

  """fetch data from the table: "project_series" using primary key columns"""
  project_series_by_pk(id: Int!): project_series

  """
  fetch data from the table in a streaming manner: "project_series"
  """
  project_series_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [project_series_stream_cursor_input]!

    """filter the rows returned"""
    where: project_series_bool_exp
  ): [project_series!]!

  """
  fetch data from the table: "project_vertical_categories"
  """
  project_vertical_categories(
    """distinct select on columns"""
    distinct_on: [project_vertical_categories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_vertical_categories_order_by!]

    """filter the rows returned"""
    where: project_vertical_categories_bool_exp
  ): [project_vertical_categories!]!

  """
  fetch data from the table: "project_vertical_categories" using primary key columns
  """
  project_vertical_categories_by_pk(name: categories_enum!): project_vertical_categories

  """
  fetch data from the table in a streaming manner: "project_vertical_categories"
  """
  project_vertical_categories_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [project_vertical_categories_stream_cursor_input]!

    """filter the rows returned"""
    where: project_vertical_categories_bool_exp
  ): [project_vertical_categories!]!

  """
  fetch data from the table: "project_verticals"
  """
  project_verticals(
    """distinct select on columns"""
    distinct_on: [project_verticals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_verticals_order_by!]

    """filter the rows returned"""
    where: project_verticals_bool_exp
  ): [project_verticals!]!

  """
  fetch data from the table: "project_verticals" using primary key columns
  """
  project_verticals_by_pk(name: verticals_enum!): project_verticals

  """
  fetch data from the table in a streaming manner: "project_verticals"
  """
  project_verticals_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [project_verticals_stream_cursor_input]!

    """filter the rows returned"""
    where: project_verticals_bool_exp
  ): [project_verticals!]!

  """
  fetch data from the table: "projects_features"
  """
  projects_features(
    """distinct select on columns"""
    distinct_on: [projects_features_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_features_order_by!]

    """filter the rows returned"""
    where: projects_features_bool_exp
  ): [projects_features!]!

  """
  fetch data from the table: "projects_features" using primary key columns
  """
  projects_features_by_pk(id: Int!): projects_features

  """
  fetch data from the table in a streaming manner: "projects_features"
  """
  projects_features_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [projects_features_stream_cursor_input]!

    """filter the rows returned"""
    where: projects_features_bool_exp
  ): [projects_features!]!

  """
  fetch data from the table: "projects_metadata"
  """
  projects_metadata(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """
  fetch aggregated fields from the table: "projects_metadata"
  """
  projects_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!

  """
  fetch data from the table: "projects_metadata" using primary key columns
  """
  projects_metadata_by_pk(id: String!): projects_metadata

  """
  fetch data from the table in a streaming manner: "projects_metadata"
  """
  projects_metadata_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [projects_metadata_stream_cursor_input]!

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """
  fetch data from the table: "proposed_artist_addresses_and_splits"
  """
  proposed_artist_addresses_and_splits(
    """distinct select on columns"""
    distinct_on: [proposed_artist_addresses_and_splits_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [proposed_artist_addresses_and_splits_order_by!]

    """filter the rows returned"""
    where: proposed_artist_addresses_and_splits_bool_exp
  ): [proposed_artist_addresses_and_splits!]!

  """
  fetch data from the table: "proposed_artist_addresses_and_splits" using primary key columns
  """
  proposed_artist_addresses_and_splits_by_pk(project_id: String!): proposed_artist_addresses_and_splits

  """
  fetch data from the table in a streaming manner: "proposed_artist_addresses_and_splits"
  """
  proposed_artist_addresses_and_splits_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [proposed_artist_addresses_and_splits_stream_cursor_input]!

    """filter the rows returned"""
    where: proposed_artist_addresses_and_splits_bool_exp
  ): [proposed_artist_addresses_and_splits!]!

  """
  fetch data from the table: "receipt_metadata"
  """
  receipt_metadata(
    """distinct select on columns"""
    distinct_on: [receipt_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [receipt_metadata_order_by!]

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): [receipt_metadata!]!

  """
  fetch aggregated fields from the table: "receipt_metadata"
  """
  receipt_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [receipt_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [receipt_metadata_order_by!]

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): receipt_metadata_aggregate!

  """
  fetch data from the table: "receipt_metadata" using primary key columns
  """
  receipt_metadata_by_pk(id: String!): receipt_metadata

  """
  fetch data from the table in a streaming manner: "receipt_metadata"
  """
  receipt_metadata_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [receipt_metadata_stream_cursor_input]!

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): [receipt_metadata!]!

  """An array relationship"""
  refresh_requests(
    """distinct select on columns"""
    distinct_on: [refresh_requests_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [refresh_requests_order_by!]

    """filter the rows returned"""
    where: refresh_requests_bool_exp
  ): [refresh_requests!]!

  """
  fetch data from the table: "refresh_requests" using primary key columns
  """
  refresh_requests_by_pk(id: uuid!): refresh_requests

  """
  fetch data from the table in a streaming manner: "refresh_requests"
  """
  refresh_requests_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [refresh_requests_stream_cursor_input]!

    """filter the rows returned"""
    where: refresh_requests_bool_exp
  ): [refresh_requests!]!

  """
  fetch data from the table: "render_types"
  """
  render_types(
    """distinct select on columns"""
    distinct_on: [render_types_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [render_types_order_by!]

    """filter the rows returned"""
    where: render_types_bool_exp
  ): [render_types!]!

  """fetch data from the table: "render_types" using primary key columns"""
  render_types_by_pk(value: String!): render_types

  """
  fetch data from the table in a streaming manner: "render_types"
  """
  render_types_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [render_types_stream_cursor_input]!

    """filter the rows returned"""
    where: render_types_bool_exp
  ): [render_types!]!

  """
  execute function "search_projects" which returns "projects_metadata"
  """
  search_projects(
    """
    input parameters for function "search_projects"
    """
    args: search_projects_args!

    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """
  execute function "search_projects" and query aggregates on result of table type "projects_metadata"
  """
  search_projects_aggregate(
    """
    input parameters for function "search_projects_aggregate"
    """
    args: search_projects_args!

    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!

  """
  execute function "search_tags" which returns "tags"
  """
  search_tags(
    """
    input parameters for function "search_tags"
    """
    args: search_tags_args!

    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """
  execute function "search_tokens" which returns "tokens_metadata"
  """
  search_tokens(
    """
    input parameters for function "search_tokens"
    """
    args: search_tokens_args!

    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]!

  """
  execute function "search_tokens" and query aggregates on result of table type "tokens_metadata"
  """
  search_tokens_aggregate(
    """
    input parameters for function "search_tokens_aggregate"
    """
    args: search_tokens_args!

    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): tokens_metadata_aggregate!

  """
  execute function "search_users" which returns "user_profiles"
  """
  search_users(
    """
    input parameters for function "search_users"
    """
    args: search_users_args!

    """distinct select on columns"""
    distinct_on: [user_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_profiles_order_by!]

    """filter the rows returned"""
    where: user_profiles_bool_exp
  ): [user_profiles!]!

  """
  execute function "search_users" and query aggregates on result of table type "user_profiles"
  """
  search_users_aggregate(
    """
    input parameters for function "search_users_aggregate"
    """
    args: search_users_args!

    """distinct select on columns"""
    distinct_on: [user_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_profiles_order_by!]

    """filter the rows returned"""
    where: user_profiles_bool_exp
  ): user_profiles_aggregate!

  """
  fetch data from the table: "split_atomic_contracts"
  """
  split_atomic_contracts(
    """distinct select on columns"""
    distinct_on: [split_atomic_contracts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_atomic_contracts_order_by!]

    """filter the rows returned"""
    where: split_atomic_contracts_bool_exp
  ): [split_atomic_contracts!]!

  """
  fetch data from the table: "split_atomic_contracts" using primary key columns
  """
  split_atomic_contracts_by_pk(address: String!): split_atomic_contracts

  """
  fetch data from the table in a streaming manner: "split_atomic_contracts"
  """
  split_atomic_contracts_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [split_atomic_contracts_stream_cursor_input]!

    """filter the rows returned"""
    where: split_atomic_contracts_bool_exp
  ): [split_atomic_contracts!]!

  """
  fetch data from the table: "split_atomic_factories"
  """
  split_atomic_factories(
    """distinct select on columns"""
    distinct_on: [split_atomic_factories_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_atomic_factories_order_by!]

    """filter the rows returned"""
    where: split_atomic_factories_bool_exp
  ): [split_atomic_factories!]!

  """
  fetch data from the table: "split_atomic_factories" using primary key columns
  """
  split_atomic_factories_by_pk(address: String!): split_atomic_factories

  """
  fetch data from the table in a streaming manner: "split_atomic_factories"
  """
  split_atomic_factories_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [split_atomic_factories_stream_cursor_input]!

    """filter the rows returned"""
    where: split_atomic_factories_bool_exp
  ): [split_atomic_factories!]!

  """
  fetch data from the table: "split_payment_configurations"
  """
  split_payment_configurations(
    """distinct select on columns"""
    distinct_on: [split_payment_configurations_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [split_payment_configurations_order_by!]

    """filter the rows returned"""
    where: split_payment_configurations_bool_exp
  ): [split_payment_configurations!]!

  """
  fetch data from the table: "split_payment_configurations" using primary key columns
  """
  split_payment_configurations_by_pk(id: String!): split_payment_configurations

  """
  fetch data from the table in a streaming manner: "split_payment_configurations"
  """
  split_payment_configurations_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [split_payment_configurations_stream_cursor_input]!

    """filter the rows returned"""
    where: split_payment_configurations_bool_exp
  ): [split_payment_configurations!]!

  """
  fetch data from the table: "tags"
  """
  tags(
    """distinct select on columns"""
    distinct_on: [tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tags_order_by!]

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """fetch data from the table: "tags" using primary key columns"""
  tags_by_pk(name: String!): tags

  """
  fetch data from the table in a streaming manner: "tags"
  """
  tags_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [tags_stream_cursor_input]!

    """filter the rows returned"""
    where: tags_bool_exp
  ): [tags!]!

  """
  fetch data from the table: "tokens_metadata"
  """
  tokens_metadata(
    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]!

  """
  fetch aggregated fields from the table: "tokens_metadata"
  """
  tokens_metadata_aggregate(
    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): tokens_metadata_aggregate!

  """fetch data from the table: "tokens_metadata" using primary key columns"""
  tokens_metadata_by_pk(id: String!): tokens_metadata

  """
  fetch data from the table in a streaming manner: "tokens_metadata"
  """
  tokens_metadata_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [tokens_metadata_stream_cursor_input]!

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]!

  """
  fetch data from the table: "user_profiles"
  """
  user_profiles(
    """distinct select on columns"""
    distinct_on: [user_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_profiles_order_by!]

    """filter the rows returned"""
    where: user_profiles_bool_exp
  ): [user_profiles!]!

  """
  fetch aggregated fields from the table: "user_profiles"
  """
  user_profiles_aggregate(
    """distinct select on columns"""
    distinct_on: [user_profiles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_profiles_order_by!]

    """filter the rows returned"""
    where: user_profiles_bool_exp
  ): user_profiles_aggregate!

  """fetch data from the table: "user_profiles" using primary key columns"""
  user_profiles_by_pk(id: Int!): user_profiles

  """
  fetch data from the table in a streaming manner: "user_profiles"
  """
  user_profiles_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [user_profiles_stream_cursor_input]!

    """filter the rows returned"""
    where: user_profiles_bool_exp
  ): [user_profiles!]!

  """
  fetch data from the table: "users"
  """
  users(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch aggregated fields from the table: "users"
  """
  users_aggregate(
    """distinct select on columns"""
    distinct_on: [users_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [users_order_by!]

    """filter the rows returned"""
    where: users_bool_exp
  ): users_aggregate!

  """fetch data from the table: "users" using primary key columns"""
  users_by_pk(public_address: String!): users

  """
  fetch data from the table in a streaming manner: "users"
  """
  users_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [users_stream_cursor_input]!

    """filter the rows returned"""
    where: users_bool_exp
  ): [users!]!

  """
  fetch data from the table: "verticals"
  """
  verticals(
    """distinct select on columns"""
    distinct_on: [verticals_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [verticals_order_by!]

    """filter the rows returned"""
    where: verticals_bool_exp
  ): [verticals!]!

  """fetch data from the table: "verticals" using primary key columns"""
  verticals_by_pk(name: String!): verticals

  """
  fetch data from the table in a streaming manner: "verticals"
  """
  verticals_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [verticals_stream_cursor_input]!

    """filter the rows returned"""
    where: verticals_bool_exp
  ): [verticals!]!

  """
  fetch data from the table: "video_aspect_ratios"
  """
  video_aspect_ratios(
    """distinct select on columns"""
    distinct_on: [video_aspect_ratios_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [video_aspect_ratios_order_by!]

    """filter the rows returned"""
    where: video_aspect_ratios_bool_exp
  ): [video_aspect_ratios!]!

  """
  fetch data from the table: "video_aspect_ratios" using primary key columns
  """
  video_aspect_ratios_by_pk(value: numeric!): video_aspect_ratios

  """
  fetch data from the table in a streaming manner: "video_aspect_ratios"
  """
  video_aspect_ratios_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [video_aspect_ratios_stream_cursor_input]!

    """filter the rows returned"""
    where: video_aspect_ratios_bool_exp
  ): [video_aspect_ratios!]!

  """
  fetch data from the table: "video_frame_rates"
  """
  video_frame_rates(
    """distinct select on columns"""
    distinct_on: [video_frame_rates_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [video_frame_rates_order_by!]

    """filter the rows returned"""
    where: video_frame_rates_bool_exp
  ): [video_frame_rates!]!

  """
  fetch data from the table: "video_frame_rates" using primary key columns
  """
  video_frame_rates_by_pk(value: Int!): video_frame_rates

  """
  fetch data from the table in a streaming manner: "video_frame_rates"
  """
  video_frame_rates_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [video_frame_rates_stream_cursor_input]!

    """filter the rows returned"""
    where: video_frame_rates_bool_exp
  ): [video_frame_rates!]!

  """
  fetch data from the table: "webflow_artist_info"
  """
  webflow_artist_info(
    """distinct select on columns"""
    distinct_on: [webflow_artist_info_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webflow_artist_info_order_by!]

    """filter the rows returned"""
    where: webflow_artist_info_bool_exp
  ): [webflow_artist_info!]!

  """
  fetch data from the table: "webflow_artist_info" using primary key columns
  """
  webflow_artist_info_by_pk(webflow_item_id: String!): webflow_artist_info

  """
  fetch data from the table in a streaming manner: "webflow_artist_info"
  """
  webflow_artist_info_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [webflow_artist_info_stream_cursor_input]!

    """filter the rows returned"""
    where: webflow_artist_info_bool_exp
  ): [webflow_artist_info!]!

  """
  fetch data from the table: "webflow_spectrum_articles"
  """
  webflow_spectrum_articles(
    """distinct select on columns"""
    distinct_on: [webflow_spectrum_articles_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [webflow_spectrum_articles_order_by!]

    """filter the rows returned"""
    where: webflow_spectrum_articles_bool_exp
  ): [webflow_spectrum_articles!]!

  """
  fetch data from the table: "webflow_spectrum_articles" using primary key columns
  """
  webflow_spectrum_articles_by_pk(webflow_item_id: String!): webflow_spectrum_articles

  """
  fetch data from the table in a streaming manner: "webflow_spectrum_articles"
  """
  webflow_spectrum_articles_stream(
    """maximum number of rows returned in a single batch"""
    batch_size: Int!

    """cursor to stream the results returned by the query"""
    cursor: [webflow_spectrum_articles_stream_cursor_input]!

    """filter the rows returned"""
    where: webflow_spectrum_articles_bool_exp
  ): [webflow_spectrum_articles!]!
}

enum tag_groupings_enum {
  heritage
  presentation
  social
  unassigned
}

"""
Boolean expression to compare columns of type "tag_groupings_enum". All fields are combined with logical 'AND'.
"""
input tag_groupings_enum_comparison_exp {
  _eq: tag_groupings_enum
  _in: [tag_groupings_enum!]
  _is_null: Boolean
  _neq: tag_groupings_enum
  _nin: [tag_groupings_enum!]
}

enum tag_status_enum {
  """private status"""
  private

  """public status"""
  public
}

"""
Boolean expression to compare columns of type "tag_status_enum". All fields are combined with logical 'AND'.
"""
input tag_status_enum_comparison_exp {
  _eq: tag_status_enum
  _in: [tag_status_enum!]
  _is_null: Boolean
  _neq: tag_status_enum
  _nin: [tag_status_enum!]
}

enum tag_types_enum {
  """tag type of project"""
  project

  """tag type of user"""
  user
}

"""
Boolean expression to compare columns of type "tag_types_enum". All fields are combined with logical 'AND'.
"""
input tag_types_enum_comparison_exp {
  _eq: tag_types_enum
  _in: [tag_types_enum!]
  _is_null: Boolean
  _neq: tag_types_enum
  _nin: [tag_types_enum!]
}

"""Each variety of metadata tag used for projects."""
type tags {
  description: String
  display_name: String!

  """An array relationship"""
  entity_tags(
    """distinct select on columns"""
    distinct_on: [entity_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [entity_tags_order_by!]

    """filter the rows returned"""
    where: entity_tags_bool_exp
  ): [entity_tags!]!
  grouping_name: tag_groupings_enum!
  name: String!
  status: tag_status_enum!
  tagline: String
  type: tag_types_enum!
}

"""
Boolean expression to filter rows from the table "tags". All fields are combined with a logical 'AND'.
"""
input tags_bool_exp {
  _and: [tags_bool_exp!]
  _not: tags_bool_exp
  _or: [tags_bool_exp!]
  description: String_comparison_exp
  display_name: String_comparison_exp
  entity_tags: entity_tags_bool_exp
  grouping_name: tag_groupings_enum_comparison_exp
  name: String_comparison_exp
  status: tag_status_enum_comparison_exp
  tagline: String_comparison_exp
  type: tag_types_enum_comparison_exp
}

"""Ordering options when selecting data from "tags"."""
input tags_order_by {
  description: order_by
  display_name: order_by
  entity_tags_aggregate: entity_tags_aggregate_order_by
  grouping_name: order_by
  name: order_by
  status: order_by
  tagline: order_by
  type: order_by
}

"""
select columns of table "tags"
"""
enum tags_select_column {
  """column name"""
  description

  """column name"""
  display_name

  """column name"""
  grouping_name

  """column name"""
  name

  """column name"""
  status

  """column name"""
  tagline

  """column name"""
  type
}

"""
Streaming cursor of the table "tags"
"""
input tags_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: tags_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input tags_stream_cursor_value_input {
  description: String
  display_name: String
  grouping_name: tag_groupings_enum
  name: String
  status: tag_status_enum
  tagline: String
  type: tag_types_enum
}

scalar timestamp

"""
Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'.
"""
input timestamp_comparison_exp {
  _eq: timestamp
  _gt: timestamp
  _gte: timestamp
  _in: [timestamp!]
  _is_null: Boolean
  _lt: timestamp
  _lte: timestamp
  _neq: timestamp
  _nin: [timestamp!]
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
All token details are added here after a new DiGi Arttoken is minted. Data will be updated upon a listing, sale, or transfer of the token.
"""
type tokens_metadata {
  """An array relationship"""
  bids(
    """distinct select on columns"""
    distinct_on: [bids_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bids_metadata_order_by!]

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): [bids_metadata!]!

  """An aggregate relationship"""
  bids_aggregate(
    """distinct select on columns"""
    distinct_on: [bids_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bids_metadata_order_by!]

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): bids_metadata_aggregate!

  """An object relationship"""
  contract: contracts_metadata
  contract_address: String!

  """
  A computed field, executes function "token_favorited_by_user"
  """
  favorited_by_user: Boolean

  """An array relationship"""
  favorites(
    """distinct select on columns"""
    distinct_on: [favorites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [favorites_order_by!]

    """filter the rows returned"""
    where: favorites_bool_exp
  ): [favorites!]!

  """An aggregate relationship"""
  favorites_aggregate(
    """distinct select on columns"""
    distinct_on: [favorites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [favorites_order_by!]

    """filter the rows returned"""
    where: favorites_bool_exp
  ): favorites_aggregate!
  features(
    """JSON select path"""
    path: String
  ): jsonb!

  """An object relationship"""
  gif: media
  gif_id: Int
  hash: String!

  """An object relationship"""
  high_res_image: media
  high_res_image_id: Int
  id: String!

  """An object relationship"""
  image: media
  image_id: Int
  invocation: Int!
  is_flagged: Boolean!
  last_refreshed: timestamptz
  list_creation_date: timestamptz
  list_currency_address: String
  list_currency_symbol: String
  list_eth_price: float8
  list_expiration_date: timestamptz
  list_platform: String
  list_price: float8
  list_url: String

  """
  A computed field, executes function "live_view_path"
  """
  live_view_path: String

  """
  A computed field, executes function "live_view_url"
  """
  live_view_url: String

  """An object relationship"""
  low_res_image: media
  low_res_image_id: Int

  """
  a computed field that returns the media proxy url for this token's statically rendered image
  """
  media_url: String
  mint_transaction_hash: String
  minted_at: timestamptz!

  """An object relationship"""
  owner: users
  owner_address: String!

  """
  returns the preview asset url based on preview_render_type and availability
  """
  preview_asset_url: String

  """
  A computed field, executes function "primary_asset_url"
  """
  primary_asset_url: String

  """An object relationship"""
  primary_purchase_details: primary_purchases
  primary_purchase_id: String

  """An object relationship"""
  project: projects_metadata!
  project_id: String!
  project_name: String
  token_id: String!
  updated_at: timestamp

  """An object relationship"""
  video: media
  video_id: Int
}

"""
aggregated selection of "tokens_metadata"
"""
type tokens_metadata_aggregate {
  aggregate: tokens_metadata_aggregate_fields
  nodes: [tokens_metadata!]!
}

input tokens_metadata_aggregate_bool_exp {
  avg: tokens_metadata_aggregate_bool_exp_avg
  bool_and: tokens_metadata_aggregate_bool_exp_bool_and
  bool_or: tokens_metadata_aggregate_bool_exp_bool_or
  corr: tokens_metadata_aggregate_bool_exp_corr
  count: tokens_metadata_aggregate_bool_exp_count
  covar_samp: tokens_metadata_aggregate_bool_exp_covar_samp
  max: tokens_metadata_aggregate_bool_exp_max
  min: tokens_metadata_aggregate_bool_exp_min
  stddev_samp: tokens_metadata_aggregate_bool_exp_stddev_samp
  sum: tokens_metadata_aggregate_bool_exp_sum
  var_samp: tokens_metadata_aggregate_bool_exp_var_samp
}

input tokens_metadata_aggregate_bool_exp_avg {
  arguments: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_avg_arguments_columns!
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: float8_comparison_exp!
}

input tokens_metadata_aggregate_bool_exp_bool_and {
  arguments: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_bool_and_arguments_columns!
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: Boolean_comparison_exp!
}

input tokens_metadata_aggregate_bool_exp_bool_or {
  arguments: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_bool_or_arguments_columns!
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: Boolean_comparison_exp!
}

input tokens_metadata_aggregate_bool_exp_corr {
  arguments: tokens_metadata_aggregate_bool_exp_corr_arguments!
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: float8_comparison_exp!
}

input tokens_metadata_aggregate_bool_exp_corr_arguments {
  X: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_corr_arguments_columns!
  Y: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_corr_arguments_columns!
}

input tokens_metadata_aggregate_bool_exp_count {
  arguments: [tokens_metadata_select_column!]
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: Int_comparison_exp!
}

input tokens_metadata_aggregate_bool_exp_covar_samp {
  arguments: tokens_metadata_aggregate_bool_exp_covar_samp_arguments!
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: float8_comparison_exp!
}

input tokens_metadata_aggregate_bool_exp_covar_samp_arguments {
  X: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_covar_samp_arguments_columns!
  Y: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_covar_samp_arguments_columns!
}

input tokens_metadata_aggregate_bool_exp_max {
  arguments: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_max_arguments_columns!
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: float8_comparison_exp!
}

input tokens_metadata_aggregate_bool_exp_min {
  arguments: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_min_arguments_columns!
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: float8_comparison_exp!
}

input tokens_metadata_aggregate_bool_exp_stddev_samp {
  arguments: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_stddev_samp_arguments_columns!
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: float8_comparison_exp!
}

input tokens_metadata_aggregate_bool_exp_sum {
  arguments: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_sum_arguments_columns!
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: float8_comparison_exp!
}

input tokens_metadata_aggregate_bool_exp_var_samp {
  arguments: tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_var_samp_arguments_columns!
  distinct: Boolean
  filter: tokens_metadata_bool_exp
  predicate: float8_comparison_exp!
}

"""
aggregate fields of "tokens_metadata"
"""
type tokens_metadata_aggregate_fields {
  avg: tokens_metadata_avg_fields
  count(columns: [tokens_metadata_select_column!], distinct: Boolean): Int!
  max: tokens_metadata_max_fields
  min: tokens_metadata_min_fields
  stddev: tokens_metadata_stddev_fields
  stddev_pop: tokens_metadata_stddev_pop_fields
  stddev_samp: tokens_metadata_stddev_samp_fields
  sum: tokens_metadata_sum_fields
  var_pop: tokens_metadata_var_pop_fields
  var_samp: tokens_metadata_var_samp_fields
  variance: tokens_metadata_variance_fields
}

"""
order by aggregate values of table "tokens_metadata"
"""
input tokens_metadata_aggregate_order_by {
  avg: tokens_metadata_avg_order_by
  count: order_by
  max: tokens_metadata_max_order_by
  min: tokens_metadata_min_order_by
  stddev: tokens_metadata_stddev_order_by
  stddev_pop: tokens_metadata_stddev_pop_order_by
  stddev_samp: tokens_metadata_stddev_samp_order_by
  sum: tokens_metadata_sum_order_by
  var_pop: tokens_metadata_var_pop_order_by
  var_samp: tokens_metadata_var_samp_order_by
  variance: tokens_metadata_variance_order_by
}

"""aggregate avg on columns"""
type tokens_metadata_avg_fields {
  gif_id: Float
  high_res_image_id: Float
  image_id: Float
  invocation: Float
  list_eth_price: Float
  list_price: Float
  low_res_image_id: Float
  video_id: Float
}

"""
order by avg() on columns of table "tokens_metadata"
"""
input tokens_metadata_avg_order_by {
  gif_id: order_by
  high_res_image_id: order_by
  image_id: order_by
  invocation: order_by
  list_eth_price: order_by
  list_price: order_by
  low_res_image_id: order_by
  video_id: order_by
}

"""
Boolean expression to filter rows from the table "tokens_metadata". All fields are combined with a logical 'AND'.
"""
input tokens_metadata_bool_exp {
  _and: [tokens_metadata_bool_exp!]
  _not: tokens_metadata_bool_exp
  _or: [tokens_metadata_bool_exp!]
  bids: bids_metadata_bool_exp
  bids_aggregate: bids_metadata_aggregate_bool_exp
  contract: contracts_metadata_bool_exp
  contract_address: String_comparison_exp
  favorited_by_user: Boolean_comparison_exp
  favorites: favorites_bool_exp
  favorites_aggregate: favorites_aggregate_bool_exp
  features: jsonb_comparison_exp
  gif: media_bool_exp
  gif_id: Int_comparison_exp
  hash: String_comparison_exp
  high_res_image: media_bool_exp
  high_res_image_id: Int_comparison_exp
  id: String_comparison_exp
  image: media_bool_exp
  image_id: Int_comparison_exp
  invocation: Int_comparison_exp
  is_flagged: Boolean_comparison_exp
  last_refreshed: timestamptz_comparison_exp
  list_creation_date: timestamptz_comparison_exp
  list_currency_address: String_comparison_exp
  list_currency_symbol: String_comparison_exp
  list_eth_price: float8_comparison_exp
  list_expiration_date: timestamptz_comparison_exp
  list_platform: String_comparison_exp
  list_price: float8_comparison_exp
  list_url: String_comparison_exp
  live_view_path: String_comparison_exp
  live_view_url: String_comparison_exp
  low_res_image: media_bool_exp
  low_res_image_id: Int_comparison_exp
  media_url: String_comparison_exp
  mint_transaction_hash: String_comparison_exp
  minted_at: timestamptz_comparison_exp
  owner: users_bool_exp
  owner_address: String_comparison_exp
  preview_asset_url: String_comparison_exp
  primary_asset_url: String_comparison_exp
  primary_purchase_details: primary_purchases_bool_exp
  primary_purchase_id: String_comparison_exp
  project: projects_metadata_bool_exp
  project_id: String_comparison_exp
  project_name: String_comparison_exp
  token_id: String_comparison_exp
  updated_at: timestamp_comparison_exp
  video: media_bool_exp
  video_id: Int_comparison_exp
}

"""aggregate max on columns"""
type tokens_metadata_max_fields {
  contract_address: String
  gif_id: Int
  hash: String
  high_res_image_id: Int
  id: String
  image_id: Int
  invocation: Int
  last_refreshed: timestamptz
  list_creation_date: timestamptz
  list_currency_address: String
  list_currency_symbol: String
  list_eth_price: float8
  list_expiration_date: timestamptz
  list_platform: String
  list_price: float8
  list_url: String

  """
  A computed field, executes function "live_view_path"
  """
  live_view_path: String

  """
  A computed field, executes function "live_view_url"
  """
  live_view_url: String
  low_res_image_id: Int

  """
  a computed field that returns the media proxy url for this token's statically rendered image
  """
  media_url: String
  mint_transaction_hash: String
  minted_at: timestamptz
  owner_address: String

  """
  returns the preview asset url based on preview_render_type and availability
  """
  preview_asset_url: String

  """
  A computed field, executes function "primary_asset_url"
  """
  primary_asset_url: String
  primary_purchase_id: String
  project_id: String
  project_name: String
  token_id: String
  updated_at: timestamp
  video_id: Int
}

"""
order by max() on columns of table "tokens_metadata"
"""
input tokens_metadata_max_order_by {
  contract_address: order_by
  gif_id: order_by
  hash: order_by
  high_res_image_id: order_by
  id: order_by
  image_id: order_by
  invocation: order_by
  last_refreshed: order_by
  list_creation_date: order_by
  list_currency_address: order_by
  list_currency_symbol: order_by
  list_eth_price: order_by
  list_expiration_date: order_by
  list_platform: order_by
  list_price: order_by
  list_url: order_by
  low_res_image_id: order_by
  mint_transaction_hash: order_by
  minted_at: order_by
  owner_address: order_by
  primary_purchase_id: order_by
  project_id: order_by
  project_name: order_by
  token_id: order_by
  updated_at: order_by
  video_id: order_by
}

"""aggregate min on columns"""
type tokens_metadata_min_fields {
  contract_address: String
  gif_id: Int
  hash: String
  high_res_image_id: Int
  id: String
  image_id: Int
  invocation: Int
  last_refreshed: timestamptz
  list_creation_date: timestamptz
  list_currency_address: String
  list_currency_symbol: String
  list_eth_price: float8
  list_expiration_date: timestamptz
  list_platform: String
  list_price: float8
  list_url: String

  """
  A computed field, executes function "live_view_path"
  """
  live_view_path: String

  """
  A computed field, executes function "live_view_url"
  """
  live_view_url: String
  low_res_image_id: Int

  """
  a computed field that returns the media proxy url for this token's statically rendered image
  """
  media_url: String
  mint_transaction_hash: String
  minted_at: timestamptz
  owner_address: String

  """
  returns the preview asset url based on preview_render_type and availability
  """
  preview_asset_url: String

  """
  A computed field, executes function "primary_asset_url"
  """
  primary_asset_url: String
  primary_purchase_id: String
  project_id: String
  project_name: String
  token_id: String
  updated_at: timestamp
  video_id: Int
}

"""
order by min() on columns of table "tokens_metadata"
"""
input tokens_metadata_min_order_by {
  contract_address: order_by
  gif_id: order_by
  hash: order_by
  high_res_image_id: order_by
  id: order_by
  image_id: order_by
  invocation: order_by
  last_refreshed: order_by
  list_creation_date: order_by
  list_currency_address: order_by
  list_currency_symbol: order_by
  list_eth_price: order_by
  list_expiration_date: order_by
  list_platform: order_by
  list_price: order_by
  list_url: order_by
  low_res_image_id: order_by
  mint_transaction_hash: order_by
  minted_at: order_by
  owner_address: order_by
  primary_purchase_id: order_by
  project_id: order_by
  project_name: order_by
  token_id: order_by
  updated_at: order_by
  video_id: order_by
}

"""Ordering options when selecting data from "tokens_metadata"."""
input tokens_metadata_order_by {
  bids_aggregate: bids_metadata_aggregate_order_by
  contract: contracts_metadata_order_by
  contract_address: order_by
  favorited_by_user: order_by
  favorites_aggregate: favorites_aggregate_order_by
  features: order_by
  gif: media_order_by
  gif_id: order_by
  hash: order_by
  high_res_image: media_order_by
  high_res_image_id: order_by
  id: order_by
  image: media_order_by
  image_id: order_by
  invocation: order_by
  is_flagged: order_by
  last_refreshed: order_by
  list_creation_date: order_by
  list_currency_address: order_by
  list_currency_symbol: order_by
  list_eth_price: order_by
  list_expiration_date: order_by
  list_platform: order_by
  list_price: order_by
  list_url: order_by
  live_view_path: order_by
  live_view_url: order_by
  low_res_image: media_order_by
  low_res_image_id: order_by
  media_url: order_by
  mint_transaction_hash: order_by
  minted_at: order_by
  owner: users_order_by
  owner_address: order_by
  preview_asset_url: order_by
  primary_asset_url: order_by
  primary_purchase_details: primary_purchases_order_by
  primary_purchase_id: order_by
  project: projects_metadata_order_by
  project_id: order_by
  project_name: order_by
  token_id: order_by
  updated_at: order_by
  video: media_order_by
  video_id: order_by
}

"""
select columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column {
  """column name"""
  contract_address

  """column name"""
  features

  """column name"""
  gif_id

  """column name"""
  hash

  """column name"""
  high_res_image_id

  """column name"""
  id

  """column name"""
  image_id

  """column name"""
  invocation

  """column name"""
  is_flagged

  """column name"""
  last_refreshed

  """column name"""
  list_creation_date

  """column name"""
  list_currency_address

  """column name"""
  list_currency_symbol

  """column name"""
  list_eth_price

  """column name"""
  list_expiration_date

  """column name"""
  list_platform

  """column name"""
  list_price

  """column name"""
  list_url

  """column name"""
  low_res_image_id

  """column name"""
  mint_transaction_hash

  """column name"""
  minted_at

  """column name"""
  owner_address

  """column name"""
  primary_purchase_id

  """column name"""
  project_id

  """column name"""
  project_name

  """column name"""
  token_id

  """column name"""
  updated_at

  """column name"""
  video_id
}

"""
select "tokens_metadata_aggregate_bool_exp_avg_arguments_columns" columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_avg_arguments_columns {
  """column name"""
  list_eth_price

  """column name"""
  list_price
}

"""
select "tokens_metadata_aggregate_bool_exp_bool_and_arguments_columns" columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_bool_and_arguments_columns {
  """column name"""
  is_flagged
}

"""
select "tokens_metadata_aggregate_bool_exp_bool_or_arguments_columns" columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_bool_or_arguments_columns {
  """column name"""
  is_flagged
}

"""
select "tokens_metadata_aggregate_bool_exp_corr_arguments_columns" columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_corr_arguments_columns {
  """column name"""
  list_eth_price

  """column name"""
  list_price
}

"""
select "tokens_metadata_aggregate_bool_exp_covar_samp_arguments_columns" columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_covar_samp_arguments_columns {
  """column name"""
  list_eth_price

  """column name"""
  list_price
}

"""
select "tokens_metadata_aggregate_bool_exp_max_arguments_columns" columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_max_arguments_columns {
  """column name"""
  list_eth_price

  """column name"""
  list_price
}

"""
select "tokens_metadata_aggregate_bool_exp_min_arguments_columns" columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_min_arguments_columns {
  """column name"""
  list_eth_price

  """column name"""
  list_price
}

"""
select "tokens_metadata_aggregate_bool_exp_stddev_samp_arguments_columns" columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_stddev_samp_arguments_columns {
  """column name"""
  list_eth_price

  """column name"""
  list_price
}

"""
select "tokens_metadata_aggregate_bool_exp_sum_arguments_columns" columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_sum_arguments_columns {
  """column name"""
  list_eth_price

  """column name"""
  list_price
}

"""
select "tokens_metadata_aggregate_bool_exp_var_samp_arguments_columns" columns of table "tokens_metadata"
"""
enum tokens_metadata_select_column_tokens_metadata_aggregate_bool_exp_var_samp_arguments_columns {
  """column name"""
  list_eth_price

  """column name"""
  list_price
}

"""aggregate stddev on columns"""
type tokens_metadata_stddev_fields {
  gif_id: Float
  high_res_image_id: Float
  image_id: Float
  invocation: Float
  list_eth_price: Float
  list_price: Float
  low_res_image_id: Float
  video_id: Float
}

"""
order by stddev() on columns of table "tokens_metadata"
"""
input tokens_metadata_stddev_order_by {
  gif_id: order_by
  high_res_image_id: order_by
  image_id: order_by
  invocation: order_by
  list_eth_price: order_by
  list_price: order_by
  low_res_image_id: order_by
  video_id: order_by
}

"""aggregate stddev_pop on columns"""
type tokens_metadata_stddev_pop_fields {
  gif_id: Float
  high_res_image_id: Float
  image_id: Float
  invocation: Float
  list_eth_price: Float
  list_price: Float
  low_res_image_id: Float
  video_id: Float
}

"""
order by stddev_pop() on columns of table "tokens_metadata"
"""
input tokens_metadata_stddev_pop_order_by {
  gif_id: order_by
  high_res_image_id: order_by
  image_id: order_by
  invocation: order_by
  list_eth_price: order_by
  list_price: order_by
  low_res_image_id: order_by
  video_id: order_by
}

"""aggregate stddev_samp on columns"""
type tokens_metadata_stddev_samp_fields {
  gif_id: Float
  high_res_image_id: Float
  image_id: Float
  invocation: Float
  list_eth_price: Float
  list_price: Float
  low_res_image_id: Float
  video_id: Float
}

"""
order by stddev_samp() on columns of table "tokens_metadata"
"""
input tokens_metadata_stddev_samp_order_by {
  gif_id: order_by
  high_res_image_id: order_by
  image_id: order_by
  invocation: order_by
  list_eth_price: order_by
  list_price: order_by
  low_res_image_id: order_by
  video_id: order_by
}

"""
Streaming cursor of the table "tokens_metadata"
"""
input tokens_metadata_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: tokens_metadata_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input tokens_metadata_stream_cursor_value_input {
  contract_address: String
  features: jsonb
  gif_id: Int
  hash: String
  high_res_image_id: Int
  id: String
  image_id: Int
  invocation: Int
  is_flagged: Boolean
  last_refreshed: timestamptz
  list_creation_date: timestamptz
  list_currency_address: String
  list_currency_symbol: String
  list_eth_price: float8
  list_expiration_date: timestamptz
  list_platform: String
  list_price: float8
  list_url: String
  low_res_image_id: Int
  mint_transaction_hash: String
  minted_at: timestamptz
  owner_address: String
  primary_purchase_id: String
  project_id: String
  project_name: String
  token_id: String
  updated_at: timestamp
  video_id: Int
}

"""aggregate sum on columns"""
type tokens_metadata_sum_fields {
  gif_id: Int
  high_res_image_id: Int
  image_id: Int
  invocation: Int
  list_eth_price: float8
  list_price: float8
  low_res_image_id: Int
  video_id: Int
}

"""
order by sum() on columns of table "tokens_metadata"
"""
input tokens_metadata_sum_order_by {
  gif_id: order_by
  high_res_image_id: order_by
  image_id: order_by
  invocation: order_by
  list_eth_price: order_by
  list_price: order_by
  low_res_image_id: order_by
  video_id: order_by
}

"""aggregate var_pop on columns"""
type tokens_metadata_var_pop_fields {
  gif_id: Float
  high_res_image_id: Float
  image_id: Float
  invocation: Float
  list_eth_price: Float
  list_price: Float
  low_res_image_id: Float
  video_id: Float
}

"""
order by var_pop() on columns of table "tokens_metadata"
"""
input tokens_metadata_var_pop_order_by {
  gif_id: order_by
  high_res_image_id: order_by
  image_id: order_by
  invocation: order_by
  list_eth_price: order_by
  list_price: order_by
  low_res_image_id: order_by
  video_id: order_by
}

"""aggregate var_samp on columns"""
type tokens_metadata_var_samp_fields {
  gif_id: Float
  high_res_image_id: Float
  image_id: Float
  invocation: Float
  list_eth_price: Float
  list_price: Float
  low_res_image_id: Float
  video_id: Float
}

"""
order by var_samp() on columns of table "tokens_metadata"
"""
input tokens_metadata_var_samp_order_by {
  gif_id: order_by
  high_res_image_id: order_by
  image_id: order_by
  invocation: order_by
  list_eth_price: order_by
  list_price: order_by
  low_res_image_id: order_by
  video_id: order_by
}

"""aggregate variance on columns"""
type tokens_metadata_variance_fields {
  gif_id: Float
  high_res_image_id: Float
  image_id: Float
  invocation: Float
  list_eth_price: Float
  list_price: Float
  low_res_image_id: Float
  video_id: Float
}

"""
order by variance() on columns of table "tokens_metadata"
"""
input tokens_metadata_variance_order_by {
  gif_id: order_by
  high_res_image_id: order_by
  image_id: order_by
  invocation: order_by
  list_eth_price: order_by
  list_price: order_by
  low_res_image_id: order_by
  video_id: order_by
}

type UploadFile {
  alternativeText: String
  caption: String
  createdAt: DateTime
  ext: String
  formats: JSON
  hash: String!
  height: Int
  mime: String!
  name: String!
  previewUrl: String
  provider: String!
  provider_metadata: JSON
  related: [GenericMorph]
  size: Float!
  updatedAt: DateTime
  url: String!
  width: Int
}

type UploadFileEntity {
  attributes: UploadFile
  id: ID
}

type UploadFileEntityResponse {
  data: UploadFileEntity
}

"""DiGi Artpublic profiles"""
type user_profiles {
  bio: String
  id: Int!
  name: String

  """An object relationship"""
  profile_picture: media
  profile_picture_id: Int
  twitter_username: String
  user_address: String!
  username: String
}

type user_profiles_aggregate {
  aggregate: user_profiles_aggregate_fields
  nodes: [user_profiles!]!
}

"""
aggregate fields of "user_profiles"
"""
type user_profiles_aggregate_fields {
  avg: user_profiles_avg_fields
  count(columns: [user_profiles_select_column!], distinct: Boolean): Int!
  max: user_profiles_max_fields
  min: user_profiles_min_fields
  stddev: user_profiles_stddev_fields
  stddev_pop: user_profiles_stddev_pop_fields
  stddev_samp: user_profiles_stddev_samp_fields
  sum: user_profiles_sum_fields
  var_pop: user_profiles_var_pop_fields
  var_samp: user_profiles_var_samp_fields
  variance: user_profiles_variance_fields
}

"""aggregate avg on columns"""
type user_profiles_avg_fields {
  id: Float
  profile_picture_id: Float
}

"""
Boolean expression to filter rows from the table "user_profiles". All fields are combined with a logical 'AND'.
"""
input user_profiles_bool_exp {
  _and: [user_profiles_bool_exp!]
  _not: user_profiles_bool_exp
  _or: [user_profiles_bool_exp!]
  bio: String_comparison_exp
  id: Int_comparison_exp
  name: String_comparison_exp
  profile_picture: media_bool_exp
  profile_picture_id: Int_comparison_exp
  twitter_username: String_comparison_exp
  user_address: String_comparison_exp
  username: String_comparison_exp
}

"""aggregate max on columns"""
type user_profiles_max_fields {
  bio: String
  id: Int
  name: String
  profile_picture_id: Int
  twitter_username: String
  user_address: String
  username: String
}

"""aggregate min on columns"""
type user_profiles_min_fields {
  bio: String
  id: Int
  name: String
  profile_picture_id: Int
  twitter_username: String
  user_address: String
  username: String
}

"""Ordering options when selecting data from "user_profiles"."""
input user_profiles_order_by {
  bio: order_by
  id: order_by
  name: order_by
  profile_picture: media_order_by
  profile_picture_id: order_by
  twitter_username: order_by
  user_address: order_by
  username: order_by
}

"""
select columns of table "user_profiles"
"""
enum user_profiles_select_column {
  """column name"""
  bio

  """column name"""
  id

  """column name"""
  name

  """column name"""
  profile_picture_id

  """column name"""
  twitter_username

  """column name"""
  user_address

  """column name"""
  username
}

"""aggregate stddev on columns"""
type user_profiles_stddev_fields {
  id: Float
  profile_picture_id: Float
}

"""aggregate stddev_pop on columns"""
type user_profiles_stddev_pop_fields {
  id: Float
  profile_picture_id: Float
}

"""aggregate stddev_samp on columns"""
type user_profiles_stddev_samp_fields {
  id: Float
  profile_picture_id: Float
}

"""
Streaming cursor of the table "user_profiles"
"""
input user_profiles_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: user_profiles_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input user_profiles_stream_cursor_value_input {
  bio: String
  id: Int
  name: String
  profile_picture_id: Int
  twitter_username: String
  user_address: String
  username: String
}

"""aggregate sum on columns"""
type user_profiles_sum_fields {
  id: Int
  profile_picture_id: Int
}

"""aggregate var_pop on columns"""
type user_profiles_var_pop_fields {
  id: Float
  profile_picture_id: Float
}

"""aggregate var_samp on columns"""
type user_profiles_var_samp_fields {
  id: Float
  profile_picture_id: Float
}

"""aggregate variance on columns"""
type user_profiles_variance_fields {
  id: Float
  profile_picture_id: Float
}

"""DiGi Artusers"""
type users {
  """An array relationship"""
  allowlisted_on(
    """distinct select on columns"""
    distinct_on: [contract_allowlistings_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contract_allowlistings_order_by!]

    """filter the rows returned"""
    where: contract_allowlistings_bool_exp
  ): [contract_allowlistings!]!

  """An array relationship"""
  bids(
    """distinct select on columns"""
    distinct_on: [bids_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bids_metadata_order_by!]

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): [bids_metadata!]!

  """An aggregate relationship"""
  bids_aggregate(
    """distinct select on columns"""
    distinct_on: [bids_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [bids_metadata_order_by!]

    """filter the rows returned"""
    where: bids_metadata_bool_exp
  ): bids_metadata_aggregate!
  created_at: timestamptz!

  """
  A computed field, executes function "user_display_name"
  """
  display_name: String
  favorited_by_user: Boolean

  """An array relationship"""
  favorites(
    """distinct select on columns"""
    distinct_on: [favorites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [favorites_order_by!]

    """filter the rows returned"""
    where: favorites_bool_exp
  ): [favorites!]!

  """An aggregate relationship"""
  favorites_aggregate(
    """distinct select on columns"""
    distinct_on: [favorites_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [favorites_order_by!]

    """filter the rows returned"""
    where: favorites_bool_exp
  ): favorites_aggregate!

  """
  A computed field, executes function "user_feature_flags"
  """
  feature_flags(
    """JSON select path"""
    path: String
  ): jsonb
  is_ab_staff: Boolean

  """
  A computed field, executes function "user_is_curated"
  """
  is_curated: Boolean
  is_curator: Boolean

  """
  A computed field, executes function "generate_nonce"
  """
  nonce: String

  """An object relationship"""
  profile: user_profiles

  """An array relationship"""
  projects_created(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): [projects_metadata!]!

  """An aggregate relationship"""
  projects_created_aggregate(
    """distinct select on columns"""
    distinct_on: [projects_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projects_metadata_order_by!]

    """filter the rows returned"""
    where: projects_metadata_bool_exp
  ): projects_metadata_aggregate!
  public_address: String!

  """An array relationship"""
  receipts(
    """distinct select on columns"""
    distinct_on: [receipt_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [receipt_metadata_order_by!]

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): [receipt_metadata!]!

  """An aggregate relationship"""
  receipts_aggregate(
    """distinct select on columns"""
    distinct_on: [receipt_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [receipt_metadata_order_by!]

    """filter the rows returned"""
    where: receipt_metadata_bool_exp
  ): receipt_metadata_aggregate!

  """An array relationship"""
  tags(
    """distinct select on columns"""
    distinct_on: [entity_tags_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [entity_tags_order_by!]

    """filter the rows returned"""
    where: entity_tags_bool_exp
  ): [entity_tags!]!

  """An array relationship"""
  tokens(
    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): [tokens_metadata!]!

  """An aggregate relationship"""
  tokens_aggregate(
    """distinct select on columns"""
    distinct_on: [tokens_metadata_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [tokens_metadata_order_by!]

    """filter the rows returned"""
    where: tokens_metadata_bool_exp
  ): tokens_metadata_aggregate!
  tos_accepted_at: timestamptz
  viewed_warning_banner: Boolean

  """An object relationship"""
  webflow_artist_info: webflow_artist_info
}

"""
aggregated selection of "users"
"""
type users_aggregate {
  aggregate: users_aggregate_fields
  nodes: [users!]!
}

"""
aggregate fields of "users"
"""
type users_aggregate_fields {
  count(columns: [users_select_column!], distinct: Boolean): Int!
  max: users_max_fields
  min: users_min_fields
}

"""
Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'.
"""
input users_bool_exp {
  _and: [users_bool_exp!]
  _not: users_bool_exp
  _or: [users_bool_exp!]
  allowlisted_on: contract_allowlistings_bool_exp
  bids: bids_metadata_bool_exp
  bids_aggregate: bids_metadata_aggregate_bool_exp
  created_at: timestamptz_comparison_exp
  display_name: String_comparison_exp
  favorited_by_user: Boolean_comparison_exp
  favorites: favorites_bool_exp
  favorites_aggregate: favorites_aggregate_bool_exp
  feature_flags: jsonb_comparison_exp
  is_ab_staff: Boolean_comparison_exp
  is_curated: Boolean_comparison_exp
  is_curator: Boolean_comparison_exp
  nonce: String_comparison_exp
  profile: user_profiles_bool_exp
  projects_created: projects_metadata_bool_exp
  projects_created_aggregate: projects_metadata_aggregate_bool_exp
  public_address: String_comparison_exp
  receipts: receipt_metadata_bool_exp
  receipts_aggregate: receipt_metadata_aggregate_bool_exp
  tags: entity_tags_bool_exp
  tokens: tokens_metadata_bool_exp
  tokens_aggregate: tokens_metadata_aggregate_bool_exp
  tos_accepted_at: timestamptz_comparison_exp
  viewed_warning_banner: Boolean_comparison_exp
  webflow_artist_info: webflow_artist_info_bool_exp
}

"""aggregate max on columns"""
type users_max_fields {
  created_at: timestamptz

  """
  A computed field, executes function "user_display_name"
  """
  display_name: String

  """
  A computed field, executes function "generate_nonce"
  """
  nonce: String
  public_address: String
  tos_accepted_at: timestamptz
}

"""aggregate min on columns"""
type users_min_fields {
  created_at: timestamptz

  """
  A computed field, executes function "user_display_name"
  """
  display_name: String

  """
  A computed field, executes function "generate_nonce"
  """
  nonce: String
  public_address: String
  tos_accepted_at: timestamptz
}

"""Ordering options when selecting data from "users"."""
input users_order_by {
  allowlisted_on_aggregate: contract_allowlistings_aggregate_order_by
  bids_aggregate: bids_metadata_aggregate_order_by
  created_at: order_by
  display_name: order_by
  favorited_by_user: order_by
  favorites_aggregate: favorites_aggregate_order_by
  feature_flags: order_by
  is_ab_staff: order_by
  is_curated: order_by
  is_curator: order_by
  nonce: order_by
  profile: user_profiles_order_by
  projects_created_aggregate: projects_metadata_aggregate_order_by
  public_address: order_by
  receipts_aggregate: receipt_metadata_aggregate_order_by
  tags_aggregate: entity_tags_aggregate_order_by
  tokens_aggregate: tokens_metadata_aggregate_order_by
  tos_accepted_at: order_by
  viewed_warning_banner: order_by
  webflow_artist_info: webflow_artist_info_order_by
}

"""
select columns of table "users"
"""
enum users_select_column {
  """column name"""
  created_at

  """column name"""
  is_ab_staff

  """column name"""
  is_curator

  """column name"""
  public_address

  """column name"""
  tos_accepted_at

  """column name"""
  viewed_warning_banner
}

"""
Streaming cursor of the table "users"
"""
input users_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: users_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input users_stream_cursor_value_input {
  created_at: timestamptz
  is_ab_staff: Boolean
  is_curator: Boolean
  public_address: String
  tos_accepted_at: timestamptz
  viewed_warning_banner: Boolean
}

scalar uuid

"""
Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'.
"""
input uuid_comparison_exp {
  _eq: uuid
  _gt: uuid
  _gte: uuid
  _in: [uuid!]
  _is_null: Boolean
  _lt: uuid
  _lte: uuid
  _neq: uuid
  _nin: [uuid!]
}

"""vertical enums"""
type verticals {
  name: String!

  """An object relationship"""
  project_vertical: project_verticals
}

"""
Boolean expression to filter rows from the table "verticals". All fields are combined with a logical 'AND'.
"""
input verticals_bool_exp {
  _and: [verticals_bool_exp!]
  _not: verticals_bool_exp
  _or: [verticals_bool_exp!]
  name: String_comparison_exp
  project_vertical: project_verticals_bool_exp
}

enum verticals_enum {
  digixbrightmoments
  digixpace
  curated
  explorations
  factory
  flex
  fullyonchain
  playground
  presents
  unassigned
}

"""
Boolean expression to compare columns of type "verticals_enum". All fields are combined with logical 'AND'.
"""
input verticals_enum_comparison_exp {
  _eq: verticals_enum
  _in: [verticals_enum!]
  _is_null: Boolean
  _neq: verticals_enum
  _nin: [verticals_enum!]
}

"""Ordering options when selecting data from "verticals"."""
input verticals_order_by {
  name: order_by
  project_vertical: project_verticals_order_by
}

"""
select columns of table "verticals"
"""
enum verticals_select_column {
  """column name"""
  name
}

"""
Streaming cursor of the table "verticals"
"""
input verticals_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: verticals_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input verticals_stream_cursor_value_input {
  name: String
}

"""
Table describing the valid aspect ratios available to projects when generating video preview assets.
"""
type video_aspect_ratios {
  label: String!
  value: numeric!
}

"""
Boolean expression to filter rows from the table "video_aspect_ratios". All fields are combined with a logical 'AND'.
"""
input video_aspect_ratios_bool_exp {
  _and: [video_aspect_ratios_bool_exp!]
  _not: video_aspect_ratios_bool_exp
  _or: [video_aspect_ratios_bool_exp!]
  label: String_comparison_exp
  value: numeric_comparison_exp
}

"""Ordering options when selecting data from "video_aspect_ratios"."""
input video_aspect_ratios_order_by {
  label: order_by
  value: order_by
}

"""
select columns of table "video_aspect_ratios"
"""
enum video_aspect_ratios_select_column {
  """column name"""
  label

  """column name"""
  value
}

"""
Streaming cursor of the table "video_aspect_ratios"
"""
input video_aspect_ratios_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: video_aspect_ratios_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input video_aspect_ratios_stream_cursor_value_input {
  label: String
  value: numeric
}

"""
Table describing the valid frame rates available to projects when generating dynamic media assets.
"""
type video_frame_rates {
  value: Int!
}

"""
Boolean expression to filter rows from the table "video_frame_rates". All fields are combined with a logical 'AND'.
"""
input video_frame_rates_bool_exp {
  _and: [video_frame_rates_bool_exp!]
  _not: video_frame_rates_bool_exp
  _or: [video_frame_rates_bool_exp!]
  value: Int_comparison_exp
}

"""Ordering options when selecting data from "video_frame_rates"."""
input video_frame_rates_order_by {
  value: order_by
}

"""
select columns of table "video_frame_rates"
"""
enum video_frame_rates_select_column {
  """column name"""
  value
}

"""
Streaming cursor of the table "video_frame_rates"
"""
input video_frame_rates_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: video_frame_rates_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input video_frame_rates_stream_cursor_value_input {
  value: Int
}

"""
columns and relationships of "webflow_artist_info"
"""
type webflow_artist_info {
  published: Boolean!
  raw_data(
    """JSON select path"""
    path: String
  ): jsonb!
  slug: String!

  """An object relationship"""
  user: users!
  user_public_address: String!
  webflow_collection_id: String!
  webflow_item_id: String!
}

"""
Boolean expression to filter rows from the table "webflow_artist_info". All fields are combined with a logical 'AND'.
"""
input webflow_artist_info_bool_exp {
  _and: [webflow_artist_info_bool_exp!]
  _not: webflow_artist_info_bool_exp
  _or: [webflow_artist_info_bool_exp!]
  published: Boolean_comparison_exp
  raw_data: jsonb_comparison_exp
  slug: String_comparison_exp
  user: users_bool_exp
  user_public_address: String_comparison_exp
  webflow_collection_id: String_comparison_exp
  webflow_item_id: String_comparison_exp
}

"""Ordering options when selecting data from "webflow_artist_info"."""
input webflow_artist_info_order_by {
  published: order_by
  raw_data: order_by
  slug: order_by
  user: users_order_by
  user_public_address: order_by
  webflow_collection_id: order_by
  webflow_item_id: order_by
}

"""
select columns of table "webflow_artist_info"
"""
enum webflow_artist_info_select_column {
  """column name"""
  published

  """column name"""
  raw_data

  """column name"""
  slug

  """column name"""
  user_public_address

  """column name"""
  webflow_collection_id

  """column name"""
  webflow_item_id
}

"""
Streaming cursor of the table "webflow_artist_info"
"""
input webflow_artist_info_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: webflow_artist_info_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input webflow_artist_info_stream_cursor_value_input {
  published: Boolean
  raw_data: jsonb
  slug: String
  user_public_address: String
  webflow_collection_id: String
  webflow_item_id: String
}

"""
columns and relationships of "webflow_spectrum_articles"
"""
type webflow_spectrum_articles {
  category: String!
  description: String!
  extra_info: String
  image: String!
  published_at: timestamptz
  raw_data(
    """JSON select path"""
    path: String
  ): jsonb!
  section: String
  slug: String!
  title: String!
  webflow_collection_id: String!
  webflow_item_id: String!
}

"""
Boolean expression to filter rows from the table "webflow_spectrum_articles". All fields are combined with a logical 'AND'.
"""
input webflow_spectrum_articles_bool_exp {
  _and: [webflow_spectrum_articles_bool_exp!]
  _not: webflow_spectrum_articles_bool_exp
  _or: [webflow_spectrum_articles_bool_exp!]
  category: String_comparison_exp
  description: String_comparison_exp
  extra_info: String_comparison_exp
  image: String_comparison_exp
  published_at: timestamptz_comparison_exp
  raw_data: jsonb_comparison_exp
  section: String_comparison_exp
  slug: String_comparison_exp
  title: String_comparison_exp
  webflow_collection_id: String_comparison_exp
  webflow_item_id: String_comparison_exp
}

"""Ordering options when selecting data from "webflow_spectrum_articles"."""
input webflow_spectrum_articles_order_by {
  category: order_by
  description: order_by
  extra_info: order_by
  image: order_by
  published_at: order_by
  raw_data: order_by
  section: order_by
  slug: order_by
  title: order_by
  webflow_collection_id: order_by
  webflow_item_id: order_by
}

"""
select columns of table "webflow_spectrum_articles"
"""
enum webflow_spectrum_articles_select_column {
  """column name"""
  category

  """column name"""
  description

  """column name"""
  extra_info

  """column name"""
  image

  """column name"""
  published_at

  """column name"""
  raw_data

  """column name"""
  section

  """column name"""
  slug

  """column name"""
  title

  """column name"""
  webflow_collection_id

  """column name"""
  webflow_item_id
}

"""
Streaming cursor of the table "webflow_spectrum_articles"
"""
input webflow_spectrum_articles_stream_cursor_input {
  """Stream column input with initial value"""
  initial_value: webflow_spectrum_articles_stream_cursor_value_input!

  """cursor ordering"""
  ordering: cursor_ordering
}

"""Initial value of the column from where the streaming should start"""
input webflow_spectrum_articles_stream_cursor_value_input {
  category: String
  description: String
  extra_info: String
  image: String
  published_at: timestamptz
  raw_data: jsonb
  section: String
  slug: String
  title: String
  webflow_collection_id: String
  webflow_item_id: String
}